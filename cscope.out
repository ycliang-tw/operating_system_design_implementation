cscope 15 $HOME/Desktop/osdi -q 0000005586 0000556843
	@linux-0.11/fs/bitmap.c

8 
	~<°rög.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

13 
	#˛ór_block
(
addr
) \

14 
__asm__
 
	`__vﬁ©ûe__
 ("cld\n\t" \

17 ::"a" (0),"c" (
BLOCK_SIZE
/4),"D" ((Ë(
addr
)))

	)

19 
	#£t_bô
(
ƒ
,
addr
) ({\

20 
ªs
 ; \

21 
__asm__
 
	`__vﬁ©ûe__
("btsl %2,%3\n\tsetb %%al": \

22 "˜" (
ªs
):"0" (0),"r" (
ƒ
),"m" (*(
addr
))); \

23 
ªs
;})

	)

25 
	#˛ór_bô
(
ƒ
,
addr
) ({\

26 
ªs
 ; \

27 
__asm__
 
	`__vﬁ©ûe__
("btrl %2,%3\n\tsetnb %%al": \

28 "˜" (
ªs
):"0" (0),"r" (
ƒ
),"m" (*(
addr
))); \

29 
ªs
;})

	)

31 
	#föd_fú°_zîo
(
addr
) ({ \

32 
__ªs
; \

33 
__asm__
 
	`__vﬁ©ûe__
 ("cld\n" \

44 :"=c" (
__ªs
):"c" (0),"S" (
addr
)); \

45 
__ªs
;})

	)

47 
	$‰ì_block
(
dev
, 
block
)

49 
su≥r_block
 * 
sb
;

50 
buf„r_hód
 * 
bh
;

52 i‡(!(
sb
 = 
	`gë_su≥r
(
dev
)))

53 
	`∑nic
("tryingÅo free block onÇonexistent device");

54 i‡(
block
 < 
sb
->
s_fú°d©az⁄e
 || block >sb->
s_nz⁄es
)

55 
	`∑nic
("tryingÅo free blockÇot in datazone");

56 
bh
 = 
	`gë_hash_èbÀ
(
dev
,
block
);

57 i‡(
bh
) {

58 i‡(
bh
->
b_cou¡
 != 1) {

59 
	`¥ötk
("tryingÅo free block (%04x:%d), count=%d\n",

60 
dev
,
block
,
bh
->
b_cou¡
);

63 
bh
->
b_dút
=0;

64 
bh
->
b_u±od©e
=0;

65 
	`bªl£
(
bh
);

67 
block
 -
sb
->
s_fú°d©az⁄e
 - 1 ;

68 i‡(
	`˛ór_bô
(
block
&8191,
sb
->
s_zm≠
[block/8192]->
b_d©a
)) {

69 
	`¥ötk
("block (%04x:%dË",
dev
,
block
+
sb
->
s_fú°d©az⁄e
-1);

70 
	`∑nic
("free_block: bitálready cleared");

72 
sb
->
s_zm≠
[
block
/8192]->
b_dút
 = 1;

73 
	}
}

75 
	$√w_block
(
dev
)

77 
buf„r_hód
 * 
bh
;

78 
su≥r_block
 * 
sb
;

79 
i
,
j
;

81 i‡(!(
sb
 = 
	`gë_su≥r
(
dev
)))

82 
	`∑nic
("tryingÅo getÇew block fromÇonexistant device");

83 
j
 = 8192;

84 
i
=0 ; i<8 ; i++)

85 i‡((
bh
=
sb
->
s_zm≠
[
i
]))

86 i‡((
j
=
	`föd_fú°_zîo
(
bh
->
b_d©a
))<8192)

88 i‡(
i
>=8 || !
bh
 || 
j
>=8192)

90 i‡(
	`£t_bô
(
j
,
bh
->
b_d©a
))

91 
	`∑nic
("new_block: bitálready set");

92 
bh
->
b_dút
 = 1;

93 
j
 +
i
*8192 + 
sb
->
s_fú°d©az⁄e
-1;

94 i‡(
j
 >
sb
->
s_nz⁄es
)

96 i‡(!(
bh
=
	`gëblk
(
dev
,
j
)))

97 
	`∑nic
("new_block: cannot get block");

98 i‡(
bh
->
b_cou¡
 != 1)

99 
	`∑nic
("new block: count is != 1");

100 
	`˛ór_block
(
bh
->
b_d©a
);

101 
bh
->
b_u±od©e
 = 1;

102 
bh
->
b_dút
 = 1;

103 
	`bªl£
(
bh
);

104  
j
;

105 
	}
}

107 
	$‰ì_öode
(
m_öode
 * 
öode
)

109 
su≥r_block
 * 
sb
;

110 
buf„r_hód
 * 
bh
;

112 i‡(!
öode
)

114 i‡(!
öode
->
i_dev
) {

115 
	`mem£t
(
öode
,0,(*inode));

118 i‡(
öode
->
i_cou¡
>1) {

119 
	`¥ötk
("åyögÅÿ‰ì inodêwôh cou¡=%d\n",
öode
->
i_cou¡
);

120 
	`∑nic
("free_inode");

122 i‡(
öode
->
i_∆öks
)

123 
	`∑nic
("tryingÅo free inode withÜinks");

124 i‡(!(
sb
 = 
	`gë_su≥r
(
öode
->
i_dev
)))

125 
	`∑nic
("tryingÅo free inode onÇonexistent device");

126 i‡(
öode
->
i_num
 < 1 || inode->i_num > 
sb
->
s_nöodes
)

127 
	`∑nic
("tryingÅo free inode 0 orÇonexistant inode");

128 i‡(!(
bh
=
sb
->
s_im≠
[
öode
->
i_num
>>13]))

129 
	`∑nic
("nonexistent imap in superblock");

130 i‡(
	`˛ór_bô
(
öode
->
i_num
&8191,
bh
->
b_d©a
))

131 
	`¥ötk
("free_inode: bitálready cleared.\n\r");

132 
bh
->
b_dút
 = 1;

133 
	`mem£t
(
öode
,0,(*inode));

134 
	}
}

136 
m_öode
 * 
	$√w_öode
(
dev
)

138 
m_öode
 * 
öode
;

139 
su≥r_block
 * 
sb
;

140 
buf„r_hód
 * 
bh
;

141 
i
,
j
;

143 i‡(!(
öode
=
	`gë_em±y_öode
()))

144  
NULL
;

145 i‡(!(
sb
 = 
	`gë_su≥r
(
dev
)))

146 
	`∑nic
("new_inode with unknown device");

147 
j
 = 8192;

148 
i
=0 ; i<8 ; i++)

149 i‡((
bh
=
sb
->
s_im≠
[
i
]))

150 i‡((
j
=
	`föd_fú°_zîo
(
bh
->
b_d©a
))<8192)

152 i‡(!
bh
 || 
j
 >8192 || j+
i
*8192 > 
sb
->
s_nöodes
) {

153 
	`ùut
(
öode
);

154  
NULL
;

156 i‡(
	`£t_bô
(
j
,
bh
->
b_d©a
))

157 
	`∑nic
("new_inode: bitálready set");

158 
bh
->
b_dút
 = 1;

159 
öode
->
i_cou¡
=1;

160 
öode
->
i_∆öks
=1;

161 
öode
->
i_dev
=
dev
;

162 
öode
->
i_uid
=
cuºít
->
euid
;

163 
öode
->
i_gid
=
cuºít
->
egid
;

164 
öode
->
i_dút
=1;

165 
öode
->
i_num
 = 
j
 + 
i
*8192;

166 
öode
->
i_mtime
 = inode->
i_©ime
 = inode->
i_˘ime
 = 
CURRENT_TIME
;

167  
öode
;

168 
	}
}

	@linux-0.11/fs/block_dev.c

7 
	~<î∫o.h
>

9 
	~<löux/sched.h
>

10 
	~<löux/kî√l.h
>

11 
	~<asm/£gmít.h
>

12 
	~<asm/sy°em.h
>

14 
	$block_wrôe
(
dev
, * 
pos
, * 
buf
, 
cou¡
)

16 
block
 = *
pos
 >> 
BLOCK_SIZE_BITS
;

17 
off£t
 = *
pos
 & (
BLOCK_SIZE
-1);

18 
ch¨s
;

19 
wrôãn
 = 0;

20 
buf„r_hód
 * 
bh
;

21 * 
p
;

23 
cou¡
>0) {

24 
ch¨s
 = 
BLOCK_SIZE
 - 
off£t
;

25 i‡(
ch¨s
 > 
cou¡
)

26 
ch¨s
=
cou¡
;

27 i‡(
ch¨s
 =
BLOCK_SIZE
)

28 
bh
 = 
	`gëblk
(
dev
,
block
);

30 
bh
 = 
	`bªada
(
dev
,
block
,block+1,block+2,-1);

31 
block
++;

32 i‡(!
bh
)

33  
wrôãn
?wrôãn:-
EIO
;

34 
p
 = 
off£t
 + 
bh
->
b_d©a
;

35 
off£t
 = 0;

36 *
pos
 +
ch¨s
;

37 
wrôãn
 +
ch¨s
;

38 
cou¡
 -
ch¨s
;

39 
ch¨s
-->0)

40 *(
p
++Ë
	`gë_fs_byã
(
buf
++);

41 
bh
->
b_dút
 = 1;

42 
	`bªl£
(
bh
);

44  
wrôãn
;

45 
	}
}

47 
	$block_ªad
(
dev
, * 
pos
, * 
buf
, 
cou¡
)

49 
block
 = *
pos
 >> 
BLOCK_SIZE_BITS
;

50 
off£t
 = *
pos
 & (
BLOCK_SIZE
-1);

51 
ch¨s
;

52 
ªad
 = 0;

53 
buf„r_hód
 * 
bh
;

54 * 
p
;

56 
cou¡
>0) {

57 
ch¨s
 = 
BLOCK_SIZE
-
off£t
;

58 i‡(
ch¨s
 > 
cou¡
)

59 
ch¨s
 = 
cou¡
;

60 i‡(!(
bh
 = 
	`bªada
(
dev
,
block
,block+1,block+2,-1)))

61  
ªad
?ªad:-
EIO
;

62 
block
++;

63 
p
 = 
off£t
 + 
bh
->
b_d©a
;

64 
off£t
 = 0;

65 *
pos
 +
ch¨s
;

66 
ªad
 +
ch¨s
;

67 
cou¡
 -
ch¨s
;

68 
ch¨s
-->0)

69 
	`put_fs_byã
(*(
p
++),
buf
++);

70 
	`bªl£
(
bh
);

72  
ªad
;

73 
	}
}

	@linux-0.11/fs/buffer.c

21 
	~<°d¨g.h
>

23 
	~<löux/c⁄fig.h
>

24 
	~<löux/sched.h
>

25 
	~<löux/kî√l.h
>

26 
	~<asm/sy°em.h
>

27 
	~<asm/io.h
>

29 
íd
;

30 
put_su≥r
();

31 
övÆid©e_öodes
();

33 
buf„r_hód
 * 
	g°¨t_buf„r
 = (buf„r_hód *Ë&
íd
;

34 
buf„r_hód
 * 
	ghash_èbÀ
[
NR_HASH
];

35 
buf„r_hód
 * 
	g‰ì_li°
;

36 
èsk_°ru˘
 * 
	gbuf„r_waô
 = 
NULL
;

37 
	gNR_BUFFERS
 = 0;

39 
ölöe
 
	$waô_⁄_buf„r
(
buf„r_hód
 * 
bh
)

41 
	`˛i
();

42 
bh
->
b_lock
)

43 
	`¶ìp_⁄
(&
bh
->
b_waô
);

44 
	`°i
();

45 
	}
}

47 
	$sys_sync
()

49 
i
;

50 
buf„r_hód
 * 
bh
;

52 
	`sync_öodes
();

53 
bh
 = 
°¨t_buf„r
;

54 
i
=0 ; i<
NR_BUFFERS
 ; i++,
bh
++) {

55 
	`waô_⁄_buf„r
(
bh
);

56 i‡(
bh
->
b_dút
)

57 
	`Œ_rw_block
(
WRITE
,
bh
);

60 
	}
}

62 
	$sync_dev
(
dev
)

64 
i
;

65 
buf„r_hód
 * 
bh
;

67 
bh
 = 
°¨t_buf„r
;

68 
i
=0 ; i<
NR_BUFFERS
 ; i++,
bh
++) {

69 i‡(
bh
->
b_dev
 !
dev
)

71 
	`waô_⁄_buf„r
(
bh
);

72 i‡(
bh
->
b_dev
 =
dev
 && bh->
b_dút
)

73 
	`Œ_rw_block
(
WRITE
,
bh
);

75 
	`sync_öodes
();

76 
bh
 = 
°¨t_buf„r
;

77 
i
=0 ; i<
NR_BUFFERS
 ; i++,
bh
++) {

78 i‡(
bh
->
b_dev
 !
dev
)

80 
	`waô_⁄_buf„r
(
bh
);

81 i‡(
bh
->
b_dev
 =
dev
 && bh->
b_dút
)

82 
	`Œ_rw_block
(
WRITE
,
bh
);

85 
	}
}

87 
ölöe
 
	$övÆid©e_buf„rs
(
dev
)

89 
i
;

90 
buf„r_hód
 * 
bh
;

92 
bh
 = 
°¨t_buf„r
;

93 
i
=0 ; i<
NR_BUFFERS
 ; i++,
bh
++) {

94 i‡(
bh
->
b_dev
 !
dev
)

96 
	`waô_⁄_buf„r
(
bh
);

97 i‡(
bh
->
b_dev
 =
dev
)

98 
bh
->
b_u±od©e
 = bh->
b_dút
 = 0;

100 
	}
}

116 
	$check_disk_ch™ge
(
dev
)

118 
i
;

120 i‡(
	`MAJOR
(
dev
) != 2)

122 i‡(!
	`Ê›py_ch™ge
(
dev
 & 0x03))

124 
i
=0 ; i<
NR_SUPER
 ; i++)

125 i‡(
su≥r_block
[
i
].
s_dev
 =
dev
)

126 
	`put_su≥r
(
su≥r_block
[
i
].
s_dev
);

127 
	`övÆid©e_öodes
(
dev
);

128 
	`övÆid©e_buf„rs
(
dev
);

129 
	}
}

131 
	#_hash‚
(
dev
,
block
Ë((()(dev^block))%
NR_HASH
)

	)

132 
	#hash
(
dev
,
block
Ë
hash_èbÀ
[
	`_hash‚
(dev,block)]

	)

134 
ölöe
 
	$ªmove_‰om_queues
(
buf„r_hód
 * 
bh
)

137 i‡(
bh
->
b_√xt
)

138 
bh
->
b_√xt
->
b_¥ev
 = bh->b_prev;

139 i‡(
bh
->
b_¥ev
)

140 
bh
->
b_¥ev
->
b_√xt
 = bh->b_next;

141 i‡(
	`hash
(
bh
->
b_dev
,bh->
b_blockƒ
) == bh)

142 
	`hash
(
bh
->
b_dev
,bh->
b_blockƒ
Ëbh->
b_√xt
;

144 i‡(!(
bh
->
b_¥ev_‰ì
Ë|| !(bh->
b_√xt_‰ì
))

145 
	`∑nic
("Free blockÜist corrupted");

146 
bh
->
b_¥ev_‰ì
->
b_√xt_‰ì
 = bh->b_next_free;

147 
bh
->
b_√xt_‰ì
->
b_¥ev_‰ì
 = bh->b_prev_free;

148 i‡(
‰ì_li°
 =
bh
)

149 
‰ì_li°
 = 
bh
->
b_√xt_‰ì
;

150 
	}
}

152 
ölöe
 
	$ö£π_öto_queues
(
buf„r_hód
 * 
bh
)

155 
bh
->
b_√xt_‰ì
 = 
‰ì_li°
;

156 
bh
->
b_¥ev_‰ì
 = 
‰ì_li°
->b_prev_free;

157 
‰ì_li°
->
b_¥ev_‰ì
->
b_√xt_‰ì
 = 
bh
;

158 
‰ì_li°
->
b_¥ev_‰ì
 = 
bh
;

160 
bh
->
b_¥ev
 = 
NULL
;

161 
bh
->
b_√xt
 = 
NULL
;

162 i‡(!
bh
->
b_dev
)

164 
bh
->
b_√xt
 = 
	`hash
(bh->
b_dev
,bh->
b_blockƒ
);

165 
	`hash
(
bh
->
b_dev
,bh->
b_blockƒ
) = bh;

166 
bh
->
b_√xt
->
b_¥ev
 = bh;

167 
	}
}

169 
buf„r_hód
 * 
	$föd_buf„r
(
dev
, 
block
)

171 
buf„r_hód
 * 
tmp
;

173 
tmp
 = 
	`hash
(
dev
,
block
Ë;Åm∞!
NULL
 ;Åm∞tmp->
b_√xt
)

174 i‡(
tmp
->
b_dev
==
dev
 &&Åmp->
b_blockƒ
==
block
)

175  
tmp
;

176  
NULL
;

177 
	}
}

186 
buf„r_hód
 * 
	$gë_hash_èbÀ
(
dev
, 
block
)

188 
buf„r_hód
 * 
bh
;

191 i‡(!(
bh
=
	`föd_buf„r
(
dev
,
block
)))

192  
NULL
;

193 
bh
->
b_cou¡
++;

194 
	`waô_⁄_buf„r
(
bh
);

195 i‡(
bh
->
b_dev
 =
dev
 && bh->
b_blockƒ
 =
block
)

196  
bh
;

197 
bh
->
b_cou¡
--;

199 
	}
}

208 
	#BADNESS
(
bh
Ë(((bh)->
b_dút
<<1)+(bh)->
b_lock
)

	)

209 
buf„r_hód
 * 
	$gëblk
(
dev
,
block
)

211 
buf„r_hód
 * 
tmp
, * 
bh
;

213 
ª≥©
:

214 i‡((
bh
 = 
	`gë_hash_èbÀ
(
dev
,
block
)))

215  
bh
;

216 
tmp
 = 
‰ì_li°
;

218 i‡(
tmp
->
b_cou¡
)

220 i‡(!
bh
 || 
	`BADNESS
(
tmp
)<BADNESS(bh)) {

221 
bh
 = 
tmp
;

222 i‡(!
	`BADNESS
(
tmp
))

226 } (
tmp
 =Åmp->
b_√xt_‰ì
Ë!
‰ì_li°
);

227 i‡(!
bh
) {

228 
	`¶ìp_⁄
(&
buf„r_waô
);

229 
ª≥©
;

231 
	`waô_⁄_buf„r
(
bh
);

232 i‡(
bh
->
b_cou¡
)

233 
ª≥©
;

234 
bh
->
b_dút
) {

235 
	`sync_dev
(
bh
->
b_dev
);

236 
	`waô_⁄_buf„r
(
bh
);

237 i‡(
bh
->
b_cou¡
)

238 
ª≥©
;

242 i‡(
	`föd_buf„r
(
dev
,
block
))

243 
ª≥©
;

246 
bh
->
b_cou¡
=1;

247 
bh
->
b_dút
=0;

248 
bh
->
b_u±od©e
=0;

249 
	`ªmove_‰om_queues
(
bh
);

250 
bh
->
b_dev
=
dev
;

251 
bh
->
b_blockƒ
=
block
;

252 
	`ö£π_öto_queues
(
bh
);

253  
bh
;

254 
	}
}

256 
	$bªl£
(
buf„r_hód
 * 
buf
)

258 i‡(!
buf
)

260 
	`waô_⁄_buf„r
(
buf
);

261 i‡(!(
buf
->
b_cou¡
--))

262 
	`∑nic
("TryingÅo free free buffer");

263 
	`wake_up
(&
buf„r_waô
);

264 
	}
}

270 
buf„r_hód
 * 
	$bªad
(
dev
,
block
)

272 
buf„r_hód
 * 
bh
;

274 i‡(!(
bh
=
	`gëblk
(
dev
,
block
)))

275 
	`∑nic
("bread: getblkÑeturned NULL\n");

276 i‡(
bh
->
b_u±od©e
)

277  
bh
;

278 
	`Œ_rw_block
(
READ
,
bh
);

279 
	`waô_⁄_buf„r
(
bh
);

280 i‡(
bh
->
b_u±od©e
)

281  
bh
;

282 
	`bªl£
(
bh
);

283  
NULL
;

284 
	}
}

286 
	#COPYBLK
(
‰om
,
to
) \

287 
	`__asm__
("cld\n\t" \

290 ::"c" (
BLOCK_SIZE
/4),"S" (
‰om
),"D" (
to
) \

291 )

	)

299 
	$bªad_∑ge
(
addªss
,
dev
,
b
[4])

301 
buf„r_hód
 * 
bh
[4];

302 
i
;

304 
i
=0 ; i<4 ; i++)

305 i‡(
b
[
i
]) {

306 i‡((
bh
[
i
] = 
	`gëblk
(
dev
,
b
[i])))

307 i‡(!
bh
[
i
]->
b_u±od©e
)

308 
	`Œ_rw_block
(
READ
,
bh
[
i
]);

310 
bh
[
i
] = 
NULL
;

311 
i
=0 ; i<4 ; i++,
addªss
 +
BLOCK_SIZE
)

312 i‡(
bh
[
i
]) {

313 
	`waô_⁄_buf„r
(
bh
[
i
]);

314 i‡(
bh
[
i
]->
b_u±od©e
)

315 
	`COPYBLK
((Ë
bh
[
i
]->
b_d©a
,
addªss
);

316 
	`bªl£
(
bh
[
i
]);

318 
	}
}

325 
buf„r_hód
 * 
	$bªada
(
dev
,
fú°
, ...)

327 
va_li°
 
¨gs
;

328 
buf„r_hód
 * 
bh
, *
tmp
;

330 
	`va_°¨t
(
¨gs
,
fú°
);

331 i‡(!(
bh
=
	`gëblk
(
dev
,
fú°
)))

332 
	`∑nic
("bread: getblkÑeturned NULL\n");

333 i‡(!
bh
->
b_u±od©e
)

334 
	`Œ_rw_block
(
READ
,
bh
);

335 (
fú°
=
	`va_¨g
(
¨gs
,))>=0) {

336 
tmp
=
	`gëblk
(
dev
,
fú°
);

337 i‡(
tmp
) {

338 i‡(!
tmp
->
b_u±od©e
)

339 
	`Œ_rw_block
(
READA
,
bh
);

340 
tmp
->
b_cou¡
--;

343 
	`va_íd
(
¨gs
);

344 
	`waô_⁄_buf„r
(
bh
);

345 i‡(
bh
->
b_u±od©e
)

346  
bh
;

347 
	`bªl£
(
bh
);

348  (
NULL
);

349 
	}
}

351 
	$buf„r_öô
(
buf„r_íd
)

353 
buf„r_hód
 * 
h
 = 
°¨t_buf„r
;

354 * 
b
;

355 
i
;

357 i‡(
buf„r_íd
 == 1<<20)

358 
b
 = (*) (640*1024);

360 
b
 = (*Ë
buf„r_íd
;

361  (
b
 -
BLOCK_SIZE
Ë>((*Ë(
h
+1)) ) {

362 
h
->
b_dev
 = 0;

363 
h
->
b_dút
 = 0;

364 
h
->
b_cou¡
 = 0;

365 
h
->
b_lock
 = 0;

366 
h
->
b_u±od©e
 = 0;

367 
h
->
b_waô
 = 
NULL
;

368 
h
->
b_√xt
 = 
NULL
;

369 
h
->
b_¥ev
 = 
NULL
;

370 
h
->
b_d©a
 = (*Ë
b
;

371 
h
->
b_¥ev_‰ì
 = h-1;

372 
h
->
b_√xt_‰ì
 = h+1;

373 
h
++;

374 
NR_BUFFERS
++;

375 i‡(
b
 == (*) 0x100000)

376 
b
 = (*) 0xA0000;

378 
h
--;

379 
‰ì_li°
 = 
°¨t_buf„r
;

380 
‰ì_li°
->
b_¥ev_‰ì
 = 
h
;

381 
h
->
b_√xt_‰ì
 = 
‰ì_li°
;

382 
i
=0;i<
NR_HASH
;i++)

383 
hash_èbÀ
[
i
]=
NULL
;

384 
	}
}

	@linux-0.11/fs/char_dev.c

7 
	~<î∫o.h
>

8 
	~<sys/ty≥s.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

13 
	~<asm/£gmít.h
>

14 
	~<asm/io.h
>

16 
ây_ªad
(
mö‹
,* 
buf
,
cou¡
);

17 
ây_wrôe
(
mö‹
,* 
buf
,
cou¡
);

19 (*
	t¸w_±r
)(
	trw
,
	tmö‹
,* 
	tbuf
,
	tcou¡
,
	toff_t
 * 
	tpos
);

21 
	$rw_âyx
(
rw
,
mö‹
,* 
buf
,
cou¡
,
off_t
 * 
pos
)

23  ((
rw
==
READ
)?
	`ây_ªad
(
mö‹
,
buf
,
cou¡
):

24 
	`ây_wrôe
(
mö‹
,
buf
,
cou¡
));

25 
	}
}

27 
	$rw_ây
(
rw
,
mö‹
,* 
buf
,
cou¡
, 
off_t
 * 
pos
)

29 i‡(
cuºít
->
ây
<0)

30  -
EPERM
;

31  
	`rw_âyx
(
rw
,
cuºít
->
ây
,
buf
,
cou¡
,
pos
);

32 
	}
}

34 
	$rw_øm
(
rw
,* 
buf
, 
cou¡
, 
off_t
 *
pos
)

36  -
EIO
;

37 
	}
}

39 
	$rw_mem
(
rw
,* 
buf
, 
cou¡
, 
off_t
 * 
pos
)

41  -
EIO
;

42 
	}
}

44 
	$rw_kmem
(
rw
,* 
buf
, 
cou¡
, 
off_t
 * 
pos
)

46  -
EIO
;

47 
	}
}

49 
	$rw_p‹t
(
rw
,* 
buf
, 
cou¡
, 
off_t
 * 
pos
)

51 
i
=*
pos
;

53 
cou¡
-->0 && 
i
<65536) {

54 i‡(
rw
==
READ
)

55 
	`put_fs_byã
(
	`öb
(
i
),
buf
++);

57 
	`outb
(
	`gë_fs_byã
(
buf
++),
i
);

58 
i
++;

60 
i
 -*
pos
;

61 *
pos
 +
i
;

62  
i
;

63 
	}
}

65 
	$rw_mem‹y
(
rw
, 
mö‹
, * 
buf
, 
cou¡
, 
off_t
 * 
pos
)

67 
mö‹
) {

69  
	`rw_øm
(
rw
,
buf
,
cou¡
,
pos
);

71  
	`rw_mem
(
rw
,
buf
,
cou¡
,
pos
);

73  
	`rw_kmem
(
rw
,
buf
,
cou¡
,
pos
);

75  (
rw
==
READ
)?0:
cou¡
;

77  
	`rw_p‹t
(
rw
,
buf
,
cou¡
,
pos
);

79  -
EIO
;

81 
	}
}

83 
	#NRDEVS
 (( (
¸w_èbÀ
))/( (
¸w_±r
)))

	)

85 
¸w_±r
 
	g¸w_èbÀ
[]={

86 
NULL
,

87 
rw_mem‹y
,

88 
NULL
,

89 
NULL
,

90 
rw_âyx
,

91 
rw_ây
,

92 
NULL
,

93 
NULL
};

95 
	$rw_ch¨
(
rw
,
dev
, * 
buf
, 
cou¡
, 
off_t
 * 
pos
)

97 
¸w_±r
 
ˇŒ_addr
;

99 i‡(
	`MAJOR
(
dev
)>=
NRDEVS
)

100  -
ENODEV
;

101 i‡(!(
ˇŒ_addr
=
¸w_èbÀ
[
	`MAJOR
(
dev
)]))

102  -
ENODEV
;

103  
	`ˇŒ_addr
(
rw
,
	`MINOR
(
dev
),
buf
,
cou¡
,
pos
);

104 
	}
}

	@linux-0.11/fs/exec.c

20 
	~<î∫o.h
>

21 
	~<°rög.h
>

22 
	~<sys/°©.h
>

23 
	~<a.out.h
>

25 
	~<löux/fs.h
>

26 
	~<löux/sched.h
>

27 
	~<löux/kî√l.h
>

28 
	~<löux/mm.h
>

29 
	~<asm/£gmít.h
>

31 
sys_exô
(
exô_code
);

32 
sys_˛o£
(
fd
);

39 
	#MAX_ARG_PAGES
 32

	)

46 * 
	$¸óã_èbÀs
(* 
p
,
¨gc
,
ívc
)

48 *
¨gv
,*
ívp
;

49 * 
•
;

51 
•
 = (*Ë(0xfffffff¯& (Ë
p
);

52 
•
 -
ívc
+1;

53 
ívp
 = 
•
;

54 
•
 -
¨gc
+1;

55 
¨gv
 = 
•
;

56 
	`put_fs_l⁄g
(()
ívp
,--
•
);

57 
	`put_fs_l⁄g
(()
¨gv
,--
•
);

58 
	`put_fs_l⁄g
(()
¨gc
,--
•
);

59 
¨gc
-->0) {

60 
	`put_fs_l⁄g
((Ë
p
,
¨gv
++);

61 
	`gë_fs_byã
(
p
++)) ;

63 
	`put_fs_l⁄g
(0,
¨gv
);

64 
ívc
-->0) {

65 
	`put_fs_l⁄g
((Ë
p
,
ívp
++);

66 
	`gë_fs_byã
(
p
++)) ;

68 
	`put_fs_l⁄g
(0,
ívp
);

69  
•
;

70 
	}
}

75 
	$cou¡
(** 
¨gv
)

77 
i
=0;

78 ** 
tmp
;

80 i‡((
tmp
 = 
¨gv
))

81 
	`gë_fs_l⁄g
((*Ë(
tmp
++)))

82 
i
++;

84  
i
;

85 
	}
}

104 
	$c›y_°rögs
(
¨gc
,** 
¨gv
,*
∑ge
,

105 
p
, 
‰om_kmem
)

107 *
tmp
, *
∑g
=
NULL
;

108 
Àn
, 
off£t
 = 0;

109 
ﬁd_fs
, 
√w_fs
;

111 i‡(!
p
)

113 
√w_fs
 = 
	`gë_ds
();

114 
ﬁd_fs
 = 
	`gë_fs
();

115 i‡(
‰om_kmem
==2)

116 
	`£t_fs
(
√w_fs
);

117 
¨gc
-- > 0) {

118 i‡(
‰om_kmem
 == 1)

119 
	`£t_fs
(
√w_fs
);

120 i‡(!(
tmp
 = (*)
	`gë_fs_l⁄g
(((*)
¨gv
)+
¨gc
)))

121 
	`∑nic
("argc is wrong");

122 i‡(
‰om_kmem
 == 1)

123 
	`£t_fs
(
ﬁd_fs
);

124 
Àn
=0;

126 
Àn
++;

127 } 
	`gë_fs_byã
(
tmp
++));

128 i‡(
p
-
Àn
 < 0) {

129 
	`£t_fs
(
ﬁd_fs
);

132 
Àn
) {

133 --
p
; --
tmp
; --
Àn
;

134 i‡(--
off£t
 < 0) {

135 
off£t
 = 
p
 % 
PAGE_SIZE
;

136 i‡(
‰om_kmem
==2)

137 
	`£t_fs
(
ﬁd_fs
);

138 i‡(!(
∑g
 = (*Ë
∑ge
[
p
/
PAGE_SIZE
]) &&

139 !(
∑g
 = (*Ë(
∑ge
[
p
/
PAGE_SIZE
] =

140 
	`gë_‰ì_∑ge
())))

142 i‡(
‰om_kmem
==2)

143 
	`£t_fs
(
√w_fs
);

146 *(
∑g
 + 
off£t
Ë
	`gë_fs_byã
(
tmp
);

149 i‡(
‰om_kmem
==2)

150 
	`£t_fs
(
ﬁd_fs
);

151  
p
;

152 
	}
}

154 
	$ch™ge_ldt
(
ãxt_size
,* 
∑ge
)

156 
code_limô
,
d©a_limô
,
code_ba£
,
d©a_ba£
;

157 
i
;

159 
code_limô
 = 
ãxt_size
+
PAGE_SIZE
 -1;

160 
code_limô
 &= 0xFFFFF000;

161 
d©a_limô
 = 0x4000000;

162 
code_ba£
 = 
	`gë_ba£
(
cuºít
->
ldt
[1]);

163 
d©a_ba£
 = 
code_ba£
;

164 
	`£t_ba£
(
cuºít
->
ldt
[1],
code_ba£
);

165 
	`£t_limô
(
cuºít
->
ldt
[1],
code_limô
);

166 
	`£t_ba£
(
cuºít
->
ldt
[2],
d©a_ba£
);

167 
	`£t_limô
(
cuºít
->
ldt
[2],
d©a_limô
);

169 
	`__asm__
("pushl $0x17\n\tpop %%fs"::);

170 
d©a_ba£
 +
d©a_limô
;

171 
i
=
MAX_ARG_PAGES
-1 ; i>=0 ; i--) {

172 
d©a_ba£
 -
PAGE_SIZE
;

173 i‡(
∑ge
[
i
])

174 
	`put_∑ge
(
∑ge
[
i
],
d©a_ba£
);

176  
d©a_limô
;

177 
	}
}

182 
	$do_execve
(* 
eù
,
tmp
,* 
fûíame
,

183 ** 
¨gv
, ** 
ívp
)

185 
m_öode
 * 
öode
;

186 
buf„r_hód
 * 
bh
;

187 
exec
 
ex
;

188 
∑ge
[
MAX_ARG_PAGES
];

189 
i
,
¨gc
,
ívc
;

190 
e_uid
, 
e_gid
;

191 
ªtvÆ
;

192 
sh_b™g
 = 0;

193 
p
=
PAGE_SIZE
*
MAX_ARG_PAGES
-4;

195 i‡((0xfff‡& 
eù
[1]) != 0x000f)

196 
	`∑nic
("execve called from supervisor mode");

197 
i
=0 ; i<
MAX_ARG_PAGES
 ; i++)

198 
∑ge
[
i
]=0;

199 i‡(!(
öode
=
	`«mei
(
fûíame
)))

200  -
ENOENT
;

201 
¨gc
 = 
	`cou¡
(
¨gv
);

202 
ívc
 = 
	`cou¡
(
ívp
);

204 
ª°¨t_öãΩ
:

205 i‡(!
	`S_ISREG
(
öode
->
i_mode
)) {

206 
ªtvÆ
 = -
EACCES
;

207 
exec_îr‹2
;

209 
i
 = 
öode
->
i_mode
;

210 
e_uid
 = (
i
 & 
S_ISUID
Ë? 
öode
->
i_uid
 : 
cuºít
->
euid
;

211 
e_gid
 = (
i
 & 
S_ISGID
Ë? 
öode
->
i_gid
 : 
cuºít
->
egid
;

212 i‡(
cuºít
->
euid
 =
öode
->
i_uid
)

213 
i
 >>= 6;

214 i‡(
cuºít
->
egid
 =
öode
->
i_gid
)

215 
i
 >>= 3;

216 i‡(!(
i
 & 1) &&

217 !((
öode
->
i_mode
 & 0111Ë&& 
	`su£r
())) {

218 
ªtvÆ
 = -
ENOEXEC
;

219 
exec_îr‹2
;

221 i‡(!(
bh
 = 
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[0]))) {

222 
ªtvÆ
 = -
EACCES
;

223 
exec_îr‹2
;

225 
ex
 = *((
exec
 *Ë
bh
->
b_d©a
);

226 i‡((
bh
->
b_d©a
[0] ='#'Ë&& (bh->b_d©a[1] ='!'Ë&& (!
sh_b™g
)) {

232 
buf
[1023], *
˝
, *
öãΩ
, *
i_«me
, *
i_¨g
;

233 
ﬁd_fs
;

235 
	`°∫˝y
(
buf
, 
bh
->
b_d©a
+2, 1022);

236 
	`bªl£
(
bh
);

237 
	`ùut
(
öode
);

238 
buf
[1022] = '\0';

239 i‡((
˝
 = 
	`°rchr
(
buf
, '\n'))) {

240 *
˝
 = '\0';

241 
˝
 = 
buf
; (*cp == ' ') || (*cp == '\t'); cp++);

243 i‡(!
˝
 || *cp == '\0') {

244 
ªtvÆ
 = -
ENOEXEC
;

245 
exec_îr‹1
;

247 
öãΩ
 = 
i_«me
 = 
˝
;

248 
i_¨g
 = 0;

249  ; *
˝
 && (*cp != ' ') && (*cp != '\t'); cp++) {

250 i‡(*
˝
 == '/')

251 
i_«me
 = 
˝
+1;

253 i‡(*
˝
) {

254 *
˝
++ = '\0';

255 
i_¨g
 = 
˝
;

261 i‡(
sh_b™g
++ == 0) {

262 
p
 = 
	`c›y_°rögs
(
ívc
, 
ívp
, 
∑ge
,Ö, 0);

263 
p
 = 
	`c›y_°rögs
(--
¨gc
, 
¨gv
+1, 
∑ge
,Ö, 0);

273 
p
 = 
	`c›y_°rögs
(1, &
fûíame
, 
∑ge
,Ö, 1);

274 
¨gc
++;

275 i‡(
i_¨g
) {

276 
p
 = 
	`c›y_°rögs
(1, &
i_¨g
, 
∑ge
,Ö, 2);

277 
¨gc
++;

279 
p
 = 
	`c›y_°rögs
(1, &
i_«me
, 
∑ge
,Ö, 2);

280 
¨gc
++;

281 i‡(!
p
) {

282 
ªtvÆ
 = -
ENOMEM
;

283 
exec_îr‹1
;

288 
ﬁd_fs
 = 
	`gë_fs
();

289 
	`£t_fs
(
	`gë_ds
());

290 i‡(!(
öode
=
	`«mei
(
öãΩ
))) {

291 
	`£t_fs
(
ﬁd_fs
);

292 
ªtvÆ
 = -
ENOENT
;

293 
exec_îr‹1
;

295 
	`£t_fs
(
ﬁd_fs
);

296 
ª°¨t_öãΩ
;

298 
	`bªl£
(
bh
);

299 i‡(
	`N_MAGIC
(
ex
Ë!
ZMAGIC
 ||Éx.
a_åsize
 ||Éx.
a_drsize
 ||

300 
ex
.
a_ãxt
+ex.
a_d©a
+ex.
a_bss
>0x3000000 ||

301 
öode
->
i_size
 < 
ex
.
a_ãxt
+ex.
a_d©a
+ex.
a_syms
+
	`N_TXTOFF
(ex)) {

302 
ªtvÆ
 = -
ENOEXEC
;

303 
exec_îr‹2
;

305 i‡(
	`N_TXTOFF
(
ex
Ë!
BLOCK_SIZE
) {

306 
	`¥ötk
("%s: N_TXTOFF !BLOCK_SIZE. Sìá.out.h.", 
fûíame
);

307 
ªtvÆ
 = -
ENOEXEC
;

308 
exec_îr‹2
;

310 i‡(!
sh_b™g
) {

311 
p
 = 
	`c›y_°rögs
(
ívc
,
ívp
,
∑ge
,p,0);

312 
p
 = 
	`c›y_°rögs
(
¨gc
,
¨gv
,
∑ge
,p,0);

313 i‡(!
p
) {

314 
ªtvÆ
 = -
ENOMEM
;

315 
exec_îr‹2
;

319 i‡(
cuºít
->
execuèbÀ
)

320 
	`ùut
(
cuºít
->
execuèbÀ
);

321 
cuºít
->
execuèbÀ
 = 
öode
;

322 
i
=0 ; i<32 ; i++)

323 
cuºít
->
siga˘i⁄
[
i
].
ß_h™dÀr
 = 
NULL
;

324 
i
=0 ; i<
NR_OPEN
 ; i++)

325 i‡((
cuºít
->
˛o£_⁄_exec
>>
i
)&1)

326 
	`sys_˛o£
(
i
);

327 
cuºít
->
˛o£_⁄_exec
 = 0;

328 
	`‰ì_∑ge_èbÀs
(
	`gë_ba£
(
cuºít
->
ldt
[1]),
	`gë_limô
(0x0f));

329 
	`‰ì_∑ge_èbÀs
(
	`gë_ba£
(
cuºít
->
ldt
[2]),
	`gë_limô
(0x17));

330 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

331 
œ°_èsk_u£d_m©h
 = 
NULL
;

332 
cuºít
->
u£d_m©h
 = 0;

333 
p
 +
	`ch™ge_ldt
(
ex
.
a_ãxt
,
∑ge
)-
MAX_ARG_PAGES
*
PAGE_SIZE
;

334 
p
 = (Ë
	`¸óã_èbÀs
((*Ì,
¨gc
,
ívc
);

335 
cuºít
->
brk
 = 
ex
.
a_bss
 +

336 (
cuºít
->
íd_d©a
 = 
ex
.
a_d©a
 +

337 (
cuºít
->
íd_code
 = 
ex
.
a_ãxt
));

338 
cuºít
->
°¨t_°ack
 = 
p
 & 0xfffff000;

339 
cuºít
->
euid
 = 
e_uid
;

340 
cuºít
->
egid
 = 
e_gid
;

341 
i
 = 
ex
.
a_ãxt
+ex.
a_d©a
;

342 
i
&0xfff)

343 
	`put_fs_byã
(0,(*Ë(
i
++));

344 
eù
[0] = 
ex
.
a_íåy
;

345 
eù
[3] = 
p
;

347 
exec_îr‹2
:

348 
	`ùut
(
öode
);

349 
exec_îr‹1
:

350 
i
=0 ; i<
MAX_ARG_PAGES
 ; i++)

351 
	`‰ì_∑ge
(
∑ge
[
i
]);

352 (
ªtvÆ
);

353 
	}
}

	@linux-0.11/fs/fcntl.c

8 
	~<î∫o.h
>

9 
	~<löux/sched.h
>

10 
	~<löux/kî√l.h
>

11 
	~<asm/£gmít.h
>

13 
	~<f˙é.h
>

14 
	~<sys/°©.h
>

16 
sys_˛o£
(
fd
);

18 
	$dupfd
(
fd
, 
¨g
)

20 i‡(
fd
 >
NR_OPEN
 || !
cuºít
->
fûp
[fd])

21  -
EBADF
;

22 i‡(
¨g
 >
NR_OPEN
)

23  -
EINVAL
;

24 
¨g
 < 
NR_OPEN
)

25 i‡(
cuºít
->
fûp
[
¨g
])

26 
¨g
++;

29 i‡(
¨g
 >
NR_OPEN
)

30  -
EMFILE
;

31 
cuºít
->
˛o£_⁄_exec
 &~(1<<
¨g
);

32 (
cuºít
->
fûp
[
¨g
] = cuºít->fûp[
fd
])->
f_cou¡
++;

33  
¨g
;

34 
	}
}

36 
	$sys_dup2
(
ﬁdfd
, 
√wfd
)

38 
	`sys_˛o£
(
√wfd
);

39  
	`dupfd
(
ﬁdfd
,
√wfd
);

40 
	}
}

42 
	$sys_dup
(
fûdes
)

44  
	`dupfd
(
fûdes
,0);

45 
	}
}

47 
	$sys_f˙é
(
fd
, 
cmd
, 
¨g
)

49 
fûe
 * 
fûp
;

51 i‡(
fd
 >
NR_OPEN
 || !(
fûp
 = 
cuºít
->filp[fd]))

52  -
EBADF
;

53 
cmd
) {

54 
F_DUPFD
:

55  
	`dupfd
(
fd
,
¨g
);

56 
F_GETFD
:

57  (
cuºít
->
˛o£_⁄_exec
>>
fd
)&1;

58 
F_SETFD
:

59 i‡(
¨g
&1)

60 
cuºít
->
˛o£_⁄_exec
 |(1<<
fd
);

62 
cuºít
->
˛o£_⁄_exec
 &~(1<<
fd
);

64 
F_GETFL
:

65  
fûp
->
f_Êags
;

66 
F_SETFL
:

67 
fûp
->
f_Êags
 &~(
O_APPEND
 | 
O_NONBLOCK
);

68 
fûp
->
f_Êags
 |
¨g
 & (
O_APPEND
 | 
O_NONBLOCK
);

70 
F_GETLK
: 
F_SETLK
: 
F_SETLKW
:

75 
	}
}

	@linux-0.11/fs/file_dev.c

7 
	~<î∫o.h
>

8 
	~<f˙é.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

12 
	~<asm/£gmít.h
>

14 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

15 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

17 
	$fûe_ªad
(
m_öode
 * 
öode
, 
fûe
 * 
fûp
, * 
buf
, 
cou¡
)

19 
À·
,
ch¨s
,
ƒ
;

20 
buf„r_hód
 * 
bh
;

22 i‡((
À·
=
cou¡
)<=0)

24 
À·
) {

25 i‡((
ƒ
 = 
	`bm≠
(
öode
,(
fûp
->
f_pos
)/
BLOCK_SIZE
))) {

26 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
ƒ
)))

29 
bh
 = 
NULL
;

30 
ƒ
 = 
fûp
->
f_pos
 % 
BLOCK_SIZE
;

31 
ch¨s
 = 
	`MIN
–
BLOCK_SIZE
-
ƒ
 , 
À·
 );

32 
fûp
->
f_pos
 +
ch¨s
;

33 
À·
 -
ch¨s
;

34 i‡(
bh
) {

35 * 
p
 = 
ƒ
 + 
bh
->
b_d©a
;

36 
ch¨s
-->0)

37 
	`put_fs_byã
(*(
p
++),
buf
++);

38 
	`bªl£
(
bh
);

40 
ch¨s
-->0)

41 
	`put_fs_byã
(0,
buf
++);

44 
öode
->
i_©ime
 = 
CURRENT_TIME
;

45  (
cou¡
-
À·
)?(cou¡-À·):-
ERROR
;

46 
	}
}

48 
	$fûe_wrôe
(
m_öode
 * 
öode
, 
fûe
 * 
fûp
, * 
buf
, 
cou¡
)

50 
off_t
 
pos
;

51 
block
,
c
;

52 
buf„r_hód
 * 
bh
;

53 * 
p
;

54 
i
=0;

60 i‡(
fûp
->
f_Êags
 & 
O_APPEND
)

61 
pos
 = 
öode
->
i_size
;

63 
pos
 = 
fûp
->
f_pos
;

64 
i
<
cou¡
) {

65 i‡(!(
block
 = 
	`¸óã_block
(
öode
,
pos
/
BLOCK_SIZE
)))

67 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
block
)))

69 
c
 = 
pos
 % 
BLOCK_SIZE
;

70 
p
 = 
c
 + 
bh
->
b_d©a
;

71 
bh
->
b_dút
 = 1;

72 
c
 = 
BLOCK_SIZE
-c;

73 i‡(
c
 > 
cou¡
-
i
) c = count-i;

74 
pos
 +
c
;

75 i‡(
pos
 > 
öode
->
i_size
) {

76 
öode
->
i_size
 = 
pos
;

77 
öode
->
i_dút
 = 1;

79 
i
 +
c
;

80 
c
-->0)

81 *(
p
++Ë
	`gë_fs_byã
(
buf
++);

82 
	`bªl£
(
bh
);

84 
öode
->
i_mtime
 = 
CURRENT_TIME
;

85 i‡(!(
fûp
->
f_Êags
 & 
O_APPEND
)) {

86 
fûp
->
f_pos
 = 
pos
;

87 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

89  (
i
?i:-1);

90 
	}
}

	@linux-0.11/fs/file_table.c

7 
	~<löux/fs.h
>

9 
fûe
 
	gfûe_èbÀ
[
NR_FILE
];

	@linux-0.11/fs/inode.c

7 
	~<°rög.h
>

8 
	~<sys/°©.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

12 
	~<löux/mm.h
>

13 
	~<asm/sy°em.h
>

15 
m_öode
 
	göode_èbÀ
[
NR_INODE
]={{0,},};

17 
ªad_öode
(
m_öode
 * 
öode
);

18 
wrôe_öode
(
m_öode
 * 
öode
);

20 
ölöe
 
	$waô_⁄_öode
(
m_öode
 * 
öode
)

22 
	`˛i
();

23 
öode
->
i_lock
)

24 
	`¶ìp_⁄
(&
öode
->
i_waô
);

25 
	`°i
();

26 
	}
}

28 
ölöe
 
	$lock_öode
(
m_öode
 * 
öode
)

30 
	`˛i
();

31 
öode
->
i_lock
)

32 
	`¶ìp_⁄
(&
öode
->
i_waô
);

33 
öode
->
i_lock
=1;

34 
	`°i
();

35 
	}
}

37 
ölöe
 
	$u∆ock_öode
(
m_öode
 * 
öode
)

39 
öode
->
i_lock
=0;

40 
	`wake_up
(&
öode
->
i_waô
);

41 
	}
}

43 
	$övÆid©e_öodes
(
dev
)

45 
i
;

46 
m_öode
 * 
öode
;

48 
öode
 = 0+
öode_èbÀ
;

49 
i
=0 ; i<
NR_INODE
 ; i++,
öode
++) {

50 
	`waô_⁄_öode
(
öode
);

51 i‡(
öode
->
i_dev
 =
dev
) {

52 i‡(
öode
->
i_cou¡
)

53 
	`¥ötk
("inode in use onÑemoved disk\n\r");

54 
öode
->
i_dev
 = inode->
i_dút
 = 0;

57 
	}
}

59 
	$sync_öodes
()

61 
i
;

62 
m_öode
 * 
öode
;

64 
öode
 = 0+
öode_èbÀ
;

65 
i
=0 ; i<
NR_INODE
 ; i++,
öode
++) {

66 
	`waô_⁄_öode
(
öode
);

67 i‡(
öode
->
i_dút
 && !öode->
i_pùe
)

68 
	`wrôe_öode
(
öode
);

70 
	}
}

72 
	$_bm≠
(
m_öode
 * 
öode
,
block
,
¸óã
)

74 
buf„r_hód
 * 
bh
;

75 
i
;

77 i‡(
block
<0)

78 
	`∑nic
("_bmap: block<0");

79 i‡(
block
 >= 7+512+512*512)

80 
	`∑nic
("_bmap: block>big");

81 i‡(
block
<7) {

82 i‡(
¸óã
 && !
öode
->
i_z⁄e
[
block
])

83 i‡((
öode
->
i_z⁄e
[
block
]=
	`√w_block
(öode->
i_dev
))) {

84 
öode
->
i_˘ime
=
CURRENT_TIME
;

85 
öode
->
i_dút
=1;

87  
öode
->
i_z⁄e
[
block
];

89 
block
 -= 7;

90 i‡(
block
<512) {

91 i‡(
¸óã
 && !
öode
->
i_z⁄e
[7])

92 i‡((
öode
->
i_z⁄e
[7]=
	`√w_block
(öode->
i_dev
))) {

93 
öode
->
i_dút
=1;

94 
öode
->
i_˘ime
=
CURRENT_TIME
;

96 i‡(!
öode
->
i_z⁄e
[7])

98 i‡(!(
bh
 = 
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[7])))

100 
i
 = ((*Ë(
bh
->
b_d©a
))[
block
];

101 i‡(
¸óã
 && !
i
)

102 i‡((
i
=
	`√w_block
(
öode
->
i_dev
))) {

103 ((*Ë(
bh
->
b_d©a
))[
block
]=
i
;

104 
bh
->
b_dút
=1;

106 
	`bªl£
(
bh
);

107  
i
;

109 
block
 -= 512;

110 i‡(
¸óã
 && !
öode
->
i_z⁄e
[8])

111 i‡((
öode
->
i_z⁄e
[8]=
	`√w_block
(öode->
i_dev
))) {

112 
öode
->
i_dút
=1;

113 
öode
->
i_˘ime
=
CURRENT_TIME
;

115 i‡(!
öode
->
i_z⁄e
[8])

117 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[8])))

119 
i
 = ((*)
bh
->
b_d©a
)[
block
>>9];

120 i‡(
¸óã
 && !
i
)

121 i‡((
i
=
	`√w_block
(
öode
->
i_dev
))) {

122 ((*Ë(
bh
->
b_d©a
))[
block
>>9]=
i
;

123 
bh
->
b_dút
=1;

125 
	`bªl£
(
bh
);

126 i‡(!
i
)

128 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
i
)))

130 
i
 = ((*)
bh
->
b_d©a
)[
block
&511];

131 i‡(
¸óã
 && !
i
)

132 i‡((
i
=
	`√w_block
(
öode
->
i_dev
))) {

133 ((*Ë(
bh
->
b_d©a
))[
block
&511]=
i
;

134 
bh
->
b_dút
=1;

136 
	`bªl£
(
bh
);

137  
i
;

138 
	}
}

140 
	$bm≠
(
m_öode
 * 
öode
,
block
)

142  
	`_bm≠
(
öode
,
block
,0);

143 
	}
}

145 
	$¸óã_block
(
m_öode
 * 
öode
, 
block
)

147  
	`_bm≠
(
öode
,
block
,1);

148 
	}
}

150 
	$ùut
(
m_öode
 * 
öode
)

152 i‡(!
öode
)

154 
	`waô_⁄_öode
(
öode
);

155 i‡(!
öode
->
i_cou¡
)

156 
	`∑nic
("iput:ÅryingÅo free free inode");

157 i‡(
öode
->
i_pùe
) {

158 
	`wake_up
(&
öode
->
i_waô
);

159 i‡(--
öode
->
i_cou¡
)

161 
	`‰ì_∑ge
(
öode
->
i_size
);

162 
öode
->
i_cou¡
=0;

163 
öode
->
i_dút
=0;

164 
öode
->
i_pùe
=0;

167 i‡(!
öode
->
i_dev
) {

168 
öode
->
i_cou¡
--;

171 i‡(
	`S_ISBLK
(
öode
->
i_mode
)) {

172 
	`sync_dev
(
öode
->
i_z⁄e
[0]);

173 
	`waô_⁄_öode
(
öode
);

175 
ª≥©
:

176 i‡(
öode
->
i_cou¡
>1) {

177 
öode
->
i_cou¡
--;

180 i‡(!
öode
->
i_∆öks
) {

181 
	`åunˇã
(
öode
);

182 
	`‰ì_öode
(
öode
);

185 i‡(
öode
->
i_dút
) {

186 
	`wrôe_öode
(
öode
);

187 
	`waô_⁄_öode
(
öode
);

188 
ª≥©
;

190 
öode
->
i_cou¡
--;

192 
	}
}

194 
m_öode
 * 
	$gë_em±y_öode
()

196 
m_öode
 * 
öode
;

197 
m_öode
 * 
œ°_öode
 = 
öode_èbÀ
;

198 
i
;

201 
öode
 = 
NULL
;

202 
i
 = 
NR_INODE
; i ; i--) {

203 i‡(++
œ°_öode
 >
öode_èbÀ
 + 
NR_INODE
)

204 
œ°_öode
 = 
öode_èbÀ
;

205 i‡(!
œ°_öode
->
i_cou¡
) {

206 
öode
 = 
œ°_öode
;

207 i‡(!
öode
->
i_dút
 && !öode->
i_lock
)

211 i‡(!
öode
) {

212 
i
=0 ; i<
NR_INODE
 ; i++)

213 
	`¥ötk
("%04x: %6d\t",
öode_èbÀ
[
i
].
i_dev
,

214 
öode_èbÀ
[
i
].
i_num
);

215 
	`∑nic
("No free inodes in mem");

217 
	`waô_⁄_öode
(
öode
);

218 
öode
->
i_dút
) {

219 
	`wrôe_öode
(
öode
);

220 
	`waô_⁄_öode
(
öode
);

222 } 
öode
->
i_cou¡
);

223 
	`mem£t
(
öode
,0,(*inode));

224 
öode
->
i_cou¡
 = 1;

225  
öode
;

226 
	}
}

228 
m_öode
 * 
	$gë_pùe_öode
()

230 
m_öode
 * 
öode
;

232 i‡(!(
öode
 = 
	`gë_em±y_öode
()))

233  
NULL
;

234 i‡(!(
öode
->
i_size
=
	`gë_‰ì_∑ge
())) {

235 
öode
->
i_cou¡
 = 0;

236  
NULL
;

238 
öode
->
i_cou¡
 = 2;

239 
	`PIPE_HEAD
(*
öode
Ë
	`PIPE_TAIL
(*inode) = 0;

240 
öode
->
i_pùe
 = 1;

241  
öode
;

242 
	}
}

244 
m_öode
 * 
	$igë
(
dev
,
ƒ
)

246 
m_öode
 * 
öode
, * 
em±y
;

248 i‡(!
dev
)

249 
	`∑nic
("iget with dev==0");

250 
em±y
 = 
	`gë_em±y_öode
();

251 
öode
 = 
öode_èbÀ
;

252 
öode
 < 
NR_INODE
+
öode_èbÀ
) {

253 i‡(
öode
->
i_dev
 !
dev
 || inode->
i_num
 !
ƒ
) {

254 
öode
++;

257 
	`waô_⁄_öode
(
öode
);

258 i‡(
öode
->
i_dev
 !
dev
 || inode->
i_num
 !
ƒ
) {

259 
öode
 = 
öode_èbÀ
;

262 
öode
->
i_cou¡
++;

263 i‡(
öode
->
i_mou¡
) {

264 
i
;

266 
i
 = 0 ; i<
NR_SUPER
 ; i++)

267 i‡(
su≥r_block
[
i
].
s_imou¡
==
öode
)

269 i‡(
i
 >
NR_SUPER
) {

270 
	`¥ötk
("Mounted inode hasn't got sb\n");

271 i‡(
em±y
)

272 
	`ùut
(
em±y
);

273  
öode
;

275 
	`ùut
(
öode
);

276 
dev
 = 
su≥r_block
[
i
].
s_dev
;

277 
ƒ
 = 
ROOT_INO
;

278 
öode
 = 
öode_èbÀ
;

281 i‡(
em±y
)

282 
	`ùut
(
em±y
);

283  
öode
;

285 i‡(!
em±y
)

286  (
NULL
);

287 
öode
=
em±y
;

288 
öode
->
i_dev
 = 
dev
;

289 
öode
->
i_num
 = 
ƒ
;

290 
	`ªad_öode
(
öode
);

291  
öode
;

292 
	}
}

294 
	$ªad_öode
(
m_öode
 * 
öode
)

296 
su≥r_block
 * 
sb
;

297 
buf„r_hód
 * 
bh
;

298 
block
;

300 
	`lock_öode
(
öode
);

301 i‡(!(
sb
=
	`gë_su≥r
(
öode
->
i_dev
)))

302 
	`∑nic
("tryingÅoÑead inode without dev");

303 
block
 = 2 + 
sb
->
s_im≠_blocks
 + sb->
s_zm≠_blocks
 +

304 (
öode
->
i_num
-1)/
INODES_PER_BLOCK
;

305 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
block
)))

306 
	`∑nic
("unableÅoÑead i-node block");

307 *(
d_öode
 *)
öode
 =

308 ((
d_öode
 *)
bh
->
b_d©a
)

309 [(
öode
->
i_num
-1)%
INODES_PER_BLOCK
];

310 
	`bªl£
(
bh
);

311 
	`u∆ock_öode
(
öode
);

312 
	}
}

314 
	$wrôe_öode
(
m_öode
 * 
öode
)

316 
su≥r_block
 * 
sb
;

317 
buf„r_hód
 * 
bh
;

318 
block
;

320 
	`lock_öode
(
öode
);

321 i‡(!
öode
->
i_dút
 || !öode->
i_dev
) {

322 
	`u∆ock_öode
(
öode
);

325 i‡(!(
sb
=
	`gë_su≥r
(
öode
->
i_dev
)))

326 
	`∑nic
("tryingÅo write inode without device");

327 
block
 = 2 + 
sb
->
s_im≠_blocks
 + sb->
s_zm≠_blocks
 +

328 (
öode
->
i_num
-1)/
INODES_PER_BLOCK
;

329 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
block
)))

330 
	`∑nic
("unableÅoÑead i-node block");

331 ((
d_öode
 *)
bh
->
b_d©a
)

332 [(
öode
->
i_num
-1)%
INODES_PER_BLOCK
] =

333 *(
d_öode
 *)
öode
;

334 
bh
->
b_dút
=1;

335 
öode
->
i_dút
=0;

336 
	`bªl£
(
bh
);

337 
	`u∆ock_öode
(
öode
);

338 
	}
}

	@linux-0.11/fs/ioctl.c

8 
	~<î∫o.h
>

9 
	~<sys/°©.h
>

11 
	~<löux/sched.h
>

13 
ây_io˘l
(
dev
, 
cmd
, 
¨g
);

15 (*
	tio˘l_±r
)(
	tdev
,
	tcmd
,
	t¨g
);

17 
	#NRDEVS
 (( (
io˘l_èbÀ
))/( (
io˘l_±r
)))

	)

19 
io˘l_±r
 
io˘l_èbÀ
[]={

20 
NULL
,

21 
NULL
,

22 
NULL
,

23 
NULL
,

24 
ây_io˘l
,

25 
ây_io˘l
,

26 
NULL
,

27 
NULL
};

30 
	$sys_io˘l
(
fd
, 
cmd
, 
¨g
)

32 
fûe
 * 
fûp
;

33 
dev
,
mode
;

35 i‡(
fd
 >
NR_OPEN
 || !(
fûp
 = 
cuºít
->filp[fd]))

36  -
EBADF
;

37 
mode
=
fûp
->
f_öode
->
i_mode
;

38 i‡(!
	`S_ISCHR
(
mode
Ë&& !
	`S_ISBLK
(mode))

39  -
EINVAL
;

40 
dev
 = 
fûp
->
f_öode
->
i_z⁄e
[0];

41 i‡(
	`MAJOR
(
dev
Ë>
NRDEVS
)

42  -
ENODEV
;

43 i‡(!
io˘l_èbÀ
[
	`MAJOR
(
dev
)])

44  -
ENOTTY
;

45  
io˘l_èbÀ
[
	`MAJOR
(
dev
)](dev,
cmd
,
¨g
);

46 
	}
}

	@linux-0.11/fs/namei.c

11 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/£gmít.h
>

15 
	~<°rög.h
>

16 
	~<f˙é.h
>

17 
	~<î∫o.h
>

18 
	~<c⁄°.h
>

19 
	~<sys/°©.h
>

21 
	#ACC_MODE
(
x
Ë("\004\002\006\377"[(x)&
O_ACCMODE
])

	)

29 
	#MAY_EXEC
 1

	)

30 
	#MAY_WRITE
 2

	)

31 
	#MAY_READ
 4

	)

40 
	$≥rmissi⁄
(
m_öode
 * 
öode
,
mask
)

42 
mode
 = 
öode
->
i_mode
;

45 i‡(
öode
->
i_dev
 && !öode->
i_∆öks
)

47 i‡(
cuºít
->
euid
==
öode
->
i_uid
)

48 
mode
 >>= 6;

49 i‡(
cuºít
->
egid
==
öode
->
i_gid
)

50 
mode
 >>= 3;

51 i‡(((
mode
 & 
mask
 & 0007Ë=maskË|| 
	`su£r
())

54 
	}
}

63 
	$m©ch
(
Àn
,c⁄° * 
«me
,
dú_íåy
 * 
de
)

65 
ßme
 ;

67 i‡(!
de
 || !de->
öode
 || 
Àn
 > 
NAME_LEN
)

69 i‡(
Àn
 < 
NAME_LEN
 && 
de
->
«me
[len])

71 
	`__asm__
("cld\n\t"

74 :"˜" (
ßme
)

75 :"0" (0),"S" ((Ë
«me
),"D" ((Ë
de
->«me),"c" (
Àn
)

77  
ßme
;

78 
	}
}

91 
buf„r_hód
 * 
	$föd_íåy
(
m_öode
 ** 
dú
,

92 c⁄° * 
«me
, 
«mñí
, 
dú_íåy
 ** 
ªs_dú
)

94 
íåõs
;

95 
block
,
i
;

96 
buf„r_hód
 * 
bh
;

97 
dú_íåy
 * 
de
;

98 
su≥r_block
 * 
sb
;

100 #ifde‡
NO_TRUNCATE


101 i‡(
«mñí
 > 
NAME_LEN
)

102  
NULL
;

104 i‡(
«mñí
 > 
NAME_LEN
)

105 
«mñí
 = 
NAME_LEN
;

107 
íåõs
 = (*
dú
)->
i_size
 / ( (
dú_íåy
));

108 *
ªs_dú
 = 
NULL
;

109 i‡(!
«mñí
)

110  
NULL
;

112 i‡(
«mñí
==2 && 
	`gë_fs_byã
(
«me
)=='.' && get_fs_byte(name+1)=='.') {

114 i‡((*
dú
Ë=
cuºít
->
roŸ
)

115 
«mñí
=1;

116 i‡((*
dú
)->
i_num
 =
ROOT_INO
) {

119 
sb
=
	`gë_su≥r
((*
dú
)->
i_dev
);

120 i‡(
sb
->
s_imou¡
) {

121 
	`ùut
(*
dú
);

122 (*
dú
)=
sb
->
s_imou¡
;

123 (*
dú
)->
i_cou¡
++;

127 i‡(!(
block
 = (*
dú
)->
i_z⁄e
[0]))

128  
NULL
;

129 i‡(!(
bh
 = 
	`bªad
((*
dú
)->
i_dev
,
block
)))

130  
NULL
;

131 
i
 = 0;

132 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

133 
i
 < 
íåõs
) {

134 i‡((*)
de
 >
BLOCK_SIZE
+
bh
->
b_d©a
) {

135 
	`bªl£
(
bh
);

136 
bh
 = 
NULL
;

137 i‡(!(
block
 = 
	`bm≠
(*
dú
,
i
/
DIR_ENTRIES_PER_BLOCK
)) ||

138 !(
bh
 = 
	`bªad
((*
dú
)->
i_dev
,
block
))) {

139 
i
 +
DIR_ENTRIES_PER_BLOCK
;

142 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

144 i‡(
	`m©ch
(
«mñí
,
«me
,
de
)) {

145 *
ªs_dú
 = 
de
;

146  
bh
;

148 
de
++;

149 
i
++;

151 
	`bªl£
(
bh
);

152  
NULL
;

153 
	}
}

165 
buf„r_hód
 * 
	$add_íåy
(
m_öode
 * 
dú
,

166 c⁄° * 
«me
, 
«mñí
, 
dú_íåy
 ** 
ªs_dú
)

168 
block
,
i
;

169 
buf„r_hód
 * 
bh
;

170 
dú_íåy
 * 
de
;

172 *
ªs_dú
 = 
NULL
;

173 #ifde‡
NO_TRUNCATE


174 i‡(
«mñí
 > 
NAME_LEN
)

175  
NULL
;

177 i‡(
«mñí
 > 
NAME_LEN
)

178 
«mñí
 = 
NAME_LEN
;

180 i‡(!
«mñí
)

181  
NULL
;

182 i‡(!(
block
 = 
dú
->
i_z⁄e
[0]))

183  
NULL
;

184 i‡(!(
bh
 = 
	`bªad
(
dú
->
i_dev
,
block
)))

185  
NULL
;

186 
i
 = 0;

187 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

189 i‡((*)
de
 >
BLOCK_SIZE
+
bh
->
b_d©a
) {

190 
	`bªl£
(
bh
);

191 
bh
 = 
NULL
;

192 
block
 = 
	`¸óã_block
(
dú
,
i
/
DIR_ENTRIES_PER_BLOCK
);

193 i‡(!
block
)

194  
NULL
;

195 i‡(!(
bh
 = 
	`bªad
(
dú
->
i_dev
,
block
))) {

196 
i
 +
DIR_ENTRIES_PER_BLOCK
;

199 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

201 i‡(
i
*(
dú_íåy
Ë>
dú
->
i_size
) {

202 
de
->
öode
=0;

203 
dú
->
i_size
 = (
i
+1)*(
dú_íåy
);

204 
dú
->
i_dút
 = 1;

205 
dú
->
i_˘ime
 = 
CURRENT_TIME
;

207 i‡(!
de
->
öode
) {

208 
dú
->
i_mtime
 = 
CURRENT_TIME
;

209 
i
=0; i < 
NAME_LEN
 ; i++)

210 
de
->
«me
[
i
]=(i<
«mñí
)?
	`gë_fs_byã
(name+i):0;

211 
bh
->
b_dút
 = 1;

212 *
ªs_dú
 = 
de
;

213  
bh
;

215 
de
++;

216 
i
++;

218 
	`bªl£
(
bh
);

219  
NULL
;

220 
	}
}

228 
m_öode
 * 
	$gë_dú
(c⁄° * 
∑th«me
)

230 
c
;

231 c⁄° * 
thi¢ame
;

232 
m_öode
 * 
öode
;

233 
buf„r_hód
 * 
bh
;

234 
«mñí
,
ör
,
idev
;

235 
dú_íåy
 * 
de
;

237 i‡(!
cuºít
->
roŸ
 || !cuºít->roŸ->
i_cou¡
)

238 
	`∑nic
("NoÑoot inode");

239 i‡(!
cuºít
->
pwd
 || !cuºít->pwd->
i_cou¡
)

240 
	`∑nic
("No cwd inode");

241 i‡((
c
=
	`gë_fs_byã
(
∑th«me
))=='/') {

242 
öode
 = 
cuºít
->
roŸ
;

243 
∑th«me
++;

244 } i‡(
c
)

245 
öode
 = 
cuºít
->
pwd
;

247  
NULL
;

248 
öode
->
i_cou¡
++;

250 
thi¢ame
 = 
∑th«me
;

251 i‡(!
	`S_ISDIR
(
öode
->
i_mode
Ë|| !
	`≥rmissi⁄
(öode,
MAY_EXEC
)) {

252 
	`ùut
(
öode
);

253  
NULL
;

255 
«mñí
=0;(
c
=
	`gë_fs_byã
(
∑th«me
++))&&(c!='/');namelen++)

257 i‡(!
c
)

258  
öode
;

259 i‡(!(
bh
 = 
	`föd_íåy
(&
öode
,
thi¢ame
,
«mñí
,&
de
))) {

260 
	`ùut
(
öode
);

261  
NULL
;

263 
ör
 = 
de
->
öode
;

264 
idev
 = 
öode
->
i_dev
;

265 
	`bªl£
(
bh
);

266 
	`ùut
(
öode
);

267 i‡(!(
öode
 = 
	`igë
(
idev
,
ör
)))

268  
NULL
;

270 
	}
}

278 
m_öode
 * 
	$dú_«mei
(c⁄° * 
∑th«me
,

279 * 
«mñí
, c⁄° ** 
«me
)

281 
c
;

282 c⁄° * 
ba£«me
;

283 
m_öode
 * 
dú
;

285 i‡(!(
dú
 = 
	`gë_dú
(
∑th«me
)))

286  
NULL
;

287 
ba£«me
 = 
∑th«me
;

288 (
c
=
	`gë_fs_byã
(
∑th«me
++)))

289 i‡(
c
=='/')

290 
ba£«me
=
∑th«me
;

291 *
«mñí
 = 
∑th«me
-
ba£«me
-1;

292 *
«me
 = 
ba£«me
;

293  
dú
;

294 
	}
}

303 
m_öode
 * 
	$«mei
(c⁄° * 
∑th«me
)

305 c⁄° * 
ba£«me
;

306 
ör
,
dev
,
«mñí
;

307 
m_öode
 * 
dú
;

308 
buf„r_hód
 * 
bh
;

309 
dú_íåy
 * 
de
;

311 i‡(!(
dú
 = 
	`dú_«mei
(
∑th«me
,&
«mñí
,&
ba£«me
)))

312  
NULL
;

313 i‡(!
«mñí
)

314  
dú
;

315 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

316 i‡(!
bh
) {

317 
	`ùut
(
dú
);

318  
NULL
;

320 
ör
 = 
de
->
öode
;

321 
dev
 = 
dú
->
i_dev
;

322 
	`bªl£
(
bh
);

323 
	`ùut
(
dú
);

324 
dú
=
	`igë
(
dev
,
ör
);

325 i‡(
dú
) {

326 
dú
->
i_©ime
=
CURRENT_TIME
;

327 
dú
->
i_dút
=1;

329  
dú
;

330 
	}
}

337 
	$›í_«mei
(c⁄° * 
∑th«me
, 
Êag
, 
mode
,

338 
m_öode
 ** 
ªs_öode
)

340 c⁄° * 
ba£«me
;

341 
ör
,
dev
,
«mñí
;

342 
m_öode
 * 
dú
, *
öode
;

343 
buf„r_hód
 * 
bh
;

344 
dú_íåy
 * 
de
;

346 i‡((
Êag
 & 
O_TRUNC
Ë&& !(Êag & 
O_ACCMODE
))

347 
Êag
 |
O_WRONLY
;

348 
mode
 &0777 & ~
cuºít
->
umask
;

349 
mode
 |
I_REGULAR
;

350 i‡(!(
dú
 = 
	`dú_«mei
(
∑th«me
,&
«mñí
,&
ba£«me
)))

351  -
ENOENT
;

352 i‡(!
«mñí
) {

353 i‡(!(
Êag
 & (
O_ACCMODE
|
O_CREAT
|
O_TRUNC
))) {

354 *
ªs_öode
=
dú
;

357 
	`ùut
(
dú
);

358  -
EISDIR
;

360 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

361 i‡(!
bh
) {

362 i‡(!(
Êag
 & 
O_CREAT
)) {

363 
	`ùut
(
dú
);

364  -
ENOENT
;

366 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

367 
	`ùut
(
dú
);

368  -
EACCES
;

370 
öode
 = 
	`√w_öode
(
dú
->
i_dev
);

371 i‡(!
öode
) {

372 
	`ùut
(
dú
);

373  -
ENOSPC
;

375 
öode
->
i_uid
 = 
cuºít
->
euid
;

376 
öode
->
i_mode
 = 
mode
;

377 
öode
->
i_dút
 = 1;

378 
bh
 = 
	`add_íåy
(
dú
,
ba£«me
,
«mñí
,&
de
);

379 i‡(!
bh
) {

380 
öode
->
i_∆öks
--;

381 
	`ùut
(
öode
);

382 
	`ùut
(
dú
);

383  -
ENOSPC
;

385 
de
->
öode
 = inode->
i_num
;

386 
bh
->
b_dút
 = 1;

387 
	`bªl£
(
bh
);

388 
	`ùut
(
dú
);

389 *
ªs_öode
 = 
öode
;

392 
ör
 = 
de
->
öode
;

393 
dev
 = 
dú
->
i_dev
;

394 
	`bªl£
(
bh
);

395 
	`ùut
(
dú
);

396 i‡(
Êag
 & 
O_EXCL
)

397  -
EEXIST
;

398 i‡(!(
öode
=
	`igë
(
dev
,
ör
)))

399  -
EACCES
;

400 i‡((
	`S_ISDIR
(
öode
->
i_mode
Ë&& (
Êag
 & 
O_ACCMODE
)) ||

401 !
	`≥rmissi⁄
(
öode
,
	`ACC_MODE
(
Êag
))) {

402 
	`ùut
(
öode
);

403  -
EPERM
;

405 
öode
->
i_©ime
 = 
CURRENT_TIME
;

406 i‡(
Êag
 & 
O_TRUNC
)

407 
	`åunˇã
(
öode
);

408 *
ªs_öode
 = 
öode
;

410 
	}
}

412 
	$sys_mknod
(c⁄° * 
fûíame
, 
mode
, 
dev
)

414 c⁄° * 
ba£«me
;

415 
«mñí
;

416 
m_öode
 * 
dú
, * 
öode
;

417 
buf„r_hód
 * 
bh
;

418 
dú_íåy
 * 
de
;

420 i‡(!
	`su£r
())

421  -
EPERM
;

422 i‡(!(
dú
 = 
	`dú_«mei
(
fûíame
,&
«mñí
,&
ba£«me
)))

423  -
ENOENT
;

424 i‡(!
«mñí
) {

425 
	`ùut
(
dú
);

426  -
ENOENT
;

428 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

429 
	`ùut
(
dú
);

430  -
EPERM
;

432 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

433 i‡(
bh
) {

434 
	`bªl£
(
bh
);

435 
	`ùut
(
dú
);

436  -
EEXIST
;

438 
öode
 = 
	`√w_öode
(
dú
->
i_dev
);

439 i‡(!
öode
) {

440 
	`ùut
(
dú
);

441  -
ENOSPC
;

443 
öode
->
i_mode
 = 
mode
;

444 i‡(
	`S_ISBLK
(
mode
Ë|| 
	`S_ISCHR
(mode))

445 
öode
->
i_z⁄e
[0] = 
dev
;

446 
öode
->
i_mtime
 = inode->
i_©ime
 = 
CURRENT_TIME
;

447 
öode
->
i_dút
 = 1;

448 
bh
 = 
	`add_íåy
(
dú
,
ba£«me
,
«mñí
,&
de
);

449 i‡(!
bh
) {

450 
	`ùut
(
dú
);

451 
öode
->
i_∆öks
=0;

452 
	`ùut
(
öode
);

453  -
ENOSPC
;

455 
de
->
öode
 = inode->
i_num
;

456 
bh
->
b_dút
 = 1;

457 
	`ùut
(
dú
);

458 
	`ùut
(
öode
);

459 
	`bªl£
(
bh
);

461 
	}
}

463 
	$sys_mkdú
(c⁄° * 
∑th«me
, 
mode
)

465 c⁄° * 
ba£«me
;

466 
«mñí
;

467 
m_öode
 * 
dú
, * 
öode
;

468 
buf„r_hód
 * 
bh
, *
dú_block
;

469 
dú_íåy
 * 
de
;

471 i‡(!
	`su£r
())

472  -
EPERM
;

473 i‡(!(
dú
 = 
	`dú_«mei
(
∑th«me
,&
«mñí
,&
ba£«me
)))

474  -
ENOENT
;

475 i‡(!
«mñí
) {

476 
	`ùut
(
dú
);

477  -
ENOENT
;

479 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

480 
	`ùut
(
dú
);

481  -
EPERM
;

483 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

484 i‡(
bh
) {

485 
	`bªl£
(
bh
);

486 
	`ùut
(
dú
);

487  -
EEXIST
;

489 
öode
 = 
	`√w_öode
(
dú
->
i_dev
);

490 i‡(!
öode
) {

491 
	`ùut
(
dú
);

492  -
ENOSPC
;

494 
öode
->
i_size
 = 32;

495 
öode
->
i_dút
 = 1;

496 
öode
->
i_mtime
 = inode->
i_©ime
 = 
CURRENT_TIME
;

497 i‡(!(
öode
->
i_z⁄e
[0]=
	`√w_block
(öode->
i_dev
))) {

498 
	`ùut
(
dú
);

499 
öode
->
i_∆öks
--;

500 
	`ùut
(
öode
);

501  -
ENOSPC
;

503 
öode
->
i_dút
 = 1;

504 i‡(!(
dú_block
=
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[0]))) {

505 
	`ùut
(
dú
);

506 
	`‰ì_block
(
öode
->
i_dev
,öode->
i_z⁄e
[0]);

507 
öode
->
i_∆öks
--;

508 
	`ùut
(
öode
);

509  -
ERROR
;

511 
de
 = (
dú_íåy
 *Ë
dú_block
->
b_d©a
;

512 
de
->
öode
=öode->
i_num
;

513 
	`°r˝y
(
de
->
«me
,".");

514 
de
++;

515 
de
->
öode
 = 
dú
->
i_num
;

516 
	`°r˝y
(
de
->
«me
,"..");

517 
öode
->
i_∆öks
 = 2;

518 
dú_block
->
b_dút
 = 1;

519 
	`bªl£
(
dú_block
);

520 
öode
->
i_mode
 = 
I_DIRECTORY
 | (
mode
 & 0777 & ~
cuºít
->
umask
);

521 
öode
->
i_dút
 = 1;

522 
bh
 = 
	`add_íåy
(
dú
,
ba£«me
,
«mñí
,&
de
);

523 i‡(!
bh
) {

524 
	`ùut
(
dú
);

525 
	`‰ì_block
(
öode
->
i_dev
,öode->
i_z⁄e
[0]);

526 
öode
->
i_∆öks
=0;

527 
	`ùut
(
öode
);

528  -
ENOSPC
;

530 
de
->
öode
 = inode->
i_num
;

531 
bh
->
b_dút
 = 1;

532 
dú
->
i_∆öks
++;

533 
dú
->
i_dút
 = 1;

534 
	`ùut
(
dú
);

535 
	`ùut
(
öode
);

536 
	`bªl£
(
bh
);

538 
	}
}

543 
	$em±y_dú
(
m_öode
 * 
öode
)

545 
ƒ
,
block
;

546 
Àn
;

547 
buf„r_hód
 * 
bh
;

548 
dú_íåy
 * 
de
;

550 
Àn
 = 
öode
->
i_size
 /  (
dú_íåy
);

551 i‡(
Àn
<2 || !
öode
->
i_z⁄e
[0] ||

552 !(
bh
=
	`bªad
(
öode
->
i_dev
,öode->
i_z⁄e
[0]))) {

553 
	`¥ötk
("w¨nög - bad dúe˘‹y o¿dev %04x\n",
öode
->
i_dev
);

556 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

557 i‡(
de
[0].
öode
 !öode->
i_num
 || !de[1].inode ||

558 
	`°rcmp
(".",
de
[0].
«me
) || strcmp("..",de[1].name)) {

559 
	`¥ötk
("w¨nög - bad dúe˘‹y o¿dev %04x\n",
öode
->
i_dev
);

562 
ƒ
 = 2;

563 
de
 += 2;

564 
ƒ
<
Àn
) {

565 i‡((*Ë
de
 >(*Ë(
bh
->
b_d©a
+
BLOCK_SIZE
)) {

566 
	`bªl£
(
bh
);

567 
block
=
	`bm≠
(
öode
,
ƒ
/
DIR_ENTRIES_PER_BLOCK
);

568 i‡(!
block
) {

569 
ƒ
 +
DIR_ENTRIES_PER_BLOCK
;

572 i‡(!(
bh
=
	`bªad
(
öode
->
i_dev
,
block
)))

574 
de
 = (
dú_íåy
 *Ë
bh
->
b_d©a
;

576 i‡(
de
->
öode
) {

577 
	`bªl£
(
bh
);

580 
de
++;

581 
ƒ
++;

583 
	`bªl£
(
bh
);

585 
	}
}

587 
	$sys_rmdú
(c⁄° * 
«me
)

589 c⁄° * 
ba£«me
;

590 
«mñí
;

591 
m_öode
 * 
dú
, * 
öode
;

592 
buf„r_hód
 * 
bh
;

593 
dú_íåy
 * 
de
;

595 i‡(!
	`su£r
())

596  -
EPERM
;

597 i‡(!(
dú
 = 
	`dú_«mei
(
«me
,&
«mñí
,&
ba£«me
)))

598  -
ENOENT
;

599 i‡(!
«mñí
) {

600 
	`ùut
(
dú
);

601  -
ENOENT
;

603 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

604 
	`ùut
(
dú
);

605  -
EPERM
;

607 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

608 i‡(!
bh
) {

609 
	`ùut
(
dú
);

610  -
ENOENT
;

612 i‡(!(
öode
 = 
	`igë
(
dú
->
i_dev
, 
de
->inode))) {

613 
	`ùut
(
dú
);

614 
	`bªl£
(
bh
);

615  -
EPERM
;

617 i‡((
dú
->
i_mode
 & 
S_ISVTX
Ë&& 
cuºít
->
euid
 &&

618 
öode
->
i_uid
 !
cuºít
->
euid
) {

619 
	`ùut
(
dú
);

620 
	`ùut
(
öode
);

621 
	`bªl£
(
bh
);

622  -
EPERM
;

624 i‡(
öode
->
i_dev
 !
dú
->i_dev || inode->
i_cou¡
>1) {

625 
	`ùut
(
dú
);

626 
	`ùut
(
öode
);

627 
	`bªl£
(
bh
);

628  -
EPERM
;

630 i‡(
öode
 =
dú
) {

631 
	`ùut
(
öode
);

632 
	`ùut
(
dú
);

633 
	`bªl£
(
bh
);

634  -
EPERM
;

636 i‡(!
	`S_ISDIR
(
öode
->
i_mode
)) {

637 
	`ùut
(
öode
);

638 
	`ùut
(
dú
);

639 
	`bªl£
(
bh
);

640  -
ENOTDIR
;

642 i‡(!
	`em±y_dú
(
öode
)) {

643 
	`ùut
(
öode
);

644 
	`ùut
(
dú
);

645 
	`bªl£
(
bh
);

646  -
ENOTEMPTY
;

648 i‡(
öode
->
i_∆öks
 != 2)

649 
	`¥ötk
("em±y dúe˘‹y ha†∆ök!=2 (%d)",
öode
->
i_∆öks
);

650 
de
->
öode
 = 0;

651 
bh
->
b_dút
 = 1;

652 
	`bªl£
(
bh
);

653 
öode
->
i_∆öks
=0;

654 
öode
->
i_dút
=1;

655 
dú
->
i_∆öks
--;

656 
dú
->
i_˘ime
 = dú->
i_mtime
 = 
CURRENT_TIME
;

657 
dú
->
i_dút
=1;

658 
	`ùut
(
dú
);

659 
	`ùut
(
öode
);

661 
	}
}

663 
	$sys_u∆ök
(c⁄° * 
«me
)

665 c⁄° * 
ba£«me
;

666 
«mñí
;

667 
m_öode
 * 
dú
, * 
öode
;

668 
buf„r_hód
 * 
bh
;

669 
dú_íåy
 * 
de
;

671 i‡(!(
dú
 = 
	`dú_«mei
(
«me
,&
«mñí
,&
ba£«me
)))

672  -
ENOENT
;

673 i‡(!
«mñí
) {

674 
	`ùut
(
dú
);

675  -
ENOENT
;

677 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

678 
	`ùut
(
dú
);

679  -
EPERM
;

681 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

682 i‡(!
bh
) {

683 
	`ùut
(
dú
);

684  -
ENOENT
;

686 i‡(!(
öode
 = 
	`igë
(
dú
->
i_dev
, 
de
->inode))) {

687 
	`ùut
(
dú
);

688 
	`bªl£
(
bh
);

689  -
ENOENT
;

691 i‡((
dú
->
i_mode
 & 
S_ISVTX
Ë&& !
	`su£r
() &&

692 
cuºít
->
euid
 !
öode
->
i_uid
 &&

693 
cuºít
->
euid
 !
dú
->
i_uid
) {

694 
	`ùut
(
dú
);

695 
	`ùut
(
öode
);

696 
	`bªl£
(
bh
);

697  -
EPERM
;

699 i‡(
	`S_ISDIR
(
öode
->
i_mode
)) {

700 
	`ùut
(
öode
);

701 
	`ùut
(
dú
);

702 
	`bªl£
(
bh
);

703  -
EPERM
;

705 i‡(!
öode
->
i_∆öks
) {

706 
	`¥ötk
("DeletingÇonexistent file (%04x:%d), %d\n",

707 
öode
->
i_dev
,öode->
i_num
,öode->
i_∆öks
);

708 
öode
->
i_∆öks
=1;

710 
de
->
öode
 = 0;

711 
bh
->
b_dút
 = 1;

712 
	`bªl£
(
bh
);

713 
öode
->
i_∆öks
--;

714 
öode
->
i_dút
 = 1;

715 
öode
->
i_˘ime
 = 
CURRENT_TIME
;

716 
	`ùut
(
öode
);

717 
	`ùut
(
dú
);

719 
	}
}

721 
	$sys_lök
(c⁄° * 
ﬁd«me
, c⁄° * 
√w«me
)

723 
dú_íåy
 * 
de
;

724 
m_öode
 * 
ﬁdöode
, * 
dú
;

725 
buf„r_hód
 * 
bh
;

726 c⁄° * 
ba£«me
;

727 
«mñí
;

729 
ﬁdöode
=
	`«mei
(
ﬁd«me
);

730 i‡(!
ﬁdöode
)

731  -
ENOENT
;

732 i‡(
	`S_ISDIR
(
ﬁdöode
->
i_mode
)) {

733 
	`ùut
(
ﬁdöode
);

734  -
EPERM
;

736 
dú
 = 
	`dú_«mei
(
√w«me
,&
«mñí
,&
ba£«me
);

737 i‡(!
dú
) {

738 
	`ùut
(
ﬁdöode
);

739  -
EACCES
;

741 i‡(!
«mñí
) {

742 
	`ùut
(
ﬁdöode
);

743 
	`ùut
(
dú
);

744  -
EPERM
;

746 i‡(
dú
->
i_dev
 !
ﬁdöode
->i_dev) {

747 
	`ùut
(
dú
);

748 
	`ùut
(
ﬁdöode
);

749  -
EXDEV
;

751 i‡(!
	`≥rmissi⁄
(
dú
,
MAY_WRITE
)) {

752 
	`ùut
(
dú
);

753 
	`ùut
(
ﬁdöode
);

754  -
EACCES
;

756 
bh
 = 
	`föd_íåy
(&
dú
,
ba£«me
,
«mñí
,&
de
);

757 i‡(
bh
) {

758 
	`bªl£
(
bh
);

759 
	`ùut
(
dú
);

760 
	`ùut
(
ﬁdöode
);

761  -
EEXIST
;

763 
bh
 = 
	`add_íåy
(
dú
,
ba£«me
,
«mñí
,&
de
);

764 i‡(!
bh
) {

765 
	`ùut
(
dú
);

766 
	`ùut
(
ﬁdöode
);

767  -
ENOSPC
;

769 
de
->
öode
 = 
ﬁdöode
->
i_num
;

770 
bh
->
b_dút
 = 1;

771 
	`bªl£
(
bh
);

772 
	`ùut
(
dú
);

773 
ﬁdöode
->
i_∆öks
++;

774 
ﬁdöode
->
i_˘ime
 = 
CURRENT_TIME
;

775 
ﬁdöode
->
i_dút
 = 1;

776 
	`ùut
(
ﬁdöode
);

778 
	}
}

	@linux-0.11/fs/open.c

8 
	~<î∫o.h
>

9 
	~<f˙é.h
>

10 
	~<sys/ty≥s.h
>

11 
	~<utime.h
>

12 
	~<sys/°©.h
>

14 
	~<löux/sched.h
>

15 
	~<löux/ây.h
>

16 
	~<löux/kî√l.h
>

17 
	~<asm/£gmít.h
>

19 
	$sys_u°©
(
dev
, 
u°©
 * 
ubuf
)

21  -
ENOSYS
;

22 
	}
}

24 
	$sys_utime
(* 
fûíame
, 
utimbuf
 * 
times
)

26 
m_öode
 * 
öode
;

27 
a˘ime
,
modtime
;

29 i‡(!(
öode
=
	`«mei
(
fûíame
)))

30  -
ENOENT
;

31 i‡(
times
) {

32 
a˘ime
 = 
	`gë_fs_l⁄g
((*Ë&
times
->actime);

33 
modtime
 = 
	`gë_fs_l⁄g
((*Ë&
times
->modtime);

35 
a˘ime
 = 
modtime
 = 
CURRENT_TIME
;

36 
öode
->
i_©ime
 = 
a˘ime
;

37 
öode
->
i_mtime
 = 
modtime
;

38 
öode
->
i_dút
 = 1;

39 
	`ùut
(
öode
);

41 
	}
}

47 
	$sys_ac˚ss
(c⁄° * 
fûíame
,
mode
)

49 
m_öode
 * 
öode
;

50 
ªs
, 
i_mode
;

52 
mode
 &= 0007;

53 i‡(!(
öode
=
	`«mei
(
fûíame
)))

54  -
EACCES
;

55 
i_mode
 = 
ªs
 = 
öode
->i_mode & 0777;

56 
	`ùut
(
öode
);

57 i‡(
cuºít
->
uid
 =
öode
->
i_uid
)

58 
ªs
 >>= 6;

59 i‡(
cuºít
->
gid
 =
öode
->
i_gid
)

60 
ªs
 >>= 6;

61 i‡((
ªs
 & 0007 & 
mode
) == mode)

69 i‡((!
cuºít
->
uid
) &&

70 (!(
mode
 & 1Ë|| (
i_mode
 & 0111)))

72  -
EACCES
;

73 
	}
}

75 
	$sys_chdú
(c⁄° * 
fûíame
)

77 
m_öode
 * 
öode
;

79 i‡(!(
öode
 = 
	`«mei
(
fûíame
)))

80  -
ENOENT
;

81 i‡(!
	`S_ISDIR
(
öode
->
i_mode
)) {

82 
	`ùut
(
öode
);

83  -
ENOTDIR
;

85 
	`ùut
(
cuºít
->
pwd
);

86 
cuºít
->
pwd
 = 
öode
;

88 
	}
}

90 
	$sys_chroŸ
(c⁄° * 
fûíame
)

92 
m_öode
 * 
öode
;

94 i‡(!(
öode
=
	`«mei
(
fûíame
)))

95  -
ENOENT
;

96 i‡(!
	`S_ISDIR
(
öode
->
i_mode
)) {

97 
	`ùut
(
öode
);

98  -
ENOTDIR
;

100 
	`ùut
(
cuºít
->
roŸ
);

101 
cuºít
->
roŸ
 = 
öode
;

103 
	}
}

105 
	$sys_chmod
(c⁄° * 
fûíame
,
mode
)

107 
m_öode
 * 
öode
;

109 i‡(!(
öode
=
	`«mei
(
fûíame
)))

110  -
ENOENT
;

111 i‡((
cuºít
->
euid
 !
öode
->
i_uid
Ë&& !
	`su£r
()) {

112 
	`ùut
(
öode
);

113  -
EACCES
;

115 
öode
->
i_mode
 = (
mode
 & 07777) | (inode->i_mode & ~07777);

116 
öode
->
i_dút
 = 1;

117 
	`ùut
(
öode
);

119 
	}
}

121 
	$sys_chown
(c⁄° * 
fûíame
,
uid
,
gid
)

123 
m_öode
 * 
öode
;

125 i‡(!(
öode
=
	`«mei
(
fûíame
)))

126  -
ENOENT
;

127 i‡(!
	`su£r
()) {

128 
	`ùut
(
öode
);

129  -
EACCES
;

131 
öode
->
i_uid
=
uid
;

132 
öode
->
i_gid
=
gid
;

133 
öode
->
i_dút
=1;

134 
	`ùut
(
öode
);

136 
	}
}

138 
	$sys_›í
(c⁄° * 
fûíame
,
Êag
,
mode
)

140 
m_öode
 * 
öode
;

141 
fûe
 * 
f
;

142 
i
,
fd
;

144 
mode
 &0777 & ~
cuºít
->
umask
;

145 
fd
=0 ; fd<
NR_OPEN
 ; fd++)

146 i‡(!
cuºít
->
fûp
[
fd
])

148 i‡(
fd
>=
NR_OPEN
)

149  -
EINVAL
;

150 
cuºít
->
˛o£_⁄_exec
 &~(1<<
fd
);

151 
f
=0+
fûe_èbÀ
;

152 
i
=0 ; i<
NR_FILE
 ; i++,
f
++)

153 i‡(!
f
->
f_cou¡
) ;

154 i‡(
i
>=
NR_FILE
)

155  -
EINVAL
;

156 (
cuºít
->
fûp
[
fd
]=
f
)->
f_cou¡
++;

157 i‡((
i
=
	`›í_«mei
(
fûíame
,
Êag
,
mode
,&
öode
))<0) {

158 
cuºít
->
fûp
[
fd
]=
NULL
;

159 
f
->
f_cou¡
=0;

160  
i
;

163 i‡(
	`S_ISCHR
(
öode
->
i_mode
)) {

164 i‡(
	`MAJOR
(
öode
->
i_z⁄e
[0])==4) {

165 i‡(
cuºít
->
Àadî
 && cuºít->
ây
<0) {

166 
cuºít
->
ây
 = 
	`MINOR
(
öode
->
i_z⁄e
[0]);

167 
ây_èbÀ
[
cuºít
->
ây
].
pgΩ
 = current->pgrp;

169 } i‡(
	`MAJOR
(
öode
->
i_z⁄e
[0])==5)

170 i‡(
cuºít
->
ây
<0) {

171 
	`ùut
(
öode
);

172 
cuºít
->
fûp
[
fd
]=
NULL
;

173 
f
->
f_cou¡
=0;

174  -
EPERM
;

178 i‡(
	`S_ISBLK
(
öode
->
i_mode
))

179 
	`check_disk_ch™ge
(
öode
->
i_z⁄e
[0]);

180 
f
->
f_mode
 = 
öode
->
i_mode
;

181 
f
->
f_Êags
 = 
Êag
;

182 
f
->
f_cou¡
 = 1;

183 
f
->
f_öode
 = 
öode
;

184 
f
->
f_pos
 = 0;

185  (
fd
);

186 
	}
}

188 
	$sys_¸ót
(c⁄° * 
∑th«me
, 
mode
)

190  
	`sys_›í
(
∑th«me
, 
O_CREAT
 | 
O_TRUNC
, 
mode
);

191 
	}
}

193 
	$sys_˛o£
(
fd
)

195 
fûe
 * 
fûp
;

197 i‡(
fd
 >
NR_OPEN
)

198  -
EINVAL
;

199 
cuºít
->
˛o£_⁄_exec
 &~(1<<
fd
);

200 i‡(!(
fûp
 = 
cuºít
->fûp[
fd
]))

201  -
EINVAL
;

202 
cuºít
->
fûp
[
fd
] = 
NULL
;

203 i‡(
fûp
->
f_cou¡
 == 0)

204 
	`∑nic
("Close: file count is 0");

205 i‡(--
fûp
->
f_cou¡
)

207 
	`ùut
(
fûp
->
f_öode
);

209 
	}
}

	@linux-0.11/fs/pipe.c

7 
	~<sig«l.h
>

9 
	~<löux/sched.h
>

10 
	~<löux/mm.h
>

11 
	~<asm/£gmít.h
>

13 
	$ªad_pùe
(
m_öode
 * 
öode
, * 
buf
, 
cou¡
)

15 
ch¨s
, 
size
, 
ªad
 = 0;

17 
cou¡
>0) {

18 !(
size
=
	`PIPE_SIZE
(*
öode
))) {

19 
	`wake_up
(&
öode
->
i_waô
);

20 i‡(
öode
->
i_cou¡
 != 2)

21  
ªad
;

22 
	`¶ìp_⁄
(&
öode
->
i_waô
);

24 
ch¨s
 = 
PAGE_SIZE
-
	`PIPE_TAIL
(*
öode
);

25 i‡(
ch¨s
 > 
cou¡
)

26 
ch¨s
 = 
cou¡
;

27 i‡(
ch¨s
 > 
size
)

28 
ch¨s
 = 
size
;

29 
cou¡
 -
ch¨s
;

30 
ªad
 +
ch¨s
;

31 
size
 = 
	`PIPE_TAIL
(*
öode
);

32 
	`PIPE_TAIL
(*
öode
Ë+
ch¨s
;

33 
	`PIPE_TAIL
(*
öode
Ë&(
PAGE_SIZE
-1);

34 
ch¨s
-->0)

35 
	`put_fs_byã
(((*)
öode
->
i_size
)[
size
++],
buf
++);

37 
	`wake_up
(&
öode
->
i_waô
);

38  
ªad
;

39 
	}
}

41 
	$wrôe_pùe
(
m_öode
 * 
öode
, * 
buf
, 
cou¡
)

43 
ch¨s
, 
size
, 
wrôãn
 = 0;

45 
cou¡
>0) {

46 !(
size
=(
PAGE_SIZE
-1)-
	`PIPE_SIZE
(*
öode
))) {

47 
	`wake_up
(&
öode
->
i_waô
);

48 i‡(
öode
->
i_cou¡
 != 2) {

49 
cuºít
->
sig«l
 |(1<<(
SIGPIPE
-1));

50  
wrôãn
?written:-1;

52 
	`¶ìp_⁄
(&
öode
->
i_waô
);

54 
ch¨s
 = 
PAGE_SIZE
-
	`PIPE_HEAD
(*
öode
);

55 i‡(
ch¨s
 > 
cou¡
)

56 
ch¨s
 = 
cou¡
;

57 i‡(
ch¨s
 > 
size
)

58 
ch¨s
 = 
size
;

59 
cou¡
 -
ch¨s
;

60 
wrôãn
 +
ch¨s
;

61 
size
 = 
	`PIPE_HEAD
(*
öode
);

62 
	`PIPE_HEAD
(*
öode
Ë+
ch¨s
;

63 
	`PIPE_HEAD
(*
öode
Ë&(
PAGE_SIZE
-1);

64 
ch¨s
-->0)

65 ((*)
öode
->
i_size
)[
size
++]=
	`gë_fs_byã
(
buf
++);

67 
	`wake_up
(&
öode
->
i_waô
);

68  
wrôãn
;

69 
	}
}

71 
	$sys_pùe
(* 
fûdes
)

73 
m_öode
 * 
öode
;

74 
fûe
 * 
f
[2];

75 
fd
[2];

76 
i
,
j
;

78 
j
=0;

79 
i
=0;
j
<2 && i<
NR_FILE
;i++)

80 i‡(!
fûe_èbÀ
[
i
].
f_cou¡
)

81 (
f
[
j
++]=
i
+
fûe_èbÀ
)->
f_cou¡
++;

82 i‡(
j
==1)

83 
f
[0]->
f_cou¡
=0;

84 i‡(
j
<2)

86 
j
=0;

87 
i
=0;
j
<2 && i<
NR_OPEN
;i++)

88 i‡(!
cuºít
->
fûp
[
i
]) {

89 
cuºít
->
fûp
[ 
fd
[
j
]=
i
 ] = 
f
[j];

90 
j
++;

92 i‡(
j
==1)

93 
cuºít
->
fûp
[
fd
[0]]=
NULL
;

94 i‡(
j
<2) {

95 
f
[0]->
f_cou¡
=f[1]->f_count=0;

98 i‡(!(
öode
=
	`gë_pùe_öode
())) {

99 
cuºít
->
fûp
[
fd
[0]] =

100 
cuºít
->
fûp
[
fd
[1]] = 
NULL
;

101 
f
[0]->
f_cou¡
 = f[1]->f_count = 0;

104 
f
[0]->
f_öode
 = f[1]->f_öodê
öode
;

105 
f
[0]->
f_pos
 = f[1]->f_pos = 0;

106 
f
[0]->
f_mode
 = 1;

107 
f
[1]->
f_mode
 = 2;

108 
	`put_fs_l⁄g
(
fd
[0],0+
fûdes
);

109 
	`put_fs_l⁄g
(
fd
[1],1+
fûdes
);

111 
	}
}

	@linux-0.11/fs/read_write.c

7 
	~<sys/°©.h
>

8 
	~<î∫o.h
>

9 
	~<sys/ty≥s.h
>

11 
	~<löux/kî√l.h
>

12 
	~<löux/sched.h
>

13 
	~<asm/£gmít.h
>

15 
rw_ch¨
(
rw
,
dev
, * 
buf
, 
cou¡
, 
off_t
 * 
pos
);

16 
ªad_pùe
(
m_öode
 * 
öode
, * 
buf
, 
cou¡
);

17 
wrôe_pùe
(
m_öode
 * 
öode
, * 
buf
, 
cou¡
);

18 
block_ªad
(
dev
, 
off_t
 * 
pos
, * 
buf
, 
cou¡
);

19 
block_wrôe
(
dev
, 
off_t
 * 
pos
, * 
buf
, 
cou¡
);

20 
fûe_ªad
(
m_öode
 * 
öode
, 
fûe
 * 
fûp
,

21 * 
buf
, 
cou¡
);

22 
fûe_wrôe
(
m_öode
 * 
öode
, 
fûe
 * 
fûp
,

23 * 
buf
, 
cou¡
);

25 
	$sys_l£ek
(
fd
,
off_t
 
off£t
, 
‹igö
)

27 
fûe
 * file;

28 
tmp
;

30 i‡(
fd
 >
NR_OPEN
 || !(
fûe
=
cuºít
->
fûp
[fd]Ë|| !(fûe->
f_öode
)

31 || !
	`IS_SEEKABLE
(
	`MAJOR
(
fûe
->
f_öode
->
i_dev
)))

32  -
EBADF
;

33 i‡(
fûe
->
f_öode
->
i_pùe
)

34  -
ESPIPE
;

35 
‹igö
) {

37 i‡(
off£t
<0Ë -
EINVAL
;

38 
fûe
->
f_pos
=
off£t
;

41 i‡(
fûe
->
f_pos
+
off£t
<0Ë -
EINVAL
;

42 
fûe
->
f_pos
 +
off£t
;

45 i‡((
tmp
=
fûe
->
f_öode
->
i_size
+
off£t
) < 0)

46  -
EINVAL
;

47 
fûe
->
f_pos
 = 
tmp
;

50  -
EINVAL
;

52  
fûe
->
f_pos
;

53 
	}
}

55 
	$sys_ªad
(
fd
,* 
buf
,
cou¡
)

57 
fûe
 * file;

58 
m_öode
 * 
öode
;

60 i‡(
fd
>=
NR_OPEN
 || 
cou¡
<0 || !(
fûe
=
cuºít
->
fûp
[fd]))

61  -
EINVAL
;

62 i‡(!
cou¡
)

64 
	`vîify_¨ó
(
buf
,
cou¡
);

65 
öode
 = 
fûe
->
f_öode
;

66 i‡(
öode
->
i_pùe
)

67  (
fûe
->
f_mode
&1)?
	`ªad_pùe
(
öode
,
buf
,
cou¡
):-
EIO
;

68 i‡(
	`S_ISCHR
(
öode
->
i_mode
))

69  
	`rw_ch¨
(
READ
,
öode
->
i_z⁄e
[0],
buf
,
cou¡
,&
fûe
->
f_pos
);

70 i‡(
	`S_ISBLK
(
öode
->
i_mode
))

71  
	`block_ªad
(
öode
->
i_z⁄e
[0],&
fûe
->
f_pos
,
buf
,
cou¡
);

72 i‡(
	`S_ISDIR
(
öode
->
i_mode
Ë|| 
	`S_ISREG
(inode->i_mode)) {

73 i‡(
cou¡
+
fûe
->
f_pos
 > 
öode
->
i_size
)

74 
cou¡
 = 
öode
->
i_size
 - 
fûe
->
f_pos
;

75 i‡(
cou¡
<=0)

77  
	`fûe_ªad
(
öode
,
fûe
,
buf
,
cou¡
);

79 
	`¥ötk
("(Ród)öode->i_mode=%06o\n\r",
öode
->
i_mode
);

80  -
EINVAL
;

81 
	}
}

83 
	$sys_wrôe
(
fd
,* 
buf
,
cou¡
)

85 
fûe
 * file;

86 
m_öode
 * 
öode
;

88 i‡(
fd
>=
NR_OPEN
 || 
cou¡
 <0 || !(
fûe
=
cuºít
->
fûp
[fd]))

89  -
EINVAL
;

90 i‡(!
cou¡
)

92 
öode
=
fûe
->
f_öode
;

93 i‡(
öode
->
i_pùe
)

94  (
fûe
->
f_mode
&2)?
	`wrôe_pùe
(
öode
,
buf
,
cou¡
):-
EIO
;

95 i‡(
	`S_ISCHR
(
öode
->
i_mode
))

96  
	`rw_ch¨
(
WRITE
,
öode
->
i_z⁄e
[0],
buf
,
cou¡
,&
fûe
->
f_pos
);

97 i‡(
	`S_ISBLK
(
öode
->
i_mode
))

98  
	`block_wrôe
(
öode
->
i_z⁄e
[0],&
fûe
->
f_pos
,
buf
,
cou¡
);

99 i‡(
	`S_ISREG
(
öode
->
i_mode
))

100  
	`fûe_wrôe
(
öode
,
fûe
,
buf
,
cou¡
);

101 
	`¥ötk
("(Wrôe)öode->i_mode=%06o\n\r",
öode
->
i_mode
);

102  -
EINVAL
;

103 
	}
}

	@linux-0.11/fs/stat.c

7 
	~<î∫o.h
>

8 
	~<sys/°©.h
>

10 
	~<löux/fs.h
>

11 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/£gmít.h
>

15 
	$˝_°©
(
m_öode
 * 
öode
, 
°©
 * 
°©buf
)

17 
°©
 
tmp
;

18 
i
;

20 
	`vîify_¨ó
(
°©buf
, (* statbuf));

21 
tmp
.
°_dev
 = 
öode
->
i_dev
;

22 
tmp
.
°_öo
 = 
öode
->
i_num
;

23 
tmp
.
°_mode
 = 
öode
->
i_mode
;

24 
tmp
.
°_∆ök
 = 
öode
->
i_∆öks
;

25 
tmp
.
°_uid
 = 
öode
->
i_uid
;

26 
tmp
.
°_gid
 = 
öode
->
i_gid
;

27 
tmp
.
°_rdev
 = 
öode
->
i_z⁄e
[0];

28 
tmp
.
°_size
 = 
öode
->
i_size
;

29 
tmp
.
°_©ime
 = 
öode
->
i_©ime
;

30 
tmp
.
°_mtime
 = 
öode
->
i_mtime
;

31 
tmp
.
°_˘ime
 = 
öode
->
i_˘ime
;

32 
i
=0 ; i< (
tmp
) ; i++)

33 
	`put_fs_byã
(((*Ë&
tmp
)[
i
],&((*Ë
°©buf
)[i]);

34 
	}
}

36 
	$sys_°©
(* 
fûíame
, 
°©
 * 
°©buf
)

38 
m_öode
 * 
öode
;

40 i‡(!(
öode
=
	`«mei
(
fûíame
)))

41  -
ENOENT
;

42 
	`˝_°©
(
öode
,
°©buf
);

43 
	`ùut
(
öode
);

45 
	}
}

47 
	$sys_f°©
(
fd
, 
°©
 * 
°©buf
)

49 
fûe
 * 
f
;

50 
m_öode
 * 
öode
;

52 i‡(
fd
 >
NR_OPEN
 || !(
f
=
cuºít
->
fûp
[fd]Ë|| !(
öode
=f->
f_öode
))

53  -
EBADF
;

54 
	`˝_°©
(
öode
,
°©buf
);

56 
	}
}

	@linux-0.11/fs/super.c

10 
	~<löux/c⁄fig.h
>

11 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/sy°em.h
>

15 
	~<î∫o.h
>

16 
	~<sys/°©.h
>

18 
sync_dev
(
dev
);

19 
waô_f‹_key¥ess
();

22 
	#£t_bô
(
bôƒ
,
addr
) ({ \

23 
__ªs
 ; \

24 
	`__asm__
("bà%2,%3;£tb %%Æ":"˜" (
__ªs
):"a" (0),"r" (
bôƒ
),"m" (*(
addr
))); \

25 
__ªs
; })

	)

27 
su≥r_block
 
	gsu≥r_block
[
NR_SUPER
];

29 
	gROOT_DEV
 = 0;

31 
	$lock_su≥r
(
su≥r_block
 * 
sb
)

33 
	`˛i
();

34 
sb
->
s_lock
)

35 
	`¶ìp_⁄
(&(
sb
->
s_waô
));

36 
sb
->
s_lock
 = 1;

37 
	`°i
();

38 
	}
}

40 
	$‰ì_su≥r
(
su≥r_block
 * 
sb
)

42 
	`˛i
();

43 
sb
->
s_lock
 = 0;

44 
	`wake_up
(&(
sb
->
s_waô
));

45 
	`°i
();

46 
	}
}

48 
	$waô_⁄_su≥r
(
su≥r_block
 * 
sb
)

50 
	`˛i
();

51 
sb
->
s_lock
)

52 
	`¶ìp_⁄
(&(
sb
->
s_waô
));

53 
	`°i
();

54 
	}
}

56 
su≥r_block
 * 
	$gë_su≥r
(
dev
)

58 
su≥r_block
 * 
s
;

60 i‡(!
dev
)

61  
NULL
;

62 
s
 = 0+
su≥r_block
;

63 
s
 < 
NR_SUPER
+
su≥r_block
)

64 i‡(
s
->
s_dev
 =
dev
) {

65 
	`waô_⁄_su≥r
(
s
);

66 i‡(
s
->
s_dev
 =
dev
)

67  
s
;

68 
s
 = 0+
su≥r_block
;

70 
s
++;

71  
NULL
;

72 
	}
}

74 
	$put_su≥r
(
dev
)

76 
su≥r_block
 * 
sb
;

78 
i
;

80 i‡(
dev
 =
ROOT_DEV
) {

81 
	`¥ötk
("root diskette changed:Örepare forármageddon\n\r");

84 i‡(!(
sb
 = 
	`gë_su≥r
(
dev
)))

86 i‡(
sb
->
s_imou¡
) {

87 
	`¥ötk
("Mounted disk changed -Åssk,Åssk\n\r");

90 
	`lock_su≥r
(
sb
);

91 
sb
->
s_dev
 = 0;

92 
i
=0;i<
I_MAP_SLOTS
;i++)

93 
	`bªl£
(
sb
->
s_im≠
[
i
]);

94 
i
=0;i<
Z_MAP_SLOTS
;i++)

95 
	`bªl£
(
sb
->
s_zm≠
[
i
]);

96 
	`‰ì_su≥r
(
sb
);

98 
	}
}

100 
su≥r_block
 * 
	$ªad_su≥r
(
dev
)

102 
su≥r_block
 * 
s
;

103 
buf„r_hód
 * 
bh
;

104 
i
,
block
;

106 i‡(!
dev
)

107  
NULL
;

108 
	`check_disk_ch™ge
(
dev
);

109 i‡((
s
 = 
	`gë_su≥r
(
dev
)))

110  
s
;

111 
s
 = 0+
su≥r_block
 ;; s++) {

112 i‡(
s
 >
NR_SUPER
+
su≥r_block
)

113  
NULL
;

114 i‡(!
s
->
s_dev
)

117 
s
->
s_dev
 = 
dev
;

118 
s
->
s_isup
 = 
NULL
;

119 
s
->
s_imou¡
 = 
NULL
;

120 
s
->
s_time
 = 0;

121 
s
->
s_rd_⁄ly
 = 0;

122 
s
->
s_dút
 = 0;

123 
	`lock_su≥r
(
s
);

124 i‡(!(
bh
 = 
	`bªad
(
dev
,1))) {

125 
s
->
s_dev
=0;

126 
	`‰ì_su≥r
(
s
);

127  
NULL
;

129 *((
d_su≥r_block
 *Ë
s
) =

130 *((
d_su≥r_block
 *Ë
bh
->
b_d©a
);

131 
	`bªl£
(
bh
);

132 i‡(
s
->
s_magic
 !
SUPER_MAGIC
) {

133 
s
->
s_dev
 = 0;

134 
	`‰ì_su≥r
(
s
);

135  
NULL
;

137 
i
=0;i<
I_MAP_SLOTS
;i++)

138 
s
->
s_im≠
[
i
] = 
NULL
;

139 
i
=0;i<
Z_MAP_SLOTS
;i++)

140 
s
->
s_zm≠
[
i
] = 
NULL
;

141 
block
=2;

142 
i
=0 ; i < 
s
->
s_im≠_blocks
 ; i++)

143 i‡((
s
->
s_im≠
[
i
]=
	`bªad
(
dev
,
block
)))

144 
block
++;

147 
i
=0 ; i < 
s
->
s_zm≠_blocks
 ; i++)

148 i‡((
s
->
s_zm≠
[
i
]=
	`bªad
(
dev
,
block
)))

149 
block
++;

152 i‡(
block
 !2+
s
->
s_im≠_blocks
+s->
s_zm≠_blocks
) {

153 
i
=0;i<
I_MAP_SLOTS
;i++)

154 
	`bªl£
(
s
->
s_im≠
[
i
]);

155 
i
=0;i<
Z_MAP_SLOTS
;i++)

156 
	`bªl£
(
s
->
s_zm≠
[
i
]);

157 
s
->
s_dev
=0;

158 
	`‰ì_su≥r
(
s
);

159  
NULL
;

161 
s
->
s_im≠
[0]->
b_d©a
[0] |= 1;

162 
s
->
s_zm≠
[0]->
b_d©a
[0] |= 1;

163 
	`‰ì_su≥r
(
s
);

164  
s
;

165 
	}
}

167 
	$sys_umou¡
(* 
dev_«me
)

169 
m_öode
 * 
öode
;

170 
su≥r_block
 * 
sb
;

171 
dev
;

173 i‡(!(
öode
=
	`«mei
(
dev_«me
)))

174  -
ENOENT
;

175 
dev
 = 
öode
->
i_z⁄e
[0];

176 i‡(!
	`S_ISBLK
(
öode
->
i_mode
)) {

177 
	`ùut
(
öode
);

178  -
ENOTBLK
;

180 
	`ùut
(
öode
);

181 i‡(
dev
==
ROOT_DEV
)

182  -
EBUSY
;

183 i‡(!(
sb
=
	`gë_su≥r
(
dev
)Ë|| !(sb->
s_imou¡
))

184  -
ENOENT
;

185 i‡(!
sb
->
s_imou¡
->
i_mou¡
)

186 
	`¥ötk
("Mounted inode has i_mount=0\n");

187 
öode
=
öode_èbÀ
+0 ; inode<öode_èbÀ+
NR_INODE
 ; inode++)

188 i‡(
öode
->
i_dev
==
dev
 && inode->
i_cou¡
)

189  -
EBUSY
;

190 
sb
->
s_imou¡
->
i_mou¡
=0;

191 
	`ùut
(
sb
->
s_imou¡
);

192 
sb
->
s_imou¡
 = 
NULL
;

193 
	`ùut
(
sb
->
s_isup
);

194 
sb
->
s_isup
 = 
NULL
;

195 
	`put_su≥r
(
dev
);

196 
	`sync_dev
(
dev
);

198 
	}
}

200 
	$sys_mou¡
(* 
dev_«me
, * 
dú_«me
, 
rw_Êag
)

202 
m_öode
 * 
dev_i
, * 
dú_i
;

203 
su≥r_block
 * 
sb
;

204 
dev
;

206 i‡(!(
dev_i
=
	`«mei
(
dev_«me
)))

207  -
ENOENT
;

208 
dev
 = 
dev_i
->
i_z⁄e
[0];

209 i‡(!
	`S_ISBLK
(
dev_i
->
i_mode
)) {

210 
	`ùut
(
dev_i
);

211  -
EPERM
;

213 
	`ùut
(
dev_i
);

214 i‡(!(
dú_i
=
	`«mei
(
dú_«me
)))

215  -
ENOENT
;

216 i‡(
dú_i
->
i_cou¡
 !1 || dú_i->
i_num
 =
ROOT_INO
) {

217 
	`ùut
(
dú_i
);

218  -
EBUSY
;

220 i‡(!
	`S_ISDIR
(
dú_i
->
i_mode
)) {

221 
	`ùut
(
dú_i
);

222  -
EPERM
;

224 i‡(!(
sb
=
	`ªad_su≥r
(
dev
))) {

225 
	`ùut
(
dú_i
);

226  -
EBUSY
;

228 i‡(
sb
->
s_imou¡
) {

229 
	`ùut
(
dú_i
);

230  -
EBUSY
;

232 i‡(
dú_i
->
i_mou¡
) {

233 
	`ùut
(
dú_i
);

234  -
EPERM
;

236 
sb
->
s_imou¡
=
dú_i
;

237 
dú_i
->
i_mou¡
=1;

238 
dú_i
->
i_dút
=1;

240 
	}
}

242 
	$mou¡_roŸ
()

244 
i
,
‰ì
;

245 
su≥r_block
 * 
p
;

246 
m_öode
 * 
mi
;

248 i‡(32 ! (
d_öode
))

249 
	`∑nic
("bad i-node size");

250 
i
=0;i<
NR_FILE
;i++)

251 
fûe_èbÀ
[
i
].
f_cou¡
=0;

252 i‡(
	`MAJOR
(
ROOT_DEV
) == 2) {

253 
	`¥ötk
("InsertÑoot floppyándÖress ENTER");

254 
	`waô_f‹_key¥ess
();

256 
p
 = &
su≥r_block
[0] ;Ö < &su≥r_block[
NR_SUPER
] ;Ö++) {

257 
p
->
s_dev
 = 0;

258 
p
->
s_lock
 = 0;

259 
p
->
s_waô
 = 
NULL
;

261 i‡(!(
p
=
	`ªad_su≥r
(
ROOT_DEV
)))

262 
	`∑nic
("UnableÅo mountÑoot");

263 i‡(!(
mi
=
	`igë
(
ROOT_DEV
,
ROOT_INO
)))

264 
	`∑nic
("UnableÅoÑeadÑoot i-node");

265 
mi
->
i_cou¡
 += 3 ;

266 
p
->
s_isup
 =Ö->
s_imou¡
 = 
mi
;

267 
cuºít
->
pwd
 = 
mi
;

268 
cuºít
->
roŸ
 = 
mi
;

269 
‰ì
=0;

270 
i
=
p
->
s_nz⁄es
;

271 -- 
i
 >= 0)

272 i‡(!
	`£t_bô
(
i
&8191,
p
->
s_zm≠
[i>>13]->
b_d©a
))

273 
‰ì
++;

274 
	`¥ötk
("%d/%d fªêblocks\n\r",
‰ì
,
p
->
s_nz⁄es
);

275 
‰ì
=0;

276 
i
=
p
->
s_nöodes
+1;

277 -- 
i
 >= 0)

278 i‡(!
	`£t_bô
(
i
&8191,
p
->
s_im≠
[i>>13]->
b_d©a
))

279 
‰ì
++;

280 
	`¥ötk
("%d/%d fªêöodes\n\r",
‰ì
,
p
->
s_nöodes
);

281 
	}
}

	@linux-0.11/fs/truncate.c

7 
	~<löux/sched.h
>

9 
	~<sys/°©.h
>

11 
	$‰ì_öd
(
dev
,
block
)

13 
buf„r_hód
 * 
bh
;

14 * 
p
;

15 
i
;

17 i‡(!
block
)

19 i‡((
bh
=
	`bªad
(
dev
,
block
))) {

20 
p
 = (*Ë
bh
->
b_d©a
;

21 
i
=0;i<512;i++,
p
++)

22 i‡(*
p
)

23 
	`‰ì_block
(
dev
,*
p
);

24 
	`bªl£
(
bh
);

26 
	`‰ì_block
(
dev
,
block
);

27 
	}
}

29 
	$‰ì_död
(
dev
,
block
)

31 
buf„r_hód
 * 
bh
;

32 * 
p
;

33 
i
;

35 i‡(!
block
)

37 i‡((
bh
=
	`bªad
(
dev
,
block
))) {

38 
p
 = (*Ë
bh
->
b_d©a
;

39 
i
=0;i<512;i++,
p
++)

40 i‡(*
p
)

41 
	`‰ì_öd
(
dev
,*
p
);

42 
	`bªl£
(
bh
);

44 
	`‰ì_block
(
dev
,
block
);

45 
	}
}

47 
	$åunˇã
(
m_öode
 * 
öode
)

49 
i
;

51 i‡(!(
	`S_ISREG
(
öode
->
i_mode
Ë|| 
	`S_ISDIR
(inode->i_mode)))

53 
i
=0;i<7;i++)

54 i‡(
öode
->
i_z⁄e
[
i
]) {

55 
	`‰ì_block
(
öode
->
i_dev
,öode->
i_z⁄e
[
i
]);

56 
öode
->
i_z⁄e
[
i
]=0;

58 
	`‰ì_öd
(
öode
->
i_dev
,öode->
i_z⁄e
[7]);

59 
	`‰ì_död
(
öode
->
i_dev
,öode->
i_z⁄e
[8]);

60 
öode
->
i_z⁄e
[7] = inode->i_zone[8] = 0;

61 
öode
->
i_size
 = 0;

62 
öode
->
i_dút
 = 1;

63 
öode
->
i_mtime
 = inode->
i_˘ime
 = 
CURRENT_TIME
;

64 
	}
}

	@linux-0.11/include/a.out.h

1 #i‚de‡
_A_OUT_H


2 
	#_A_OUT_H


	)

4 
	#__GNU_EXEC_MACROS__


	)

6 
	sexec
 {

7 
	ma_magic
;

8 
	ma_ãxt
;

9 
	ma_d©a
;

10 
	ma_bss
;

11 
	ma_syms
;

12 
	ma_íåy
;

13 
	ma_åsize
;

14 
	ma_drsize
;

17 #i‚de‡
N_MAGIC


18 
	#N_MAGIC
(
exec
Ë(”xec).
a_magic
)

	)

21 #i‚de‡
OMAGIC


23 
	#OMAGIC
 0407

	)

25 
	#NMAGIC
 0410

	)

27 
	#ZMAGIC
 0413

	)

30 #i‚de‡
N_BADMAG


31 
	#N_BADMAG
(
x
) \

32 (
	`N_MAGIC
(
x
Ë!
OMAGIC
 && N_MAGIC(xË!
NMAGIC
 \

33 && 
	`N_MAGIC
(
x
Ë!
ZMAGIC
)

	)

36 
	#_N_BADMAG
(
x
) \

37 (
	`N_MAGIC
(
x
Ë!
OMAGIC
 && N_MAGIC(xË!
NMAGIC
 \

38 && 
	`N_MAGIC
(
x
Ë!
ZMAGIC
)

	)

40 
	#_N_HDROFF
(
x
Ë(
SEGMENT_SIZE
 -  (
exec
))

	)

42 #i‚de‡
N_TXTOFF


43 
	#N_TXTOFF
(
x
) \

44 (
	`N_MAGIC
(
x
Ë=
ZMAGIC
 ? 
	`_N_HDROFF
((x)Ë+  (
exec
Ë:  (exec))

	)

47 #i‚de‡
N_DATOFF


48 
	#N_DATOFF
(
x
Ë(
	`N_TXTOFF
(xË+ (x).
a_ãxt
)

	)

51 #i‚de‡
N_TRELOFF


52 
	#N_TRELOFF
(
x
Ë(
	`N_DATOFF
(xË+ (x).
a_d©a
)

	)

55 #i‚de‡
N_DRELOFF


56 
	#N_DRELOFF
(
x
Ë(
	`N_TRELOFF
(xË+ (x).
a_åsize
)

	)

59 #i‚de‡
N_SYMOFF


60 
	#N_SYMOFF
(
x
Ë(
	`N_DRELOFF
(xË+ (x).
a_drsize
)

	)

63 #i‚de‡
N_STROFF


64 
	#N_STROFF
(
x
Ë(
	`N_SYMOFF
(xË+ (x).
a_syms
)

	)

68 #i‚de‡
N_TXTADDR


69 
	#N_TXTADDR
(
x
Ë0

	)

75 #i‡
deföed
(
vax
Ë|| deföed(
hp300
Ë|| deföed(
pyr
)

76 
	#SEGMENT_SIZE
 
PAGE_SIZE


	)

78 #ifdef 
hp300


79 
	#PAGE_SIZE
 4096

	)

81 #ifdef 
s⁄y


82 
	#SEGMENT_SIZE
 0x2000

	)

84 #ifde‡
is68k


85 
	#SEGMENT_SIZE
 0x20000

	)

87 #i‡
deföed
(
m68k
Ë&& deföed(
PORTAR
)

88 
	#PAGE_SIZE
 0x400

	)

89 
	#SEGMENT_SIZE
 
PAGE_SIZE


	)

92 
	#PAGE_SIZE
 4096

	)

93 
	#SEGMENT_SIZE
 1024

	)

95 
	#_N_SEGMENT_ROUND
(
x
Ë(((xË+ 
SEGMENT_SIZE
 - 1Ë& ~(SEGMENT_SIZE - 1))

	)

97 
	#_N_TXTENDADDR
(
x
Ë(
	`N_TXTADDR
(x)+(x).
a_ãxt
)

	)

99 #i‚de‡
N_DATADDR


100 
	#N_DATADDR
(
x
) \

101 (
	`N_MAGIC
(
x
)==
OMAGIC
? (
	`_N_TXTENDADDR
(x)) \

102 : (
	`_N_SEGMENT_ROUND
 (
	`_N_TXTENDADDR
(
x
))))

	)

106 #i‚de‡
N_BSSADDR


107 
	#N_BSSADDR
(
x
Ë(
	`N_DATADDR
(xË+ (x).
a_d©a
)

	)

110 #i‚de‡
N_NLIST_DECLARED


111 
	s∆i°
 {

113 *
	mn_«me
;

114 
∆i°
 *
	mn_√xt
;

115 
	mn_°rx
;

116 } 
	mn_un
;

117 
	mn_ty≥
;

118 
	mn_Ÿhî
;

119 
	mn_desc
;

120 
	mn_vÆue
;

124 #i‚de‡
N_UNDF


125 
	#N_UNDF
 0

	)

127 #i‚de‡
N_ABS


128 
	#N_ABS
 2

	)

130 #i‚de‡
N_TEXT


131 
	#N_TEXT
 4

	)

133 #i‚de‡
N_DATA


134 
	#N_DATA
 6

	)

136 #i‚de‡
N_BSS


137 
	#N_BSS
 8

	)

139 #i‚de‡
N_COMM


140 
	#N_COMM
 18

	)

142 #i‚de‡
N_FN


143 
	#N_FN
 15

	)

146 #i‚de‡
N_EXT


147 
	#N_EXT
 1

	)

149 #i‚de‡
N_TYPE


150 
	#N_TYPE
 036

	)

152 #i‚de‡
N_STAB


153 
	#N_STAB
 0340

	)

164 
	#N_INDR
 0xa

	)

178 
	#N_SETA
 0x14

	)

179 
	#N_SETT
 0x16

	)

180 
	#N_SETD
 0x18

	)

181 
	#N_SETB
 0x1A

	)

184 
	#N_SETV
 0x1C

	)

186 #i‚de‡
N_RELOCATION_INFO_DECLARED


193 
	sªloˇti⁄_öfo


196 
	mr_addªss
;

198 
	mr_symbﬁnum
:24;

202 
	mr_p¸ñ
:1;

205 
	mr_Àngth
:2;

212 
	mr_exã∫
:1;

215 
	mr_∑d
:4;

	@linux-0.11/include/asm/io.h

1 
	#outb
(
vÆue
,
p‹t
) \

2 
	`__asm__
 ("outb %%Æ,%%dx"::"a" (
vÆue
),"d" (
p‹t
))

	)

5 
	#öb
(
p‹t
) ({ \

6 
_v
; \

7 
__asm__
 vﬁ©ûê("öb %%dx,%%Æ":"˜" (
_v
):"d" (
p‹t
)); \

8 
_v
; \

9 })

	)

11 
	#outb_p
(
vÆue
,
p‹t
) \

12 
	`__asm__
 ("outb %%al,%%dx\n" \

15 "1:"::"a" (
vÆue
),"d" (
p‹t
))

	)

17 
	#öb_p
(
p‹t
) ({ \

18 
_v
; \

19 
__asm__
 volatile ("inb %%dx,%%al\n" \

22 "1:":"˜" (
_v
):"d" (
p‹t
)); \

23 
_v
; \

24 })

	)

	@linux-0.11/include/asm/memory.h

	@linux-0.11/include/asm/segment.h

1 
ölöe
 
	$gë_fs_byã
(c⁄° * 
addr
)

3 
_v
;

5 
	`__asm__
 ("movb %%fs:%1,%0":"Ù" (
_v
):"m" (*
addr
));

6  
_v
;

7 
	}
}

9 
ölöe
 
	$gë_fs_w‹d
(c⁄° *
addr
)

11 
_v
;

13 
	`__asm__
 ("movw %%fs:%1,%0":"Ù" (
_v
):"m" (*
addr
));

14  
_v
;

15 
	}
}

17 
ölöe
 
	$gë_fs_l⁄g
(c⁄° *
addr
)

19 
_v
;

21 
	`__asm__
 ("mov»%%fs:%1,%0":"Ù" (
_v
):"m" (*
addr
)); \

22  
_v
;

23 
	}
}

25 
ölöe
 
	$put_fs_byã
(
vÆ
,*
addr
)

27 
	`__asm__
 ("movb %0,%%fs:%1"::"r" (
vÆ
),"m" (*
addr
));

28 
	}
}

30 
ölöe
 
	$put_fs_w‹d
(
vÆ
,* 
addr
)

32 
	`__asm__
 ("movw %0,%%fs:%1"::"r" (
vÆ
),"m" (*
addr
));

33 
	}
}

35 
ölöe
 
	$put_fs_l⁄g
(
vÆ
,* 
addr
)

37 
	`__asm__
 ("mov»%0,%%fs:%1"::"r" (
vÆ
),"m" (*
addr
));

38 
	}
}

47 
ölöe
 
	$gë_fs
()

49 
_v
;

50 
	`__asm__
("mov %%fs,%%ax":"˜" (
_v
):);

51  
_v
;

52 
	}
}

54 
ölöe
 
	$gë_ds
()

56 
_v
;

57 
	`__asm__
("mov %%ds,%%ax":"˜" (
_v
):);

58  
_v
;

59 
	}
}

61 
ölöe
 
	$£t_fs
(
vÆ
)

63 
	`__asm__
("mov %0,%%fs"::"a" ((Ë
vÆ
));

64 
	}
}

	@linux-0.11/include/asm/system.h

1 
	#move_to_u£r_mode
() \

2 
	`__asm__
 ("movl %%esp,%%eax\n\t" \

14 :::"ax")

	)

16 
	#°i
(Ë
	`__asm__
 ("°i"::)

	)

17 
	#˛i
(Ë
	`__asm__
 ("˛i"::)

	)

18 
	#n›
(Ë
	`__asm__
 ("n›"::)

	)

20 
	#úë
(Ë
	`__asm__
 ("úë"::)

	)

22 
	#_£t_g©e
(
g©e_addr
,
ty≥
,
d∂
,
addr
) \

23 
	`__asm__
 ("movw %%dx,%%ax\n\t" \

28 : "i" ((Ë(0x8000+(
d∂
<<13)+(
ty≥
<<8))), \

29 "o" (*((*Ë(
g©e_addr
))), \

30 "o" (*(4+(*Ë(
g©e_addr
))), \

31 "d" ((*Ë(
addr
)),"a" (0x00080000))

	)

33 
	#£t_öå_g©e
(
n
,
addr
) \

34 
	`_£t_g©e
(&
idt
[
n
],14,0,
addr
)

	)

36 
	#£t_å≠_g©e
(
n
,
addr
) \

37 
	`_£t_g©e
(&
idt
[
n
],15,0,
addr
)

	)

39 
	#£t_sy°em_g©e
(
n
,
addr
) \

40 
	`_£t_g©e
(&
idt
[
n
],15,3,
addr
)

	)

42 
	#_£t_£g_desc
(
g©e_addr
,
ty≥
,
d∂
,
ba£
,
limô
) {\

43 *(
g©e_addr
Ë((
ba£
) & 0xff000000) | \

44 (((
ba£
) & 0x00ff0000)>>16) | \

45 ((
limô
) & 0xf0000) | \

46 ((
d∂
)<<13) | \

48 ((
ty≥
)<<8); \

49 *((
g©e_addr
)+1Ë(((
ba£
) & 0x0000ffff)<<16) | \

50 ((
limô
Ë& 0x0ffff); }

	)

52 
	#_£t_ts¶dt_desc
(
n
,
addr
,
ty≥
) \

53 
	`__asm__
 ("movw $104,%1\n\t" \

57 "movb $" 
ty≥
 ",%4\n\t" \

61 ::"a" (
addr
), "m" (*(
n
)), "m" (*(n+2)), "m" (*(n+4)), \

62 "m" (*(
n
+5)), "m" (*(n+6)), "m" (*(n+7)) \

63 )

	)

65 
	#£t_tss_desc
(
n
,
addr
Ë
	`_£t_ts¶dt_desc
(((*Ë“)),(()◊ddr)),"0x89")

	)

66 
	#£t_ldt_desc
(
n
,
addr
Ë
	`_£t_ts¶dt_desc
(((*Ë“)),(()◊ddr)),"0x82")

	)

	@linux-0.11/include/const.h

1 #i‚de‡
_CONST_H


2 
	#_CONST_H


	)

4 
	#BUFFER_END
 0x200000

	)

6 
	#I_TYPE
 0170000

	)

7 
	#I_DIRECTORY
 0040000

	)

8 
	#I_REGULAR
 0100000

	)

9 
	#I_BLOCK_SPECIAL
 0060000

	)

10 
	#I_CHAR_SPECIAL
 0020000

	)

11 
	#I_NAMED_PIPE
 0010000

	)

12 
	#I_SET_UID_BIT
 0004000

	)

13 
	#I_SET_GID_BIT
 0002000

	)

	@linux-0.11/include/ctype.h

1 #i‚de‡
_CTYPE_H


2 
	#_CTYPE_H


	)

4 
	#_U
 0x01

	)

5 
	#_L
 0x02

	)

6 
	#_D
 0x04

	)

7 
	#_C
 0x08

	)

8 
	#_P
 0x10

	)

9 
	#_S
 0x20

	)

10 
	#_X
 0x40

	)

11 
	#_SP
 0x80

	)

13 
_˘y≥
[];

14 
_˘mp
;

16 
	#iß um
(
c
Ë((
_˘y≥
+1)[c]&(
_U
|
_L
|
_D
))

	)

17 
	#ißÕha
(
c
Ë((
_˘y≥
+1)[c]&(
_U
|
_L
))

	)

18 
	#is˙ål
(
c
Ë((
_˘y≥
+1)[c]&(
_C
))

	)

19 
	#isdigô
(
c
Ë((
_˘y≥
+1)[c]&(
_D
))

	)

20 
	#isgøph
(
c
Ë((
_˘y≥
+1)[c]&(
_P
|
_U
|
_L
|
_D
))

	)

21 
	#i¶owî
(
c
Ë((
_˘y≥
+1)[c]&(
_L
))

	)

22 
	#i•röt
(
c
Ë((
_˘y≥
+1)[c]&(
_P
|
_U
|
_L
|
_D
|
_SP
))

	)

23 
	#i•un˘
(
c
Ë((
_˘y≥
+1)[c]&(
_P
))

	)

24 
	#is•a˚
(
c
Ë((
_˘y≥
+1)[c]&(
_S
))

	)

25 
	#isuµî
(
c
Ë((
_˘y≥
+1)[c]&(
_U
))

	)

26 
	#isxdigô
(
c
Ë((
_˘y≥
+1)[c]&(
_D
|
_X
))

	)

28 
	#ißscii
(
c
Ë(((Ëc)<=0x7f)

	)

29 
	#tﬂscii
(
c
Ë(((Ëc)&0x7f)

	)

31 
	#tﬁowî
(
c
Ë(
_˘mp
=c,
	`isuµî
(_˘mp)?_˘mp-('A'-'a'):_˘mp)

	)

32 
	#touµî
(
c
Ë(
_˘mp
=c,
	`i¶owî
(_˘mp)?_˘mp-('a'-'A'):_˘mp)

	)

	@linux-0.11/include/errno.h

1 #i‚de‡
_ERRNO_H


2 
	#_ERRNO_H


	)

17 
î∫o
;

19 
	#ERROR
 99

	)

20 
	#EPERM
 1

	)

21 
	#ENOENT
 2

	)

22 
	#ESRCH
 3

	)

23 
	#EINTR
 4

	)

24 
	#EIO
 5

	)

25 
	#ENXIO
 6

	)

26 
	#E2BIG
 7

	)

27 
	#ENOEXEC
 8

	)

28 
	#EBADF
 9

	)

29 
	#ECHILD
 10

	)

30 
	#EAGAIN
 11

	)

31 
	#ENOMEM
 12

	)

32 
	#EACCES
 13

	)

33 
	#EFAULT
 14

	)

34 
	#ENOTBLK
 15

	)

35 
	#EBUSY
 16

	)

36 
	#EEXIST
 17

	)

37 
	#EXDEV
 18

	)

38 
	#ENODEV
 19

	)

39 
	#ENOTDIR
 20

	)

40 
	#EISDIR
 21

	)

41 
	#EINVAL
 22

	)

42 
	#ENFILE
 23

	)

43 
	#EMFILE
 24

	)

44 
	#ENOTTY
 25

	)

45 
	#ETXTBSY
 26

	)

46 
	#EFBIG
 27

	)

47 
	#ENOSPC
 28

	)

48 
	#ESPIPE
 29

	)

49 
	#EROFS
 30

	)

50 
	#EMLINK
 31

	)

51 
	#EPIPE
 32

	)

52 
	#EDOM
 33

	)

53 
	#ERANGE
 34

	)

54 
	#EDEADLK
 35

	)

55 
	#ENAMETOOLONG
 36

	)

56 
	#ENOLCK
 37

	)

57 
	#ENOSYS
 38

	)

58 
	#ENOTEMPTY
 39

	)

	@linux-0.11/include/fcntl.h

1 #i‚de‡
_FCNTL_H


2 
	#_FCNTL_H


	)

4 
	~<sys/ty≥s.h
>

7 
	#O_ACCMODE
 00003

	)

8 
	#O_RDONLY
 00

	)

9 
	#O_WRONLY
 01

	)

10 
	#O_RDWR
 02

	)

11 
	#O_CREAT
 00100

	)

12 
	#O_EXCL
 00200

	)

13 
	#O_NOCTTY
 00400

	)

14 
	#O_TRUNC
 01000

	)

15 
	#O_APPEND
 02000

	)

16 
	#O_NONBLOCK
 04000

	)

17 
	#O_NDELAY
 
O_NONBLOCK


	)

23 
	#F_DUPFD
 0

	)

24 
	#F_GETFD
 1

	)

25 
	#F_SETFD
 2

	)

26 
	#F_GETFL
 3

	)

27 
	#F_SETFL
 4

	)

28 
	#F_GETLK
 5

	)

29 
	#F_SETLK
 6

	)

30 
	#F_SETLKW
 7

	)

33 
	#FD_CLOEXEC
 1

	)

38 
	#F_RDLCK
 0

	)

39 
	#F_WRLCK
 1

	)

40 
	#F_UNLCK
 2

	)

43 
	sÊock
 {

44 
	ml_ty≥
;

45 
	ml_whí˚
;

46 
off_t
 
	ml_°¨t
;

47 
off_t
 
	ml_Àn
;

48 
pid_t
 
	ml_pid
;

51 
¸ót
(c⁄° * 
fûíame
,
mode_t
 
mode
);

52 
f˙é
(
fûdes
,
cmd
, ...);

53 
›í
(c⁄° * 
fûíame
, 
Êags
, ...);

	@linux-0.11/include/linux/config.h

1 #i‚de‡
_CONFIG_H


2 
	#_CONFIG_H


	)

16 
	#KBD_US


	)

	@linux-0.11/include/linux/fdreg.h

6 #i‚de‡
_FDREG_H


7 
	#_FDREG_H


	)

9 
ticks_to_Ê›py_⁄
(
ƒ
);

10 
Ê›py_⁄
(
ƒ
);

11 
Ê›py_off
(
ƒ
);

12 
Ê›py_£À˘
(
ƒ
);

13 
Ê›py_de£À˘
(
ƒ
);

16 
	#FD_STATUS
 0x3f4

	)

17 
	#FD_DATA
 0x3f5

	)

18 
	#FD_DOR
 0x3f2

	)

19 
	#FD_DIR
 0x3f7

	)

20 
	#FD_DCR
 0x3f7

	)

23 
	#STATUS_BUSYMASK
 0x0F

	)

24 
	#STATUS_BUSY
 0x10

	)

25 
	#STATUS_DMA
 0x20

	)

26 
	#STATUS_DIR
 0x40

	)

27 
	#STATUS_READY
 0x80

	)

30 
	#ST0_DS
 0x03

	)

31 
	#ST0_HA
 0x04

	)

32 
	#ST0_NR
 0x08

	)

33 
	#ST0_ECE
 0x10

	)

34 
	#ST0_SE
 0x20

	)

35 
	#ST0_INTR
 0xC0

	)

38 
	#ST1_MAM
 0x01

	)

39 
	#ST1_WP
 0x02

	)

40 
	#ST1_ND
 0x04

	)

41 
	#ST1_OR
 0x10

	)

42 
	#ST1_CRC
 0x20

	)

43 
	#ST1_EOC
 0x80

	)

46 
	#ST2_MAM
 0x01

	)

47 
	#ST2_BC
 0x02

	)

48 
	#ST2_SNS
 0x04

	)

49 
	#ST2_SEH
 0x08

	)

50 
	#ST2_WC
 0x10

	)

51 
	#ST2_CRC
 0x20

	)

52 
	#ST2_CM
 0x40

	)

55 
	#ST3_HA
 0x04

	)

56 
	#ST3_TZ
 0x10

	)

57 
	#ST3_WP
 0x40

	)

60 
	#FD_RECALIBRATE
 0x07

	)

61 
	#FD_SEEK
 0x0F

	)

62 
	#FD_READ
 0xE6

	)

63 
	#FD_WRITE
 0xC5

	)

64 
	#FD_SENSEI
 0x08

	)

65 
	#FD_SPECIFY
 0x03

	)

68 
	#DMA_READ
 0x46

	)

69 
	#DMA_WRITE
 0x4A

	)

	@linux-0.11/include/linux/fs.h

6 #i‚de‡
_FS_H


7 
	#_FS_H


	)

9 
	~<sys/ty≥s.h
>

24 
	#IS_SEEKABLE
(
x
Ë((x)>=1 && (x)<=3)

	)

26 
	#READ
 0

	)

27 
	#WRITE
 1

	)

28 
	#READA
 2

	)

29 
	#WRITEA
 3

	)

31 
buf„r_öô
(
buf„r_íd
);

33 
	#MAJOR
(
a
Ë((()◊))>>8)

	)

34 
	#MINOR
(
a
Ë(◊)&0xff)

	)

36 
	#NAME_LEN
 14

	)

37 
	#ROOT_INO
 1

	)

39 
	#I_MAP_SLOTS
 8

	)

40 
	#Z_MAP_SLOTS
 8

	)

41 
	#SUPER_MAGIC
 0x137F

	)

43 
	#NR_OPEN
 20

	)

44 
	#NR_INODE
 32

	)

45 
	#NR_FILE
 64

	)

46 
	#NR_SUPER
 8

	)

47 
	#NR_HASH
 307

	)

48 
	#NR_BUFFERS
 
ƒ_buf„rs


	)

49 
	#BLOCK_SIZE
 1024

	)

50 
	#BLOCK_SIZE_BITS
 10

	)

51 #i‚de‡
NULL


52 
	#NULL
 ((*Ë0)

	)

55 
	#INODES_PER_BLOCK
 ((
BLOCK_SIZE
)/( (
d_öode
)))

	)

56 
	#DIR_ENTRIES_PER_BLOCK
 ((
BLOCK_SIZE
)/( (
dú_íåy
)))

	)

58 
	#PIPE_HEAD
(
öode
Ë((öode).
i_z⁄e
[0])

	)

59 
	#PIPE_TAIL
(
öode
Ë((öode).
i_z⁄e
[1])

	)

60 
	#PIPE_SIZE
(
öode
Ë((
	`PIPE_HEAD
(öode)-
	`PIPE_TAIL
(öode))&(
PAGE_SIZE
-1))

	)

61 
	#PIPE_EMPTY
(
öode
Ë(
	`PIPE_HEAD
(öode)==
	`PIPE_TAIL
(öode))

	)

62 
	#PIPE_FULL
(
öode
Ë(
	`PIPE_SIZE
(öode)==(
PAGE_SIZE
-1))

	)

63 
	#INC_PIPE
(
hód
) \

64 
	`__asm__
("ö˛ %0\n\ènd»$4095,%0"::"m" (
hód
))

	)

66 
	tbuf„r_block
[
BLOCK_SIZE
];

68 
	sbuf„r_hód
 {

69 * 
	mb_d©a
;

70 
	mb_blockƒ
;

71 
	mb_dev
;

72 
	mb_u±od©e
;

73 
	mb_dút
;

74 
	mb_cou¡
;

75 
	mb_lock
;

76 
èsk_°ru˘
 * 
	mb_waô
;

77 
buf„r_hód
 * 
	mb_¥ev
;

78 
buf„r_hód
 * 
	mb_√xt
;

79 
buf„r_hód
 * 
	mb_¥ev_‰ì
;

80 
buf„r_hód
 * 
	mb_√xt_‰ì
;

83 
	sd_öode
 {

84 
	mi_mode
;

85 
	mi_uid
;

86 
	mi_size
;

87 
	mi_time
;

88 
	mi_gid
;

89 
	mi_∆öks
;

90 
	mi_z⁄e
[9];

93 
	sm_öode
 {

94 
	mi_mode
;

95 
	mi_uid
;

96 
	mi_size
;

97 
	mi_mtime
;

98 
	mi_gid
;

99 
	mi_∆öks
;

100 
	mi_z⁄e
[9];

102 
èsk_°ru˘
 * 
	mi_waô
;

103 
	mi_©ime
;

104 
	mi_˘ime
;

105 
	mi_dev
;

106 
	mi_num
;

107 
	mi_cou¡
;

108 
	mi_lock
;

109 
	mi_dút
;

110 
	mi_pùe
;

111 
	mi_mou¡
;

112 
	mi_£ek
;

113 
	mi_upd©e
;

116 
	sfûe
 {

117 
	mf_mode
;

118 
	mf_Êags
;

119 
	mf_cou¡
;

120 
m_öode
 * 
	mf_öode
;

121 
off_t
 
	mf_pos
;

124 
	ssu≥r_block
 {

125 
	ms_nöodes
;

126 
	ms_nz⁄es
;

127 
	ms_im≠_blocks
;

128 
	ms_zm≠_blocks
;

129 
	ms_fú°d©az⁄e
;

130 
	ms_log_z⁄e_size
;

131 
	ms_max_size
;

132 
	ms_magic
;

134 
buf„r_hód
 * 
	ms_im≠
[8];

135 
buf„r_hód
 * 
	ms_zm≠
[8];

136 
	ms_dev
;

137 
m_öode
 * 
	ms_isup
;

138 
m_öode
 * 
	ms_imou¡
;

139 
	ms_time
;

140 
èsk_°ru˘
 * 
	ms_waô
;

141 
	ms_lock
;

142 
	ms_rd_⁄ly
;

143 
	ms_dút
;

146 
	sd_su≥r_block
 {

147 
	ms_nöodes
;

148 
	ms_nz⁄es
;

149 
	ms_im≠_blocks
;

150 
	ms_zm≠_blocks
;

151 
	ms_fú°d©az⁄e
;

152 
	ms_log_z⁄e_size
;

153 
	ms_max_size
;

154 
	ms_magic
;

157 
	sdú_íåy
 {

158 
	möode
;

159 
	m«me
[
NAME_LEN
];

162 
m_öode
 
öode_èbÀ
[
NR_INODE
];

163 
fûe
 
fûe_èbÀ
[
NR_FILE
];

164 
su≥r_block
 su≥r_block[
NR_SUPER
];

165 
buf„r_hód
 * 
°¨t_buf„r
;

166 
ƒ_buf„rs
;

168 
check_disk_ch™ge
(
dev
);

169 
Ê›py_ch™ge
(
ƒ
);

170 
ticks_to_Ê›py_⁄
(
dev
);

171 
Ê›py_⁄
(
dev
);

172 
Ê›py_off
(
dev
);

173 
åunˇã
(
m_öode
 * 
öode
);

174 
sync_öodes
();

175 
waô_⁄
(
m_öode
 * 
öode
);

176 
bm≠
(
m_öode
 * 
öode
,
block
);

177 
¸óã_block
(
m_öode
 * 
öode
,
block
);

178 
m_öode
 * 
«mei
(c⁄° * 
∑th«me
);

179 
›í_«mei
(c⁄° * 
∑th«me
, 
Êag
, 
mode
,

180 
m_öode
 ** 
ªs_öode
);

181 
ùut
(
m_öode
 * 
öode
);

182 
m_öode
 * 
igë
(
dev
,
ƒ
);

183 
m_öode
 * 
gë_em±y_öode
();

184 
m_öode
 * 
gë_pùe_öode
();

185 
buf„r_hód
 * 
gë_hash_èbÀ
(
dev
, 
block
);

186 
buf„r_hód
 * 
gëblk
(
dev
, 
block
);

187 
Œ_rw_block
(
rw
, 
buf„r_hód
 * 
bh
);

188 
bªl£
(
buf„r_hód
 * 
buf
);

189 
buf„r_hód
 * 
bªad
(
dev
,
block
);

190 
bªad_∑ge
(
addr
,
dev
,
b
[4]);

191 
buf„r_hód
 * 
bªada
(
dev
,
block
,...);

192 
√w_block
(
dev
);

193 
‰ì_block
(
dev
, 
block
);

194 
m_öode
 * 
√w_öode
(
dev
);

195 
‰ì_öode
(
m_öode
 * 
öode
);

196 
sync_dev
(
dev
);

197 
su≥r_block
 * 
gë_su≥r
(
dev
);

198 
ROOT_DEV
;

200 
mou¡_roŸ
();

	@linux-0.11/include/linux/hdreg.h

6 #i‚de‡
_HDREG_H


7 
	#_HDREG_H


	)

10 
	#HD_DATA
 0x1f0

	)

11 
	#HD_ERROR
 0x1f1

	)

12 
	#HD_NSECTOR
 0x1f2

	)

13 
	#HD_SECTOR
 0x1f3

	)

14 
	#HD_LCYL
 0x1f4

	)

15 
	#HD_HCYL
 0x1f5

	)

16 
	#HD_CURRENT
 0x1f6

	)

17 
	#HD_STATUS
 0x1f7

	)

18 
	#HD_PRECOMP
 
HD_ERROR


	)

19 
	#HD_COMMAND
 
HD_STATUS


	)

21 
	#HD_CMD
 0x3f6

	)

24 
	#ERR_STAT
 0x01

	)

25 
	#INDEX_STAT
 0x02

	)

26 
	#ECC_STAT
 0x04

	)

27 
	#DRQ_STAT
 0x08

	)

28 
	#SEEK_STAT
 0x10

	)

29 
	#WRERR_STAT
 0x20

	)

30 
	#READY_STAT
 0x40

	)

31 
	#BUSY_STAT
 0x80

	)

34 
	#WIN_RESTORE
 0x10

	)

35 
	#WIN_READ
 0x20

	)

36 
	#WIN_WRITE
 0x30

	)

37 
	#WIN_VERIFY
 0x40

	)

38 
	#WIN_FORMAT
 0x50

	)

39 
	#WIN_INIT
 0x60

	)

40 
	#WIN_SEEK
 0x70

	)

41 
	#WIN_DIAGNOSE
 0x90

	)

42 
	#WIN_SPECIFY
 0x91

	)

45 
	#MARK_ERR
 0x01

	)

46 
	#TRK0_ERR
 0x02

	)

47 
	#ABRT_ERR
 0x04

	)

48 
	#ID_ERR
 0x10

	)

49 
	#ECC_ERR
 0x40

	)

50 
	#BBD_ERR
 0x80

	)

52 
	s∑πôi⁄
 {

53 
	mboŸ_öd
;

54 
	mhód
;

55 
	m£˘‹
;

56 
	mcyl
;

57 
	msys_öd
;

58 
	míd_hód
;

59 
	míd_£˘‹
;

60 
	míd_cyl
;

61 
	m°¨t_£˘
;

62 
	mƒ_£˘s
;

	@linux-0.11/include/linux/head.h

1 #i‚de‡
_HEAD_H


2 
	#_HEAD_H


	)

4 
	sdesc_°ru˘
 {

5 
	ma
,
	mb
;

6 } 
	tdesc_èbÀ
[256];

8 
pg_dú
[1024];

9 
desc_èbÀ
 
idt
,
gdt
;

11 
	#GDT_NUL
 0

	)

12 
	#GDT_CODE
 1

	)

13 
	#GDT_DATA
 2

	)

14 
	#GDT_TMP
 3

	)

16 
	#LDT_NUL
 0

	)

17 
	#LDT_CODE
 1

	)

18 
	#LDT_DATA
 2

	)

	@linux-0.11/include/linux/kernel.h

4 
vîify_¨ó
(* 
addr
,
cou¡
);

5 
∑nic
(c⁄° * 
°r
);

6 
¥ötf
(c⁄° * 
fmt
, ...);

7 
¥ötk
(c⁄° * 
fmt
, ...);

8 
ây_wrôe
(
ch
,* 
buf
,
cou¡
);

9 * 
mÆloc
(
size
);

10 
‰ì_s
(* 
obj
, 
size
);

12 
	#‰ì
(
x
Ë
	`‰ì_s
((x), 0)

	)

21 
	#su£r
(Ë(
cuºít
->
euid
 =0)

	)

	@linux-0.11/include/linux/mm.h

1 #i‚de‡
_MM_H


2 
	#_MM_H


	)

4 
	#PAGE_SIZE
 4096

	)

6 
gë_‰ì_∑ge
();

7 
put_∑ge
(
∑ge
,
addªss
);

8 
‰ì_∑ge
(
addr
);

	@linux-0.11/include/linux/sched.h

1 #i‚de‡
_SCHED_H


2 
	#_SCHED_H


	)

4 
	#NR_TASKS
 0

	)

5 
	#HZ
 100

	)

7 
	#FIRST_TASK
 
èsk
[0]

	)

8 
	#LAST_TASK
 
èsk
[
NR_TASKS
-1]

	)

10 
	~<löux/hód.h
>

11 
	~<löux/fs.h
>

12 
	~<löux/mm.h
>

13 
	~<sig«l.h
>

15 #i‡(
NR_OPEN
 > 32)

19 
	#TASK_RUNNING
 0

	)

20 
	#TASK_INTERRUPTIBLE
 1

	)

21 
	#TASK_UNINTERRUPTIBLE
 2

	)

22 
	#TASK_ZOMBIE
 3

	)

23 
	#TASK_STOPPED
 4

	)

25 #i‚de‡
NULL


26 
	#NULL
 ((*Ë0)

	)

29 
c›y_∑ge_èbÀs
(
‰om
, 
to
, 
size
);

30 
‰ì_∑ge_èbÀs
(
‰om
, 
size
);

32 
sched_öô
();

33 
scheduÀ
();

34 
å≠_öô
();

35 #i‚de‡
PANIC


36 
∑nic
(c⁄° * 
°r
);

38 
ây_wrôe
(
mö‹
,* 
buf
,
cou¡
);

40 (*
	g‚_±r
)();

42 
	si387_°ru˘
 {

43 
	mcwd
;

44 
	mswd
;

45 
	mtwd
;

46 
	mfù
;

47 
	mfcs
;

48 
	mfoo
;

49 
	mfos
;

50 
	m°_•a˚
[20];

53 
	stss_°ru˘
 {

54 
	mback_lök
;

55 
	me•0
;

56 
	mss0
;

57 
	me•1
;

58 
	mss1
;

59 
	me•2
;

60 
	mss2
;

61 
	m¸3
;

62 
	meù
;

63 
	meÊags
;

64 
	móx
,
	mecx
,
	medx
,
	mebx
;

65 
	me•
;

66 
	mebp
;

67 
	mesi
;

68 
	medi
;

69 
	mes
;

70 
	mcs
;

71 
	mss
;

72 
	mds
;

73 
	mfs
;

74 
	mgs
;

75 
	mldt
;

76 
	måa˚_bôm≠
;

77 
i387_°ru˘
 
	mi387
;

80 
	sèsk_°ru˘
 {

82 
	m°©e
;

83 
	mcou¡î
;

84 
	m¥i‹ôy
;

85 
	msig«l
;

86 
siga˘i⁄
 
	msiga˘i⁄
[32];

87 
	mblocked
;

89 
	mexô_code
;

90 
	m°¨t_code
,
	míd_code
,
	míd_d©a
,
	mbrk
,
	m°¨t_°ack
;

91 
	mpid
,
	mÁthî
,
	mpgΩ
,
	m£ssi⁄
,
	mÀadî
;

92 
	muid
,
	meuid
,
	msuid
;

93 
	mgid
,
	megid
,
	msgid
;

94 
	mÆ¨m
;

95 
	mutime
,
	m°ime
,
	mcutime
,
	mc°ime
,
	m°¨t_time
;

96 
	mu£d_m©h
;

98 
	mây
;

99 
	mumask
;

100 
m_öode
 * 
	mpwd
;

101 
m_öode
 * 
	mroŸ
;

102 
m_öode
 * 
	mexecuèbÀ
;

103 
	m˛o£_⁄_exec
;

104 
fûe
 * 
	mfûp
[
NR_OPEN
];

106 
desc_°ru˘
 
	mldt
[3];

108 
tss_°ru˘
 
	mtss
;

115 
	#INIT_TASK
 \

123  -1,0022,
NULL
,NULL,NULL,0, \

124  {
NULL
,}, \

130  {0,
PAGE_SIZE
+()&
öô_èsk
,0x10,0,0,0,0,()&
pg_dú
,\

133 
	`_LDT
(0),0x80000000, \

136 }

	)

138 
èsk_°ru˘
 *
èsk
[
NR_TASKS
];

139 
èsk_°ru˘
 *
œ°_èsk_u£d_m©h
;

140 
èsk_°ru˘
 *
cuºít
;

141 vﬁ©ûê
jiffõs
;

142 
°¨tup_time
;

144 
	#CURRENT_TIME
 (
°¨tup_time
+
jiffõs
/
HZ
)

	)

146 
add_timî
(
jiffõs
, (*
‚
)());

147 
	`¶ìp_⁄
(
èsk_°ru˘
 ** 
p
);

148 
	`öãºu±ibÀ_¶ìp_⁄
(
èsk_°ru˘
 ** 
p
);

149 
	`wake_up
(
èsk_°ru˘
 ** 
p
);

155 
	#FIRST_TSS_ENTRY
 4

	)

156 
	#FIRST_LDT_ENTRY
 (
FIRST_TSS_ENTRY
+1)

	)

157 
	#_TSS
(
n
Ë((((Ën)<<4)+(
FIRST_TSS_ENTRY
<<3))

	)

158 
	#_LDT
(
n
Ë((((Ën)<<4)+(
FIRST_LDT_ENTRY
<<3))

	)

159 
	#…r
(
n
Ë
	`__asm__
("…∏%%ax"::"a" (
	`_TSS
“)))

	)

160 
	#Œdt
(
n
Ë
	`__asm__
("Œdà%%ax"::"a" (
	`_LDT
“)))

	)

161 
	#°r
(
n
) \

162 
	`__asm__
("str %%ax\n\t" \

165 :"˜" (
n
) \

166 :"a" (0),"i" (
FIRST_TSS_ENTRY
<<3))

	)

173 
	#swôch_to
(
n
) {\

174 °ru˘ {
a
,
b
;} 
__tmp
; \

175 
	`__asm__
("cmpl %%ecx,current\n\t" \

184 ::"m" (*&
__tmp
.
a
),"m" (*&__tmp.
b
), \

185 "d" (
	`_TSS
(
n
)),"c" ((Ë
èsk
[n])); \

186 
	}

	)
}

188 
	#PAGE_ALIGN
(
n
Ë((“)+0xfff)&0xfffff000)

	)

190 
	#_£t_ba£
(
addr
,
ba£
) \

191 
	`__asm__
 ("push %%edx\n\t" \

197 ::"m" (*((
addr
)+2)), \

198 "m" (*((
addr
)+4)), \

199 "m" (*((
addr
)+7)), \

200 "d" (
ba£
) \

201 )

	)

203 
	#_£t_limô
(
addr
,
limô
) \

204 
	`__asm__
 ("push %%edx\n\t" \

212 ::"m" (*(
addr
)), \

213 "m" (*((
addr
)+6)), \

214 "d" (
limô
) \

215 )

	)

217 
	#£t_ba£
(
ldt
,
ba£
Ë
	`_£t_ba£
–((*)&÷dt)Ë, (ba£Ë)

	)

218 
	#£t_limô
(
ldt
,
limô
Ë
	`_£t_limô
–((*)&÷dt)Ë, (limô-1)>>12 )

	)

235 
ölöe
 
	$_gë_ba£
(* 
addr
)

237 
__ba£
;

238 
	`__asm__
("movb %3,%%dh\n\t"

242 :"=&d" (
__ba£
)

243 :"m" (*((
addr
)+2)),

244 "m" (*((
addr
)+4)),

245 "m" (*((
addr
)+7)));

246  
__ba£
;

247 
	}
}

249 
	#gë_ba£
(
ldt
Ë
	`_gë_ba£
–((*)&÷dt)Ë)

	)

251 
	#gë_limô
(
£gmít
) ({ \

252 
__limô
; \

253 
	`__asm__
("l¶»%1,%0\n\tö˛ %0":"Ù" (
__limô
):"r" (
£gmít
)); \

254 
__limô
;})

	)

	@linux-0.11/include/linux/sys.h

1 
sys_£tup
();

2 
sys_exô
();

3 
sys_f‹k
();

4 
sys_ªad
();

5 
sys_wrôe
();

6 
sys_›í
();

7 
sys_˛o£
();

8 
sys_waôpid
();

9 
sys_¸ót
();

10 
sys_lök
();

11 
sys_u∆ök
();

12 
sys_execve
();

13 
sys_chdú
();

14 
sys_time
();

15 
sys_mknod
();

16 
sys_chmod
();

17 
sys_chown
();

18 
sys_bªak
();

19 
sys_°©
();

20 
sys_l£ek
();

21 
sys_gëpid
();

22 
sys_mou¡
();

23 
sys_umou¡
();

24 
sys_£tuid
();

25 
sys_gëuid
();

26 
sys_°ime
();

27 
sys_±ø˚
();

28 
sys_Æ¨m
();

29 
sys_f°©
();

30 
sys_∑u£
();

31 
sys_utime
();

32 
sys_°ty
();

33 
sys_gây
();

34 
sys_ac˚ss
();

35 
sys_ni˚
();

36 
sys_·ime
();

37 
sys_sync
();

38 
sys_kûl
();

39 
sys_ª«me
();

40 
sys_mkdú
();

41 
sys_rmdú
();

42 
sys_dup
();

43 
sys_pùe
();

44 
sys_times
();

45 
sys_¥of
();

46 
sys_brk
();

47 
sys_£tgid
();

48 
sys_gëgid
();

49 
sys_sig«l
();

50 
sys_gëeuid
();

51 
sys_gëegid
();

52 
sys_ac˘
();

53 
sys_phys
();

54 
sys_lock
();

55 
sys_io˘l
();

56 
sys_f˙é
();

57 
sys_mpx
();

58 
sys_£çgid
();

59 
sys_ulimô
();

60 
sys_u«me
();

61 
sys_umask
();

62 
sys_chroŸ
();

63 
sys_u°©
();

64 
sys_dup2
();

65 
sys_gëµid
();

66 
sys_gëpgΩ
();

67 
sys_£tsid
();

68 
sys_siga˘i⁄
();

69 
sys_sgëmask
();

70 
sys_s£tmask
();

71 
sys_£åeuid
();

72 
sys_£åegid
();

74 
‚_±r
 
	gsys_ˇŒ_èbÀ
[] = { 
sys_£tup
, 
sys_exô
, 
sys_f‹k
, 
sys_ªad
,

75 
sys_wrôe
, 
sys_›í
, 
sys_˛o£
, 
sys_waôpid
, 
sys_¸ót
, 
sys_lök
,

76 
sys_u∆ök
, 
sys_execve
, 
sys_chdú
, 
sys_time
, 
sys_mknod
, 
sys_chmod
,

77 
sys_chown
, 
sys_bªak
, 
sys_°©
, 
sys_l£ek
, 
sys_gëpid
, 
sys_mou¡
,

78 
sys_umou¡
, 
sys_£tuid
, 
sys_gëuid
, 
sys_°ime
, 
sys_±ø˚
, 
sys_Æ¨m
,

79 
sys_f°©
, 
sys_∑u£
, 
sys_utime
, 
sys_°ty
, 
sys_gây
, 
sys_ac˚ss
,

80 
sys_ni˚
, 
sys_·ime
, 
sys_sync
, 
sys_kûl
, 
sys_ª«me
, 
sys_mkdú
,

81 
sys_rmdú
, 
sys_dup
, 
sys_pùe
, 
sys_times
, 
sys_¥of
, 
sys_brk
, 
sys_£tgid
,

82 
sys_gëgid
, 
sys_sig«l
, 
sys_gëeuid
, 
sys_gëegid
, 
sys_ac˘
, 
sys_phys
,

83 
sys_lock
, 
sys_io˘l
, 
sys_f˙é
, 
sys_mpx
, 
sys_£çgid
, 
sys_ulimô
,

84 
sys_u«me
, 
sys_umask
, 
sys_chroŸ
, 
sys_u°©
, 
sys_dup2
, 
sys_gëµid
,

85 
sys_gëpgΩ
, 
sys_£tsid
, 
sys_siga˘i⁄
, 
sys_sgëmask
, 
sys_s£tmask
,

86 
sys_£åeuid
,
sys_£åegid
 };

	@linux-0.11/include/linux/tty.h

9 #i‚de‡
_TTY_H


10 
	#_TTY_H


	)

12 
	~<ãrmios.h
>

14 
	#TTY_BUF_SIZE
 1024

	)

16 
	sây_queue
 {

17 
	md©a
;

18 
	mhód
;

19 
	mèû
;

20 
èsk_°ru˘
 * 
	m¥oc_li°
;

21 
	mbuf
[
TTY_BUF_SIZE
];

24 
	#INC
(
a
Ë(◊Ë(◊)+1Ë& (
TTY_BUF_SIZE
-1))

	)

25 
	#DEC
(
a
Ë(◊Ë(◊)-1Ë& (
TTY_BUF_SIZE
-1))

	)

26 
	#EMPTY
(
a
Ë(◊).
hód
 =◊).
èû
)

	)

27 
	#LEFT
(
a
Ë((◊).
èû
-◊).
hód
-1)&(
TTY_BUF_SIZE
-1))

	)

28 
	#LAST
(
a
Ë(◊).
buf
[(
TTY_BUF_SIZE
-1)&(◊).
hód
-1)])

	)

29 
	#FULL
(
a
Ë(!
	`LEFT
◊))

	)

30 
	#CHARS
(
a
Ë((◊).
hód
-◊).
èû
)&(
TTY_BUF_SIZE
-1))

	)

31 
	#GETCH
(
queue
,
c
) \

32 ()({
c
=(
queue
).
buf
[(queue).
èû
];
	`INC
((queue).èû);})

	)

33 
	#PUTCH
(
c
,
queue
) \

34 ()({(
queue
).
buf
[(queue).
hód
]=(
c
);
	`INC
((queue).hód);})

	)

36 
	#INTR_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VINTR
])

	)

37 
	#QUIT_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VQUIT
])

	)

38 
	#ERASE_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VERASE
])

	)

39 
	#KILL_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VKILL
])

	)

40 
	#EOF_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VEOF
])

	)

41 
	#START_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VSTART
])

	)

42 
	#STOP_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VSTOP
])

	)

43 
	#SUSPEND_CHAR
(
ây
Ë(—ty)->
ãrmios
.
c_cc
[
VSUSP
])

	)

45 
	sây_°ru˘
 {

46 
ãrmios
 
	mãrmios
;

47 
	mpgΩ
;

48 
	m°›≥d
;

49 (*
	mwrôe
)(
ây_°ru˘
 * 
	mây
);

50 
ây_queue
 
	mªad_q
;

51 
ây_queue
 
	mwrôe_q
;

52 
ây_queue
 
	m£c⁄d¨y
;

55 
ây_°ru˘
 
ây_èbÀ
[];

63 
	#INIT_C_CC
 "\003\034\177\025\004\0\1\0\021\023\032\0\022\017\027\026\0"

	)

65 
rs_öô
();

66 
c⁄_öô
();

67 
ây_öô
();

69 
ây_ªad
(
c
, * 
buf
, 
n
);

70 
ây_wrôe
(
c
, * 
buf
, 
n
);

72 
rs_wrôe
(
ây_°ru˘
 * 
ây
);

73 
c⁄_wrôe
(
ây_°ru˘
 * 
ây
);

75 
c›y_to_cooked
(
ây_°ru˘
 * 
ây
);

	@linux-0.11/include/signal.h

1 #i‚de‡
_SIGNAL_H


2 
	#_SIGNAL_H


	)

4 
	~<sys/ty≥s.h
>

6 
	tsig_©omic_t
;

7 
	tsig£t_t
;

9 
	#_NSIG
 32

	)

10 
	#NSIG
 
_NSIG


	)

12 
	#SIGHUP
 1

	)

13 
	#SIGINT
 2

	)

14 
	#SIGQUIT
 3

	)

15 
	#SIGILL
 4

	)

16 
	#SIGTRAP
 5

	)

17 
	#SIGABRT
 6

	)

18 
	#SIGIOT
 6

	)

19 
	#SIGUNUSED
 7

	)

20 
	#SIGFPE
 8

	)

21 
	#SIGKILL
 9

	)

22 
	#SIGUSR1
 10

	)

23 
	#SIGSEGV
 11

	)

24 
	#SIGUSR2
 12

	)

25 
	#SIGPIPE
 13

	)

26 
	#SIGALRM
 14

	)

27 
	#SIGTERM
 15

	)

28 
	#SIGSTKFLT
 16

	)

29 
	#SIGCHLD
 17

	)

30 
	#SIGCONT
 18

	)

31 
	#SIGSTOP
 19

	)

32 
	#SIGTSTP
 20

	)

33 
	#SIGTTIN
 21

	)

34 
	#SIGTTOU
 22

	)

37 
	#SA_NOCLDSTOP
 1

	)

38 
	#SA_NOMASK
 0x40000000

	)

39 
	#SA_ONESHOT
 0x80000000

	)

41 
	#SIG_BLOCK
 0

	)

42 
	#SIG_UNBLOCK
 1

	)

43 
	#SIG_SETMASK
 2

	)

45 
	#SIG_DFL
 (((*)())0Ë

	)

46 
	#SIG_IGN
 (((*)())1Ë

	)

48 
	ssiga˘i⁄
 {

49 (*
	mß_h™dÀr
)();

50 
sig£t_t
 
	mß_mask
;

51 
	mß_Êags
;

52 (*
	mß_ª°‹î
)();

55 (*
sig«l
(
_sig
, (*
_func
)()))();

56 
	`øi£
(
sig
);

57 
	`kûl
(
pid_t
 
pid
, 
sig
);

58 
	`sigadd£t
(
sig£t_t
 *
mask
, 
signo
);

59 
	`sigdñ£t
(
sig£t_t
 *
mask
, 
signo
);

60 
	`sigem±y£t
(
sig£t_t
 *
mask
);

61 
	`sigfûl£t
(
sig£t_t
 *
mask
);

62 
	`sigismembî
(
sig£t_t
 *
mask
, 
signo
);

63 
	`sig≥ndög
(
sig£t_t
 *
£t
);

64 
	`sig¥ocmask
(
how
, 
sig£t_t
 *
£t
, sig£t_à*
ﬁd£t
);

65 
	`sigsu•íd
(
sig£t_t
 *
sigmask
);

66 
	`siga˘i⁄
(
sig
, 
siga˘i⁄
 *
a˘
, siga˘i⁄ *
ﬁda˘
);

	@linux-0.11/include/stdarg.h

1 #i‚de‡
_STDARG_H


2 
	#_STDARG_H


	)

4 *
	tva_li°
;

9 
	#__va_rounded_size
(
TYPE
) \

10 ((( (
TYPE
Ë+  (Ë- 1Ë/  ()Ë*  ())

	)

12 #i‚de‡
__•¨c__


13 
	#va_°¨t
(
AP
, 
LASTARG
) \

14 (
AP
 = ((*Ë&(
LASTARG
Ë+ 
	`__va_rounded_size
 (LASTARG)))

	)

16 
	#va_°¨t
(
AP
, 
LASTARG
) \

17 (
	`__buûtö_ßvîegs
 (), \

18 
AP
 = ((*Ë&(
LASTARG
Ë+ 
	`__va_rounded_size
 (LASTARG)))

	)

21 
va_íd
 (
va_li°
);

22 
	#va_íd
(
AP
)

	)

24 
	#va_¨g
(
AP
, 
TYPE
) \

25 (
AP
 +
	`__va_rounded_size
 (
TYPE
), \

26 *((
TYPE
 *Ë(
AP
 - 
	`__va_rounded_size
 (TYPE))))

	)

	@linux-0.11/include/stddef.h

1 #i‚de‡
_STDDEF_H


2 
	#_STDDEF_H


	)

4 #i‚de‡
_PTRDIFF_T


5 
	#_PTRDIFF_T


	)

6 
	t±rdiff_t
;

9 #i‚de‡
_SIZE_T


10 
	#_SIZE_T


	)

11 
	tsize_t
;

14 #unde‡
NULL


15 
	#NULL
 ((*)0)

	)

17 
	#off£tof
(
TYPE
, 
MEMBER
Ë((
size_t
Ë&((TYPE *)0)->MEMBER)

	)

	@linux-0.11/include/string.h

1 #i‚de‡
_STRING_H_


2 
	#_STRING_H_


	)

4 #i‚de‡
NULL


5 
	#NULL
 ((*Ë0)

	)

8 #i‚de‡
_SIZE_T


9 
	#_SIZE_T


	)

10 
	tsize_t
;

13 * 
°ªº‹
(
î∫o
);

27 
ölöe
 * 
	$°r˝y
(* 
de°
,c⁄° *
§c
)

29 
	`__asm__
("cld\n"

34 ::"S" (
§c
),"D" (
de°
));

35  
de°
;

36 
	}
}

38 
ölöe
 * 
	$°∫˝y
(* 
de°
,c⁄° *
§c
,
cou¡
)

40 
	`__asm__
("cld\n"

50 ::"S" (
§c
),"D" (
de°
),"c" (
cou¡
));

51  
de°
;

52 
	}
}

54 
ölöe
 * 
	$°rˇt
(* 
de°
,c⁄° * 
§c
)

56 
	`__asm__
("cld\n\t"

64 ::"S" (
§c
),"D" (
de°
),"a" (0),"c" (0xffffffff));

65  
de°
;

66 
	}
}

68 
ölöe
 * 
	$°∫ˇt
(* 
de°
,c⁄° * 
§c
,
cou¡
)

70 
	`__asm__
("cld\n\t"

83 ::"S" (
§c
),"D" (
de°
),"a" (0),"c" (0xffffffff),"g" (
cou¡
)

85  
de°
;

86 
	}
}

88 
ölöe
 
	$°rcmp
(c⁄° * 
cs
,c⁄° * 
˘
)

90 
__ªs
 ;

91 
	`__asm__
("cld\n"

103 :"˜" (
__ªs
):"D" (
cs
),"S" (
˘
));

104  
__ªs
;

105 
	}
}

107 
ölöe
 
	$°∫cmp
(c⁄° * 
cs
,c⁄° * 
˘
,
cou¡
)

109 
__ªs
 ;

110 
	`__asm__
("cld\n"

124 :"˜" (
__ªs
):"D" (
cs
),"S" (
˘
),"c" (
cou¡
));

125  
__ªs
;

126 
	}
}

128 
ölöe
 * 
	$°rchr
(c⁄° * 
s
,
c
)

130 * 
__ªs
 ;

131 
	`__asm__
("cld\n\t"

141 :"˜" (
__ªs
):"S" (
s
),"0" (
c
));

142  
__ªs
;

143 
	}
}

145 
ölöe
 * 
	$°ºchr
(c⁄° * 
s
,
c
)

147 * 
__ªs
;

148 
	`__asm__
("cld\n\t"

157 :"=d" (
__ªs
):"0" (0),"S" (
s
),"a" (
c
));

158  
__ªs
;

159 
	}
}

161 
ölöe
 
	$°r•n
(c⁄° * 
cs
, c⁄° * 
˘
)

163 * 
__ªs
;

164 
	`__asm__
("cld\n\t"

180 :"=S" (
__ªs
):"a" (0),"c" (0xffffffff),"0" (
cs
),"g" (
˘
)

182  
__ªs
-
cs
;

183 
	}
}

185 
ölöe
 
	$°rc•n
(c⁄° * 
cs
, c⁄° * 
˘
)

187 * 
__ªs
;

188 
	`__asm__
("cld\n\t"

204 :"=S" (
__ªs
):"a" (0),"c" (0xffffffff),"0" (
cs
),"g" (
˘
)

206  
__ªs
-
cs
;

207 
	}
}

209 
ölöe
 * 
	$°Ωbrk
(c⁄° * 
cs
,c⁄° * 
˘
)

211 * 
__ªs
 ;

212 
	`__asm__
("cld\n\t"

231 :"=S" (
__ªs
):"a" (0),"c" (0xffffffff),"0" (
cs
),"g" (
˘
)

233  
__ªs
;

234 
	}
}

236 
ölöe
 * 
	$°r°r
(c⁄° * 
cs
,c⁄° * 
˘
)

238 * 
__ªs
 ;

239 
	`__asm__
("cld\n\t" \

258 :"˜" (
__ªs
):"0" (0),"c" (0xffffffff),"S" (
cs
),"g" (
˘
)

260  
__ªs
;

261 
	}
}

263 
ölöe
 
	$°æí
(c⁄° * 
s
)

265 
__ªs
 ;

266 
	`__asm__
("cld\n\t"

271 :"=c" (
__ªs
):"D" (
s
),"a" (0),"0" (0xffffffff));

272  
__ªs
;

273 
	}
}

275 * 
___°πok
;

277 
ölöe
 * 
	$°πok
(* 
s
,c⁄° * 
˘
)

279 * 
__ªs
 ;

280 
	`__asm__
("testl %1,%1\n\t"

330 :"=b" (
__ªs
),"=S" (
___°πok
)

331 :"0" (
___°πok
),"1" (
s
),"g" (
˘
)

333  
__ªs
;

334 
	}
}

341 
ölöe
 * 
	$mem˝y
(* 
de°
,c⁄° * 
§c
, 
n
)

343 
	`__asm__
 ("cld\n\t"

346 ::"c" (
n
),"S" (
§c
),"D" (
de°
)

348  
de°
;

349 
	}
}

351 
ölöe
 * 
	$memmove
(* 
de°
,c⁄° * 
§c
, 
n
)

353 i‡(
de°
<
§c
)

354 
	`__asm__
("cld\n\t"

357 ::"c" (
n
),"S" (
§c
),"D" (
de°
)

360 
	`__asm__
("std\n\t"

363 ::"c" (
n
),"S" (
§c
+n-1),"D" (
de°
+n-1)

365  
de°
;

366 
	}
}

368 
ölöe
 
	$memcmp
(c⁄° * 
cs
,c⁄° * 
˘
,
cou¡
)

370 
__ªs
 ;

371 
	`__asm__
("cld\n\t"

379 :"˜" (
__ªs
):"0" (0),"D" (
cs
),"S" (
˘
),"c" (
cou¡
)

381  
__ªs
;

382 
	}
}

384 
ölöe
 * 
	$memchr
(c⁄° * 
cs
,
c
,
cou¡
)

386 * 
__ªs
 ;

387 i‡(!
cou¡
)

388  
NULL
;

389 
	`__asm__
("cld\n\t"

395 :"=D" (
__ªs
):"a" (
c
),"D" (
cs
),"c" (
cou¡
)

397  
__ªs
;

398 
	}
}

400 
ölöe
 * 
	$mem£t
(* 
s
,
c
,
cou¡
)

402 
	`__asm__
("cld\n\t"

405 ::"a" (
c
),"D" (
s
),"c" (
cou¡
)

407  
s
;

408 
	}
}

	@linux-0.11/include/sys/stat.h

1 #i‚de‡
_SYS_STAT_H


2 
	#_SYS_STAT_H


	)

4 
	~<sys/ty≥s.h
>

6 
	s°©
 {

7 
dev_t
 
	m°_dev
;

8 
öo_t
 
	m°_öo
;

9 
umode_t
 
	m°_mode
;

10 
∆ök_t
 
	m°_∆ök
;

11 
uid_t
 
	m°_uid
;

12 
gid_t
 
	m°_gid
;

13 
dev_t
 
	m°_rdev
;

14 
off_t
 
	m°_size
;

15 
time_t
 
	m°_©ime
;

16 
time_t
 
	m°_mtime
;

17 
time_t
 
	m°_˘ime
;

20 
	#S_IFMT
 00170000

	)

21 
	#S_IFREG
 0100000

	)

22 
	#S_IFBLK
 0060000

	)

23 
	#S_IFDIR
 0040000

	)

24 
	#S_IFCHR
 0020000

	)

25 
	#S_IFIFO
 0010000

	)

26 
	#S_ISUID
 0004000

	)

27 
	#S_ISGID
 0002000

	)

28 
	#S_ISVTX
 0001000

	)

30 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
)

	)

31 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

32 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
)

	)

33 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
)

	)

34 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
)

	)

36 
	#S_IRWXU
 00700

	)

37 
	#S_IRUSR
 00400

	)

38 
	#S_IWUSR
 00200

	)

39 
	#S_IXUSR
 00100

	)

41 
	#S_IRWXG
 00070

	)

42 
	#S_IRGRP
 00040

	)

43 
	#S_IWGRP
 00020

	)

44 
	#S_IXGRP
 00010

	)

46 
	#S_IRWXO
 00007

	)

47 
	#S_IROTH
 00004

	)

48 
	#S_IWOTH
 00002

	)

49 
	#S_IXOTH
 00001

	)

51 
chmod
(c⁄° *
_∑th
, 
mode_t
 
mode
);

52 
f°©
(
fûdes
, 
°©
 *
°©_buf
);

53 
mkdú
(c⁄° *
_∑th
, 
mode_t
 
mode
);

54 
mkfifo
(c⁄° *
_∑th
, 
mode_t
 
mode
);

55 
°©
(c⁄° *
fûíame
, °© *
°©_buf
);

56 
mode_t
 
umask
(mode_à
mask
);

	@linux-0.11/include/sys/times.h

1 #i‚de‡
_TIMES_H


2 
	#_TIMES_H


	)

4 
	~<sys/ty≥s.h
>

6 
	stms
 {

7 
time_t
 
	mtms_utime
;

8 
time_t
 
	mtms_°ime
;

9 
time_t
 
	mtms_cutime
;

10 
time_t
 
	mtms_c°ime
;

13 
time_t
 
times
(
tms
 * 
ç
);

	@linux-0.11/include/sys/types.h

1 #i‚de‡
_SYS_TYPES_H


2 
	#_SYS_TYPES_H


	)

4 #i‚de‡
_SIZE_T


5 
	#_SIZE_T


	)

6 
	tsize_t
;

9 #i‚de‡
_TIME_T


10 
	#_TIME_T


	)

11 
	ttime_t
;

14 #i‚de‡
_PTRDIFF_T


15 
	#_PTRDIFF_T


	)

16 
	t±rdiff_t
;

19 #i‚de‡
NULL


20 
	#NULL
 ((*Ë0)

	)

23 
	tpid_t
;

24 
	tuid_t
;

25 
	tgid_t
;

26 
	tdev_t
;

27 
	töo_t
;

28 
	tmode_t
;

29 
	tumode_t
;

30 
	t∆ök_t
;

31 
	tdaddr_t
;

32 
	toff_t
;

33 
	tu_ch¨
;

34 
	tush‹t
;

36 °ru˘ { 
	mquŸ
,
	mªm
; } 
	tdiv_t
;

37 °ru˘ { 
	mquŸ
,
	mªm
; } 
	tldiv_t
;

39 
	su°©
 {

40 
daddr_t
 
	mf_t‰ì
;

41 
öo_t
 
	mf_töode
;

42 
	mf_‚ame
[6];

43 
	mf_Âack
[6];

	@linux-0.11/include/sys/utsname.h

1 #i‚de‡
_SYS_UTSNAME_H


2 
	#_SYS_UTSNAME_H


	)

4 
	~<sys/ty≥s.h
>

6 
	sut¢ame
 {

7 
	msy¢ame
[9];

8 
	mnodíame
[9];

9 
	mªÀa£
[9];

10 
	mvîsi⁄
[9];

11 
	mmachöe
[9];

14 
u«me
(
ut¢ame
 * 
utsbuf
);

	@linux-0.11/include/sys/wait.h

1 #i‚de‡
_SYS_WAIT_H


2 
	#_SYS_WAIT_H


	)

4 
	~<sys/ty≥s.h
>

6 
	#_LOW
(
v
Ë–(vË& 0377)

	)

7 
	#_HIGH
(
v
Ë–((vË>> 8Ë& 0377)

	)

10 
	#WNOHANG
 1

	)

11 
	#WUNTRACED
 2

	)

13 
	#WIFEXITED
(
s
Ë(!((s)&0xFF)

	)

14 
	#WIFSTOPPED
(
s
Ë(((s)&0xFF)==0x7F)

	)

15 
	#WEXITSTATUS
(
s
Ë(((s)>>8)&0xFF)

	)

16 
	#WTERMSIG
(
s
Ë((s)&0x7F)

	)

17 
	#WSTOPSIG
(
s
Ë(((s)>>8)&0xFF)

	)

18 
	#WIFSIGNALED
(
s
Ë((()(s)-1 & 0xFFFFË< 0xFF)

	)

20 
pid_t
 
waô
(*
°©_loc
);

21 
pid_t
 
waôpid
’id_à
pid
, *
°©_loc
, 
›ti⁄s
);

	@linux-0.11/include/termios.h

1 #i‚de‡
_TERMIOS_H


2 
	#_TERMIOS_H


	)

4 
	#TTY_BUF_SIZE
 1024

	)

8 
	#TCGETS
 0x5401

	)

9 
	#TCSETS
 0x5402

	)

10 
	#TCSETSW
 0x5403

	)

11 
	#TCSETSF
 0x5404

	)

12 
	#TCGETA
 0x5405

	)

13 
	#TCSETA
 0x5406

	)

14 
	#TCSETAW
 0x5407

	)

15 
	#TCSETAF
 0x5408

	)

16 
	#TCSBRK
 0x5409

	)

17 
	#TCXONC
 0x540A

	)

18 
	#TCFLSH
 0x540B

	)

19 
	#TIOCEXCL
 0x540C

	)

20 
	#TIOCNXCL
 0x540D

	)

21 
	#TIOCSCTTY
 0x540E

	)

22 
	#TIOCGPGRP
 0x540F

	)

23 
	#TIOCSPGRP
 0x5410

	)

24 
	#TIOCOUTQ
 0x5411

	)

25 
	#TIOCSTI
 0x5412

	)

26 
	#TIOCGWINSZ
 0x5413

	)

27 
	#TIOCSWINSZ
 0x5414

	)

28 
	#TIOCMGET
 0x5415

	)

29 
	#TIOCMBIS
 0x5416

	)

30 
	#TIOCMBIC
 0x5417

	)

31 
	#TIOCMSET
 0x5418

	)

32 
	#TIOCGSOFTCAR
 0x5419

	)

33 
	#TIOCSSOFTCAR
 0x541A

	)

34 
	#TIOCINQ
 0x541B

	)

36 
	swösize
 {

37 
	mws_row
;

38 
	mws_cﬁ
;

39 
	mws_xpixñ
;

40 
	mws_ypixñ
;

43 
	#NCC
 8

	)

44 
	sãrmio
 {

45 
	mc_iÊag
;

46 
	mc_oÊag
;

47 
	mc_cÊag
;

48 
	mc_lÊag
;

49 
	mc_löe
;

50 
	mc_cc
[
NCC
];

53 
	#NCCS
 17

	)

54 
	sãrmios
 {

55 
	mc_iÊag
;

56 
	mc_oÊag
;

57 
	mc_cÊag
;

58 
	mc_lÊag
;

59 
	mc_löe
;

60 
	mc_cc
[
NCCS
];

64 
	#VINTR
 0

	)

65 
	#VQUIT
 1

	)

66 
	#VERASE
 2

	)

67 
	#VKILL
 3

	)

68 
	#VEOF
 4

	)

69 
	#VTIME
 5

	)

70 
	#VMIN
 6

	)

71 
	#VSWTC
 7

	)

72 
	#VSTART
 8

	)

73 
	#VSTOP
 9

	)

74 
	#VSUSP
 10

	)

75 
	#VEOL
 11

	)

76 
	#VREPRINT
 12

	)

77 
	#VDISCARD
 13

	)

78 
	#VWERASE
 14

	)

79 
	#VLNEXT
 15

	)

80 
	#VEOL2
 16

	)

83 
	#IGNBRK
 0000001

	)

84 
	#BRKINT
 0000002

	)

85 
	#IGNPAR
 0000004

	)

86 
	#PARMRK
 0000010

	)

87 
	#INPCK
 0000020

	)

88 
	#ISTRIP
 0000040

	)

89 
	#INLCR
 0000100

	)

90 
	#IGNCR
 0000200

	)

91 
	#ICRNL
 0000400

	)

92 
	#IUCLC
 0001000

	)

93 
	#IXON
 0002000

	)

94 
	#IXANY
 0004000

	)

95 
	#IXOFF
 0010000

	)

96 
	#IMAXBEL
 0020000

	)

99 
	#OPOST
 0000001

	)

100 
	#OLCUC
 0000002

	)

101 
	#ONLCR
 0000004

	)

102 
	#OCRNL
 0000010

	)

103 
	#ONOCR
 0000020

	)

104 
	#ONLRET
 0000040

	)

105 
	#OFILL
 0000100

	)

106 
	#OFDEL
 0000200

	)

107 
	#NLDLY
 0000400

	)

108 
	#NL0
 0000000

	)

109 
	#NL1
 0000400

	)

110 
	#CRDLY
 0003000

	)

111 
	#CR0
 0000000

	)

112 
	#CR1
 0001000

	)

113 
	#CR2
 0002000

	)

114 
	#CR3
 0003000

	)

115 
	#TABDLY
 0014000

	)

116 
	#TAB0
 0000000

	)

117 
	#TAB1
 0004000

	)

118 
	#TAB2
 0010000

	)

119 
	#TAB3
 0014000

	)

120 
	#XTABS
 0014000

	)

121 
	#BSDLY
 0020000

	)

122 
	#BS0
 0000000

	)

123 
	#BS1
 0020000

	)

124 
	#VTDLY
 0040000

	)

125 
	#VT0
 0000000

	)

126 
	#VT1
 0040000

	)

127 
	#FFDLY
 0040000

	)

128 
	#FF0
 0000000

	)

129 
	#FF1
 0040000

	)

132 
	#CBAUD
 0000017

	)

133 
	#B0
 0000000

	)

134 
	#B50
 0000001

	)

135 
	#B75
 0000002

	)

136 
	#B110
 0000003

	)

137 
	#B134
 0000004

	)

138 
	#B150
 0000005

	)

139 
	#B200
 0000006

	)

140 
	#B300
 0000007

	)

141 
	#B600
 0000010

	)

142 
	#B1200
 0000011

	)

143 
	#B1800
 0000012

	)

144 
	#B2400
 0000013

	)

145 
	#B4800
 0000014

	)

146 
	#B9600
 0000015

	)

147 
	#B19200
 0000016

	)

148 
	#B38400
 0000017

	)

149 
	#EXTA
 
B19200


	)

150 
	#EXTB
 
B38400


	)

151 
	#CSIZE
 0000060

	)

152 
	#CS5
 0000000

	)

153 
	#CS6
 0000020

	)

154 
	#CS7
 0000040

	)

155 
	#CS8
 0000060

	)

156 
	#CSTOPB
 0000100

	)

157 
	#CREAD
 0000200

	)

158 
	#CPARENB
 0000400

	)

159 
	#CPARODD
 0001000

	)

160 
	#HUPCL
 0002000

	)

161 
	#CLOCAL
 0004000

	)

162 
	#CIBAUD
 03600000

	)

163 
	#CRTSCTS
 020000000000

	)

165 
	#PARENB
 
CPARENB


	)

166 
	#PARODD
 
CPARODD


	)

169 
	#ISIG
 0000001

	)

170 
	#ICANON
 0000002

	)

171 
	#XCASE
 0000004

	)

172 
	#ECHO
 0000010

	)

173 
	#ECHOE
 0000020

	)

174 
	#ECHOK
 0000040

	)

175 
	#ECHONL
 0000100

	)

176 
	#NOFLSH
 0000200

	)

177 
	#TOSTOP
 0000400

	)

178 
	#ECHOCTL
 0001000

	)

179 
	#ECHOPRT
 0002000

	)

180 
	#ECHOKE
 0004000

	)

181 
	#FLUSHO
 0010000

	)

182 
	#PENDIN
 0040000

	)

183 
	#IEXTEN
 0100000

	)

186 
	#TIOCM_LE
 0x001

	)

187 
	#TIOCM_DTR
 0x002

	)

188 
	#TIOCM_RTS
 0x004

	)

189 
	#TIOCM_ST
 0x008

	)

190 
	#TIOCM_SR
 0x010

	)

191 
	#TIOCM_CTS
 0x020

	)

192 
	#TIOCM_CAR
 0x040

	)

193 
	#TIOCM_RNG
 0x080

	)

194 
	#TIOCM_DSR
 0x100

	)

195 
	#TIOCM_CD
 
TIOCM_CAR


	)

196 
	#TIOCM_RI
 
TIOCM_RNG


	)

199 
	#TCOOFF
 0

	)

200 
	#TCOON
 1

	)

201 
	#TCIOFF
 2

	)

202 
	#TCION
 3

	)

205 
	#TCIFLUSH
 0

	)

206 
	#TCOFLUSH
 1

	)

207 
	#TCIOFLUSH
 2

	)

210 
	#TCSANOW
 0

	)

211 
	#TCSADRAIN
 1

	)

212 
	#TCSAFLUSH
 2

	)

214 
	t•ìd_t
;

216 
•ìd_t
 
cfgëi•ìd
(
ãrmios
 *
ãrmios_p
);

217 
•ìd_t
 
cfgëo•ìd
(
ãrmios
 *
ãrmios_p
);

218 
cf£ti•ìd
(
ãrmios
 *
ãrmios_p
, 
•ìd_t
 
•ìd
);

219 
cf£to•ìd
(
ãrmios
 *
ãrmios_p
, 
•ìd_t
 
•ìd
);

220 
tcdøö
(
fûdes
);

221 
tcÊow
(
fûdes
, 
a˘i⁄
);

222 
tcÊush
(
fûdes
, 
queue_£À˘‹
);

223 
tcgë©å
(
fûdes
, 
ãrmios
 *
ãrmios_p
);

224 
tc£ndbªak
(
fûdes
, 
duøti⁄
);

225 
tc£èâr
(
fûdes
, 
›ti⁄Æ_a˘i⁄s
,

226 
ãrmios
 *
ãrmios_p
);

	@linux-0.11/include/time.h

1 #i‚de‡
_TIME_H


2 
	#_TIME_H


	)

4 #i‚de‡
_TIME_T


5 
	#_TIME_T


	)

6 
	ttime_t
;

9 #i‚de‡
_SIZE_T


10 
	#_SIZE_T


	)

11 
	tsize_t
;

14 
	#CLOCKS_PER_SEC
 100

	)

16 
	t˛ock_t
;

18 
	stm
 {

19 
	mtm_£c
;

20 
	mtm_mö
;

21 
	mtm_hour
;

22 
	mtm_mday
;

23 
	mtm_m⁄
;

24 
	mtm_yór
;

25 
	mtm_wday
;

26 
	mtm_yday
;

27 
	mtm_isd°
;

30 
˛ock_t
 
˛ock
();

31 
time_t
 
time
—ime_à* 
ç
);

32 
dif·ime
(
time_t
 
time2
,Åime_à
time1
);

33 
time_t
 
mktime
(
tm
 * 
ç
);

35 * 
as˘ime
(c⁄° 
tm
 * 
ç
);

36 * 
˘ime
(c⁄° 
time_t
 * 
ç
);

37 
tm
 * 
gmtime
(c⁄° 
time_t
 *
ç
);

38 
tm
 *
loˇ…ime
(c⁄° 
time_t
 * 
ç
);

39 
size_t
 
°r·ime
(* 
s
, size_à
smax
, c⁄° * 
fmt
, c⁄° 
tm
 * 
ç
);

40 
tz£t
();

	@linux-0.11/include/unistd.h

1 #i‚de‡
_UNISTD_H


2 
	#_UNISTD_H


	)

5 
	#_POSIX_VERSION
 198808L

	)

7 
	#_POSIX_CHOWN_RESTRICTED


	)

8 
	#_POSIX_NO_TRUNC


	)

9 
	#_POSIX_VDISABLE
 '\0'

	)

13 
	#STDIN_FILENO
 0

	)

14 
	#STDOUT_FILENO
 1

	)

15 
	#STDERR_FILENO
 2

	)

17 #i‚de‡
NULL


18 
	#NULL
 ((*)0)

	)

22 
	#F_OK
 0

	)

23 
	#X_OK
 1

	)

24 
	#W_OK
 2

	)

25 
	#R_OK
 4

	)

28 
	#SEEK_SET
 0

	)

29 
	#SEEK_CUR
 1

	)

30 
	#SEEK_END
 2

	)

33 
	#_SC_ARG_MAX
 1

	)

34 
	#_SC_CHILD_MAX
 2

	)

35 
	#_SC_CLOCKS_PER_SEC
 3

	)

36 
	#_SC_NGROUPS_MAX
 4

	)

37 
	#_SC_OPEN_MAX
 5

	)

38 
	#_SC_JOB_CONTROL
 6

	)

39 
	#_SC_SAVED_IDS
 7

	)

40 
	#_SC_VERSION
 8

	)

43 
	#_PC_LINK_MAX
 1

	)

44 
	#_PC_MAX_CANON
 2

	)

45 
	#_PC_MAX_INPUT
 3

	)

46 
	#_PC_NAME_MAX
 4

	)

47 
	#_PC_PATH_MAX
 5

	)

48 
	#_PC_PIPE_BUF
 6

	)

49 
	#_PC_NO_TRUNC
 7

	)

50 
	#_PC_VDISABLE
 8

	)

51 
	#_PC_CHOWN_RESTRICTED
 9

	)

53 
	~<sys/°©.h
>

54 
	~<sys/times.h
>

55 
	~<sys/ut¢ame.h
>

56 
	~<utime.h
>

58 #ifde‡
__LIBRARY__


60 
	#__NR_£tup
 0

	)

61 
	#__NR_exô
 1

	)

62 
	#__NR_f‹k
 2

	)

63 
	#__NR_ªad
 3

	)

64 
	#__NR_wrôe
 4

	)

65 
	#__NR_›í
 5

	)

66 
	#__NR_˛o£
 6

	)

67 
	#__NR_waôpid
 7

	)

68 
	#__NR_¸ót
 8

	)

69 
	#__NR_lök
 9

	)

70 
	#__NR_u∆ök
 10

	)

71 
	#__NR_execve
 11

	)

72 
	#__NR_chdú
 12

	)

73 
	#__NR_time
 13

	)

74 
	#__NR_mknod
 14

	)

75 
	#__NR_chmod
 15

	)

76 
	#__NR_chown
 16

	)

77 
	#__NR_bªak
 17

	)

78 
	#__NR_°©
 18

	)

79 
	#__NR_l£ek
 19

	)

80 
	#__NR_gëpid
 20

	)

81 
	#__NR_mou¡
 21

	)

82 
	#__NR_umou¡
 22

	)

83 
	#__NR_£tuid
 23

	)

84 
	#__NR_gëuid
 24

	)

85 
	#__NR_°ime
 25

	)

86 
	#__NR_±ø˚
 26

	)

87 
	#__NR_Æ¨m
 27

	)

88 
	#__NR_f°©
 28

	)

89 
	#__NR_∑u£
 29

	)

90 
	#__NR_utime
 30

	)

91 
	#__NR_°ty
 31

	)

92 
	#__NR_gây
 32

	)

93 
	#__NR_ac˚ss
 33

	)

94 
	#__NR_ni˚
 34

	)

95 
	#__NR_·ime
 35

	)

96 
	#__NR_sync
 36

	)

97 
	#__NR_kûl
 37

	)

98 
	#__NR_ª«me
 38

	)

99 
	#__NR_mkdú
 39

	)

100 
	#__NR_rmdú
 40

	)

101 
	#__NR_dup
 41

	)

102 
	#__NR_pùe
 42

	)

103 
	#__NR_times
 43

	)

104 
	#__NR_¥of
 44

	)

105 
	#__NR_brk
 45

	)

106 
	#__NR_£tgid
 46

	)

107 
	#__NR_gëgid
 47

	)

108 
	#__NR_sig«l
 48

	)

109 
	#__NR_gëeuid
 49

	)

110 
	#__NR_gëegid
 50

	)

111 
	#__NR_ac˘
 51

	)

112 
	#__NR_phys
 52

	)

113 
	#__NR_lock
 53

	)

114 
	#__NR_io˘l
 54

	)

115 
	#__NR_f˙é
 55

	)

116 
	#__NR_mpx
 56

	)

117 
	#__NR_£çgid
 57

	)

118 
	#__NR_ulimô
 58

	)

119 
	#__NR_u«me
 59

	)

120 
	#__NR_umask
 60

	)

121 
	#__NR_chroŸ
 61

	)

122 
	#__NR_u°©
 62

	)

123 
	#__NR_dup2
 63

	)

124 
	#__NR_gëµid
 64

	)

125 
	#__NR_gëpgΩ
 65

	)

126 
	#__NR_£tsid
 66

	)

127 
	#__NR_siga˘i⁄
 67

	)

128 
	#__NR_sgëmask
 68

	)

129 
	#__NR_s£tmask
 69

	)

130 
	#__NR_£åeuid
 70

	)

131 
	#__NR_£åegid
 71

	)

133 
	#_sysˇŒ0
(
ty≥
,
«me
) \

134 
ty≥
 
	`«me
() \

136 
__ªs
; \

137 
__asm__
 volatile ("int $0x80" \

138 : "˜" (
__ªs
) \

139 : "0" (
__NR_
##
«me
)); \

140 i‡(
__ªs
 >= 0) \

141  (
ty≥
Ë
__ªs
; \

142 
î∫o
 = -
__ªs
; \

144 }

	)

146 
	#_sysˇŒ1
(
ty≥
,
«me
,
©y≥
,
a
) \

147 
ty≥
 
	`«me
(
©y≥
 
a
) \

149 
__ªs
; \

150 
__asm__
 volatile ("int $0x80" \

151 : "˜" (
__ªs
) \

152 : "0" (
__NR_
##
«me
),"b" (()(
a
))); \

153 i‡(
__ªs
 >= 0) \

154  (
ty≥
Ë
__ªs
; \

155 
î∫o
 = -
__ªs
; \

157 }

	)

159 
	#_sysˇŒ2
(
ty≥
,
«me
,
©y≥
,
a
,
bty≥
,
b
) \

160 
ty≥
 
	`«me
(
©y≥
 
a
,
bty≥
 
b
) \

162 
__ªs
; \

163 
__asm__
 volatile ("int $0x80" \

164 : "˜" (
__ªs
) \

165 : "0" (
__NR_
##
«me
),"b" (()(
a
)),"c" (()(
b
))); \

166 i‡(
__ªs
 >= 0) \

167  (
ty≥
Ë
__ªs
; \

168 
î∫o
 = -
__ªs
; \

170 }

	)

172 
	#_sysˇŒ3
(
ty≥
,
«me
,
©y≥
,
a
,
bty≥
,
b
,
˘y≥
,
c
) \

173 
ty≥
 
	`«me
(
©y≥
 
a
,
bty≥
 
b
,
˘y≥
 
c
) \

175 
__ªs
; \

176 
__asm__
 volatile ("int $0x80" \

177 : "˜" (
__ªs
) \

178 : "0" (
__NR_
##
«me
),"b" (()(
a
)),"c" (()(
b
)),"d" (()(
c
))); \

179 i‡(
__ªs
>=0) \

180  (
ty≥
Ë
__ªs
; \

181 
î∫o
=-
__ªs
; \

183 }

	)

187 
î∫o
;

189 
ac˚ss
(c⁄° * 
fûíame
, 
mode_t
 
mode
);

190 
ac˘
(c⁄° * 
fûíame
);

191 
Æ¨m
(
£c
);

192 
brk
(* 
íd_d©a_£gmít
);

193 * 
sbrk
(
±rdiff_t
 
ö¸emít
);

194 
chdú
(c⁄° * 
fûíame
);

195 
chmod
(c⁄° * 
fûíame
, 
mode_t
 
mode
);

196 
chown
(c⁄° * 
fûíame
, 
uid_t
 
ow√r
, 
gid_t
 
group
);

197 
chroŸ
(c⁄° * 
fûíame
);

198 
˛o£
(
fûdes
);

199 
¸ót
(c⁄° * 
fûíame
, 
mode_t
 
mode
);

200 
dup
(
fûdes
);

201 
execve
(c⁄° * 
fûíame
, ** 
¨gv
, ** 
ívp
);

202 
execv
(c⁄° * 
∑th«me
, ** 
¨gv
);

203 
execvp
(c⁄° * 
fûe
, ** 
¨gv
);

204 
exe˛
(c⁄° * 
∑th«me
, * 
¨g0
, ...);

205 
exe˛p
(c⁄° * 
fûe
, * 
¨g0
, ...);

206 
exe˛e
(c⁄° * 
∑th«me
, * 
¨g0
, ...);

208 
_exô
(
°©us
);

210 
f˙é
(
fûdes
, 
cmd
, ...);

211 
f‹k
();

212 
gëpid
();

213 
gëuid
();

214 
gëeuid
();

215 
gëgid
();

216 
gëegid
();

217 
io˘l
(
fûdes
, 
cmd
, ...);

218 
kûl
(
pid_t
 
pid
, 
sig«l
);

219 
lök
(c⁄° * 
fûíame1
, c⁄° * 
fûíame2
);

220 
l£ek
(
fûdes
, 
off_t
 
off£t
, 
‹igö
);

221 
mknod
(c⁄° * 
fûíame
, 
mode_t
 
mode
, 
dev_t
 
dev
);

222 
mou¡
(c⁄° * 
•ecülfûe
, c⁄° * 
dú
, 
rwÊag
);

223 
ni˚
(
vÆ
);

224 
›í
(c⁄° * 
fûíame
, 
Êag
, ...);

225 
∑u£
();

226 
pùe
(* 
fûdes
);

227 
ªad
(
fûdes
, * 
buf
, 
off_t
 
cou¡
);

228 
£çgΩ
();

229 
£çgid
(
pid_t
 
pid
,pid_à
pgid
);

230 
£tuid
(
uid_t
 
uid
);

231 
£tgid
(
gid_t
 
gid
);

232 (*
sig«l
(
sig
, (*
‚
)()))();

233 
	`°©
(c⁄° * 
fûíame
, 
°©
 * 
°©_buf
);

234 
	`f°©
(
fûdes
, 
°©
 * 
°©_buf
);

235 
	`°ime
(
time_t
 * 
çå
);

236 
	`sync
();

237 
time_t
 
	`time
—ime_à* 
éoc
);

238 
time_t
 
	`times
(
tms
 * 
tbuf
);

239 
	`ulimô
(
cmd
, 
limô
);

240 
mode_t
 
	`umask
(mode_à
mask
);

241 
	`umou¡
(c⁄° * 
•ecülfûe
);

242 
	`u«me
(
ut¢ame
 * 
«me
);

243 
	`u∆ök
(c⁄° * 
fûíame
);

244 
	`u°©
(
dev_t
 
dev
, 
u°©
 * 
ubuf
);

245 
	`utime
(c⁄° * 
fûíame
, 
utimbuf
 * 
times
);

246 
pid_t
 
	`waôpid
’id_à
pid
,* 
waô_°©
,
›ti⁄s
);

247 
pid_t
 
	`waô
(* 
waô_°©
);

248 
	`wrôe
(
fûdes
, c⁄° * 
buf
, 
off_t
 
cou¡
);

249 
	`dup2
(
ﬁdfd
, 
√wfd
);

250 
	`gëµid
();

251 
pid_t
 
	`gëpgΩ
();

252 
pid_t
 
	`£tsid
();

	@linux-0.11/include/utime.h

1 #i‚de‡
_UTIME_H


2 
	#_UTIME_H


	)

4 
	~<sys/ty≥s.h
>

6 
	sutimbuf
 {

7 
time_t
 
	ma˘ime
;

8 
time_t
 
	mmodtime
;

11 
utime
(c⁄° *
fûíame
, 
utimbuf
 *
times
);

	@linux-0.11/init/main.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

9 
	~<time.h
>

23 
ölöe
 
	$f‹k
(Ë
	`__©åibuã__
((
Æways_ölöe
));

24 
ölöe
 
	$∑u£
(Ë
	`__©åibuã__
((
Æways_ölöe
));

25 
ölöe
 
	$_sysˇŒ0
(,
f‹k
)

26 
ölöe
 
	$_sysˇŒ0
(,
∑u£
)

27 
ölöe
 
	$_sysˇŒ1
(,
£tup
,*,
BIOS
)

28 
ölöe
 
	$_sysˇŒ0
(,
sync
)

30 
	~<löux/ây.h
>

31 
	~<löux/sched.h
>

32 
	~<löux/hód.h
>

33 
	~<asm/sy°em.h
>

34 
	~<asm/io.h
>

36 
	~<°ddef.h
>

37 
	~<°d¨g.h
>

38 
	~<uni°d.h
>

39 
	~<f˙é.h
>

40 
	~<sys/ty≥s.h
>

42 
	~<löux/fs.h
>

44 
¥ötbuf
[1024];

46 
	`v•rötf
();

47 
	`öô
();

48 
	`blk_dev_öô
();

49 
	`chr_dev_öô
();

50 
	`hd_öô
();

51 
	`Ê›py_öô
();

52 
	`mem_öô
(
°¨t
, 
íd
);

53 
	`rd_öô
(
mem_°¨t
, 
Àngth
);

54 
	`kî√l_mktime
(
tm
 *Åm);

55 
°¨tup_time
;

60 
	#EXT_MEM_K
 (*(*)0x90002)

	)

61 
	#DRIVE_INFO
 (*(
drive_öfo
 *)0x90080)

	)

62 
	#ORIG_ROOT_DEV
 (*(*)0x901FC)

63 

	)

71 
	#CMOS_READ
(
addr
) ({ \

72 
	`outb_p
(0x80|
addr
,0x70); \

73 
	`öb_p
(0x71); \

74 
	}
})

	)

76 
	#BCD_TO_BIN
(
vÆ
Ë((vÆ)=((vÆ)&15Ë+ ((vÆ)>>4)*10)

	)

78 
	$time_öô
()

80 
tm
 
time
;

83 
time
.
tm_£c
 = 
	`CMOS_READ
(0);

84 
time
.
tm_mö
 = 
	`CMOS_READ
(2);

85 
time
.
tm_hour
 = 
	`CMOS_READ
(4);

86 
time
.
tm_mday
 = 
	`CMOS_READ
(7);

87 
time
.
tm_m⁄
 = 
	`CMOS_READ
(8);

88 
time
.
tm_yór
 = 
	`CMOS_READ
(9);

89 } 
time
.
tm_£c
 !
	`CMOS_READ
(0));

90 
	`BCD_TO_BIN
(
time
.
tm_£c
);

91 
	`BCD_TO_BIN
(
time
.
tm_mö
);

92 
	`BCD_TO_BIN
(
time
.
tm_hour
);

93 
	`BCD_TO_BIN
(
time
.
tm_mday
);

94 
	`BCD_TO_BIN
(
time
.
tm_m⁄
);

95 
	`BCD_TO_BIN
(
time
.
tm_yór
);

96 
time
.
tm_m⁄
--;

97 
°¨tup_time
 = 
	`kî√l_mktime
(&
time
);

98 
	}
}

100 
	gmem‹y_íd
 = 0;

101 
	gbuf„r_mem‹y_íd
 = 0;

102 
	gmaö_mem‹y_°¨t
 = 0;

104 
	sdrive_öfo
 { 
	mdummy
[32]; } 
	gdrive_öfo
;

106 
	$maö
()

113 
ROOT_DEV
 = 
ORIG_ROOT_DEV
;

114 
drive_öfo
 = 
DRIVE_INFO
;

115 
mem‹y_íd
 = (1<<20Ë+ (
EXT_MEM_K
<<10);

116 
mem‹y_íd
 &= 0xfffff000;

117 i‡(
mem‹y_íd
 > 16*1024*1024)

118 
mem‹y_íd
 = 16*1024*1024;

119 i‡(
mem‹y_íd
 > 12*1024*1024)

120 
buf„r_mem‹y_íd
 = 4*1024*1024;

121 i‡(
mem‹y_íd
 > 6*1024*1024)

122 
buf„r_mem‹y_íd
 = 2*1024*1024;

124 
buf„r_mem‹y_íd
 = 1*1024*1024;

125 
maö_mem‹y_°¨t
 = 
buf„r_mem‹y_íd
;

126 #ifde‡
RAMDISK


127 
maö_mem‹y_°¨t
 +
	`rd_öô
(maö_mem‹y_°¨t, 
RAMDISK
*1024);

129 
	`mem_öô
(
maö_mem‹y_°¨t
,
mem‹y_íd
);

130 
	`å≠_öô
();

131 
	`blk_dev_öô
();

132 
	`chr_dev_öô
();

133 
	`ây_öô
();

134 
	`time_öô
();

135 
	`sched_öô
();

136 
	`buf„r_öô
(
buf„r_mem‹y_íd
);

137 
	`hd_öô
();

138 
	`Ê›py_öô
();

139 
	`°i
();

141 
	`move_to_u£r_mode
();

142 i‡(!
	`f‹k
()) {

143 
	`öô
();

152 ;;Ë
	`∑u£
();

153 
	}
}

155 
	$¥ötf
(c⁄° *
fmt
, ...)

157 
va_li°
 
¨gs
;

158 
i
;

160 
	`va_°¨t
(
¨gs
, 
fmt
);

161 
	`wrôe
(1,
¥ötbuf
,
i
=
	`v•rötf
’rötbuf, 
fmt
, 
¨gs
));

162 
	`va_íd
(
¨gs
);

163  
i
;

164 
	}
}

166 * 
	g¨gv_rc
[] = { "/bö/sh", 
NULL
 };

167 * 
	gívp_rc
[] = { "HOME=/", 
NULL
 };

169 * 
	g¨gv
[] = { "-/bö/sh",
NULL
 };

170 * 
	gívp
[] = { "HOME=/u§/roŸ", 
NULL
 };

172 
	$öô
()

174 
pid
,
i
;

176 
	`£tup
((*Ë&
drive_öfo
);

177 (Ë
	`›í
("/dev/ây0",
O_RDWR
,0);

178 (Ë
	`dup
(0);

179 (Ë
	`dup
(0);

180 
	`¥ötf
("%d buf„r†%d byã†buf„∏•a˚\n\r",
NR_BUFFERS
,

181 
NR_BUFFERS
*
BLOCK_SIZE
);

182 
	`¥ötf
("Fªêmem: %d byãs\n\r",
mem‹y_íd
-
maö_mem‹y_°¨t
);

183 i‡(!(
pid
=
	`f‹k
())) {

184 
	`˛o£
(0);

185 i‡(
	`›í
("/ëc/rc",
O_RDONLY
,0))

186 
	`_exô
(1);

187 
	`execve
("/bö/sh",
¨gv_rc
,
ívp_rc
);

188 
	`_exô
(2);

190 i‡(
pid
>0)

191 
pid
 !
	`waô
(&
i
))

194 i‡((
pid
=
	`f‹k
())<0) {

195 
	`¥ötf
("Fork failed in init\r\n");

198 i‡(!
pid
) {

199 
	`˛o£
(0);close(1);close(2);

200 
	`£tsid
();

201 (Ë
	`›í
("/dev/ây0",
O_RDWR
,0);

202 (Ë
	`dup
(0);

203 (Ë
	`dup
(0);

204 
	`_exô
(
	`execve
("/bö/sh",
¨gv
,
ívp
));

207 i‡(
pid
 =
	`waô
(&
i
))

209 
	`¥ötf
("\n\rchûd %d dõd wôh codê%04x\n\r",
pid
,
i
);

210 
	`sync
();

212 
	`_exô
(0);

213 
	}
}

	@linux-0.11/kernel/blk_drv/blk.h

1 #i‚de‡
_BLK_H


2 
	#_BLK_H


	)

4 
	#NR_BLK_DEV
 7

	)

15 
	#NR_REQUEST
 32

	)

23 
	sªque°
 {

24 
	mdev
;

25 
	mcmd
;

26 
	mîr‹s
;

27 
	m£˘‹
;

28 
	mƒ_£˘‹s
;

29 * 
	mbuf„r
;

30 
èsk_°ru˘
 * 
	mwaôög
;

31 
buf„r_hód
 * 
	mbh
;

32 
ªque°
 * 
	m√xt
;

40 
	#IN_ORDER
(
s1
,
s2
) \

41 ((
s1
)->
cmd
<(
s2
)->cmd || ((s1)->cmd==(s2)->cmd && \

42 ((
s1
)->
dev
 < (
s2
)->dev || ((s1)->dev == (s2)->dev && \

43 (
s1
)->
£˘‹
 < (
s2
)->£˘‹))))

	)

45 
	sblk_dev_°ru˘
 {

46 (*
	mªque°_‚
)();

47 
ªque°
 * 
	mcuºít_ªque°
;

50 
blk_dev_°ru˘
 
blk_dev
[
NR_BLK_DEV
];

51 
ªque°
Ñeque°[
NR_REQUEST
];

52 
èsk_°ru˘
 * 
waô_f‹_ªque°
;

54 #ifde‡
MAJOR_NR


61 #i‡(
MAJOR_NR
 == 1)

63 
	#DEVICE_NAME
 "ømdisk"

	)

64 
	#DEVICE_REQUEST
 
do_rd_ªque°


	)

65 
	#DEVICE_NR
(
devi˚
Ë((devi˚Ë& 7)

	)

66 
	#DEVICE_ON
(
devi˚
)

	)

67 
	#DEVICE_OFF
(
devi˚
)

	)

69 #ñi‡(
MAJOR_NR
 == 2)

71 
	#DEVICE_NAME
 "Ê›py"

	)

72 
	#DEVICE_INTR
 
do_Ê›py


	)

73 
	#DEVICE_REQUEST
 
do_fd_ªque°


	)

74 
	#DEVICE_NR
(
devi˚
Ë((devi˚Ë& 3)

	)

75 
	#DEVICE_ON
(
devi˚
Ë
	`Ê›py_⁄
(
	`DEVICE_NR
(devi˚))

	)

76 
	#DEVICE_OFF
(
devi˚
Ë
	`Ê›py_off
(
	`DEVICE_NR
(devi˚))

	)

78 #ñi‡(
MAJOR_NR
 == 3)

80 
	#DEVICE_NAME
 "h¨ddisk"

	)

81 
	#DEVICE_INTR
 
do_hd


	)

82 
	#DEVICE_REQUEST
 
do_hd_ªque°


	)

83 
	#DEVICE_NR
(
devi˚
Ë(
	`MINOR
(devi˚)/5)

	)

84 
	#DEVICE_ON
(
devi˚
)

	)

85 
	#DEVICE_OFF
(
devi˚
)

	)

93 
	#CURRENT
 (
blk_dev
[
MAJOR_NR
].
cuºít_ªque°
)

	)

94 
	#CURRENT_DEV
 
	`DEVICE_NR
(
CURRENT
->
dev
)

	)

96 #ifde‡
DEVICE_INTR


97 (*
DEVICE_INTR
)(Ë
NULL
;

99 (
DEVICE_REQUEST
)();

101 
ölöe
 
	$u∆ock_buf„r
(
buf„r_hód
 * 
bh
)

103 i‡(!
bh
->
b_lock
)

104 
	`¥ötk
(
DEVICE_NAME
 ": free buffer being unlocked\n");

105 
bh
->
b_lock
=0;

106 
	`wake_up
(&
bh
->
b_waô
);

107 
	}
}

109 
ölöe
 
	$íd_ªque°
(
u±od©e
)

111 
	`DEVICE_OFF
(
CURRENT
->
dev
);

112 i‡(
CURRENT
->
bh
) {

113 
CURRENT
->
bh
->
b_u±od©e
 = 
u±od©e
;

114 
	`u∆ock_buf„r
(
CURRENT
->
bh
);

116 i‡(!
u±od©e
) {

117 
	`¥ötk
(
DEVICE_NAME
 " I/OÉrror\n\r");

118 
	`¥ötk
("dev %04x, block %d\n\r",
CURRENT
->
dev
,

119 
CURRENT
->
bh
->
b_blockƒ
);

121 
	`wake_up
(&
CURRENT
->
waôög
);

122 
	`wake_up
(&
waô_f‹_ªque°
);

123 
CURRENT
->
dev
 = -1;

124 
CURRENT
 = CURRENT->
√xt
;

125 
	}
}

127 
	#INIT_REQUEST
 \

128 
ª≥©
: \

129 i‡(!
CURRENT
) \

131 i‡(
	`MAJOR
(
CURRENT
->
dev
Ë!
MAJOR_NR
) \

132 
	`∑nic
(
DEVICE_NAME
 ":ÑequestÜist destroyed"); \

133 i‡(
CURRENT
->
bh
) { \

134 i‡(!
CURRENT
->
bh
->
b_lock
) \

135 
	`∑nic
(
DEVICE_NAME
 ": blockÇotÜocked"); \

136 }

	)

	@linux-0.11/kernel/blk_drv/floppy.c

33 
	~<löux/sched.h
>

34 
	~<löux/fs.h
>

35 
	~<löux/kî√l.h
>

36 
	~<löux/fdªg.h
>

37 
	~<asm/sy°em.h
>

38 
	~<asm/io.h
>

39 
	~<asm/£gmít.h
>

41 
	#MAJOR_NR
 2

	)

42 
	~"blk.h
"

44 
	gªˇlibøã
 = 0;

45 
	gª£t
 = 0;

46 
	g£ek
 = 0;

48 
cuºít_DOR
;

50 
	#immoutb_p
(
vÆ
,
p‹t
) \

51 
	`__asm__
("outb %0,%1\n\tjm∞1f\n1:\tjm∞1f\n1:"::"a" ((Ë(
vÆ
)),"i" (
p‹t
))

	)

53 
	#TYPE
(
x
Ë((x)>>2)

	)

54 
	#DRIVE
(
x
Ë((x)&0x03)

	)

60 
	#MAX_ERRORS
 8

	)

65 
	#MAX_REPLIES
 7

	)

66 
	gª∂y_buf„r
[
MAX_REPLIES
];

67 
	#ST0
 (
ª∂y_buf„r
[0])

	)

68 
	#ST1
 (
ª∂y_buf„r
[1])

	)

69 
	#ST2
 (
ª∂y_buf„r
[2])

	)

70 
	#ST3
 (
ª∂y_buf„r
[3])

	)

82 
	sÊ›py_°ru˘
 {

83 
	msize
, 
	m£˘
, 
	mhód
, 
	måack
, 
	m°ªtch
;

84 
	mg≠
,
	møã
,
	m•ec1
;

85 } 
	gÊ›py_ty≥
[] = {

104 
Ê›py_öãºu±
();

105 
tmp_Ê›py_¨ó
[1024];

112 
	gcur_•ec1
 = -1;

113 
	gcur_øã
 = -1;

114 
Ê›py_°ru˘
 * 
	gÊ›py
 = 
Ê›py_ty≥
;

115 
	gcuºít_drive
 = 0;

116 
	g£˘‹
 = 0;

117 
	ghód
 = 0;

118 
	gåack
 = 0;

119 
	g£ek_åack
 = 0;

120 
	gcuºít_åack
 = 255;

121 
	gcomm™d
 = 0;

122 
	g£À˘ed
 = 0;

123 
èsk_°ru˘
 * 
	gwaô_⁄_Ê›py_£À˘
 = 
NULL
;

125 
	$Ê›py_de£À˘
(
ƒ
)

127 i‡(
ƒ
 !(
cuºít_DOR
 & 3))

128 
	`¥ötk
("floppy_deselect: driveÇot selected\n\r");

129 
£À˘ed
 = 0;

130 
	`wake_up
(&
waô_⁄_Ê›py_£À˘
);

131 
	}
}

139 
	$Ê›py_ch™ge
(
ƒ
)

141 
ª≥©
:

142 
	`Ê›py_⁄
(
ƒ
);

143 (
cuºít_DOR
 & 3Ë!
ƒ
 && 
£À˘ed
)

144 
	`öãºu±ibÀ_¶ìp_⁄
(&
waô_⁄_Ê›py_£À˘
);

145 i‡((
cuºít_DOR
 & 3Ë!
ƒ
)

146 
ª≥©
;

147 i‡(
	`öb
(
FD_DIR
) & 0x80) {

148 
	`Ê›py_off
(
ƒ
);

151 
	`Ê›py_off
(
ƒ
);

153 
	}
}

155 
	#c›y_buf„r
(
‰om
,
to
) \

156 
	`__asm__
("cld ;Ñep ; movsl" \

157 ::"c" (
BLOCK_SIZE
/4),"S" (()(
‰om
)),"D" (()(
to
)) \

158 )

	)

160 
	$£tup_DMA
()

162 
addr
 = (Ë
CURRENT
->
buf„r
;

164 
	`˛i
();

165 i‡(
addr
 >= 0x100000) {

166 
addr
 = (Ë
tmp_Ê›py_¨ó
;

167 i‡(
comm™d
 =
FD_WRITE
)

168 
	`c›y_buf„r
(
CURRENT
->
buf„r
,
tmp_Ê›py_¨ó
);

171 
	`immoutb_p
(4|2,10);

174 
	`__asm__
("outb %%al,$12\n\tjmp 1f\n1:\tjmp 1f\n1:\t"

176 "a" ((Ë((
comm™d
 =
FD_READ
)?
DMA_READ
:
DMA_WRITE
)));

178 
	`immoutb_p
(
addr
,4);

179 
addr
 >>= 8;

181 
	`immoutb_p
(
addr
,4);

182 
addr
 >>= 8;

184 
	`immoutb_p
(
addr
,0x81);

186 
	`immoutb_p
(0xff,5);

188 
	`immoutb_p
(3,5);

190 
	`immoutb_p
(0|2,10);

191 
	`°i
();

192 
	}
}

194 
	$ouçut_byã
(
byã
)

196 
cou¡î
;

197 
°©us
;

199 i‡(
ª£t
)

201 
cou¡î
 = 0 ; counter < 10000 ; counter++) {

202 
°©us
 = 
	`öb_p
(
FD_STATUS
Ë& (
STATUS_READY
 | 
STATUS_DIR
);

203 i‡(
°©us
 =
STATUS_READY
) {

204 
	`outb
(
byã
,
FD_DATA
);

208 
ª£t
 = 1;

209 
	`¥ötk
("UnableÅo send byteÅo FDC\n\r");

210 
	}
}

212 
	$ªsu…
()

214 
i
 = 0, 
cou¡î
, 
°©us
;

216 i‡(
ª£t
)

218 
cou¡î
 = 0 ; counter < 10000 ; counter++) {

219 
°©us
 = 
	`öb_p
(
FD_STATUS
)&(
STATUS_DIR
|
STATUS_READY
|
STATUS_BUSY
);

220 i‡(
°©us
 =
STATUS_READY
)

221  
i
;

222 i‡(
°©us
 =(
STATUS_DIR
|
STATUS_READY
|
STATUS_BUSY
)) {

223 i‡(
i
 >
MAX_REPLIES
)

225 
ª∂y_buf„r
[
i
++] = 
	`öb_p
(
FD_DATA
);

228 
ª£t
 = 1;

229 
	`¥ötk
("GetstatusÅimes out\n\r");

231 
	}
}

233 
	$bad_Êp_öå
()

235 
CURRENT
->
îr‹s
++;

236 i‡(
CURRENT
->
îr‹s
 > 
MAX_ERRORS
) {

237 
	`Ê›py_de£À˘
(
cuºít_drive
);

238 
	`íd_ªque°
(0);

240 i‡(
CURRENT
->
îr‹s
 > 
MAX_ERRORS
/2)

241 
ª£t
 = 1;

243 
ªˇlibøã
 = 1;

244 
	}
}

250 
	$rw_öãºu±
()

252 i‡(
	`ªsu…
(Ë!7 || (
ST0
 & 0xf8Ë|| (
ST1
 & 0xbfË|| (
ST2
 & 0x73)) {

253 i‡(
ST1
 & 0x02) {

254 
	`¥ötk
("Drivê%d i†wrôê¥Ÿe˘ed\n\r",
cuºít_drive
);

255 
	`Ê›py_de£À˘
(
cuºít_drive
);

256 
	`íd_ªque°
(0);

258 
	`bad_Êp_öå
();

259 
	`do_fd_ªque°
();

262 i‡(
comm™d
 =
FD_READ
 && ()(
CURRENT
->
buf„r
) >= 0x100000)

263 
	`c›y_buf„r
(
tmp_Ê›py_¨ó
,
CURRENT
->
buf„r
);

264 
	`Ê›py_de£À˘
(
cuºít_drive
);

265 
	`íd_ªque°
(1);

266 
	`do_fd_ªque°
();

267 
	}
}

269 
ölöe
 
	$£tup_rw_Ê›py
()

271 
	`£tup_DMA
();

272 
do_Ê›py
 = 
rw_öãºu±
;

273 
	`ouçut_byã
(
comm™d
);

274 
	`ouçut_byã
(
hód
<<2 | 
cuºít_drive
);

275 
	`ouçut_byã
(
åack
);

276 
	`ouçut_byã
(
hód
);

277 
	`ouçut_byã
(
£˘‹
);

278 
	`ouçut_byã
(2);

279 
	`ouçut_byã
(
Ê›py
->
£˘
);

280 
	`ouçut_byã
(
Ê›py
->
g≠
);

281 
	`ouçut_byã
(0xFF);

282 i‡(
ª£t
)

283 
	`do_fd_ªque°
();

284 
	}
}

291 
	$£ek_öãºu±
()

294 
	`ouçut_byã
(
FD_SENSEI
);

295 i‡(
	`ªsu…
(Ë!2 || (
ST0
 & 0xF8Ë!0x20 || 
ST1
 !
£ek_åack
) {

296 
	`bad_Êp_öå
();

297 
	`do_fd_ªque°
();

300 
cuºít_åack
 = 
ST1
;

301 
	`£tup_rw_Ê›py
();

302 
	}
}

309 
	$å™s„r
()

311 i‡(
cur_•ec1
 !
Ê›py
->
•ec1
) {

312 
cur_•ec1
 = 
Ê›py
->
•ec1
;

313 
	`ouçut_byã
(
FD_SPECIFY
);

314 
	`ouçut_byã
(
cur_•ec1
);

315 
	`ouçut_byã
(6);

317 i‡(
cur_øã
 !
Ê›py
->
øã
)

318 
	`outb_p
(
cur_øã
 = 
Ê›py
->
øã
,
FD_DCR
);

319 i‡(
ª£t
) {

320 
	`do_fd_ªque°
();

323 i‡(!
£ek
) {

324 
	`£tup_rw_Ê›py
();

327 
do_Ê›py
 = 
£ek_öãºu±
;

328 i‡(
£ek_åack
) {

329 
	`ouçut_byã
(
FD_SEEK
);

330 
	`ouçut_byã
(
hód
<<2 | 
cuºít_drive
);

331 
	`ouçut_byã
(
£ek_åack
);

333 
	`ouçut_byã
(
FD_RECALIBRATE
);

334 
	`ouçut_byã
(
hód
<<2 | 
cuºít_drive
);

336 i‡(
ª£t
)

337 
	`do_fd_ªque°
();

338 
	}
}

343 
	$ªˇl_öãºu±
()

345 
	`ouçut_byã
(
FD_SENSEI
);

346 i‡(
	`ªsu…
()!=2 || (
ST0
 & 0xE0) == 0x60)

347 
ª£t
 = 1;

349 
ªˇlibøã
 = 0;

350 
	`do_fd_ªque°
();

351 
	}
}

353 
	$u√x≥˘ed_Ê›py_öãºu±
()

355 
	`ouçut_byã
(
FD_SENSEI
);

356 i‡(
	`ªsu…
()!=2 || (
ST0
 & 0xE0) == 0x60)

357 
ª£t
 = 1;

359 
ªˇlibøã
 = 1;

360 
	}
}

362 
	$ªˇlibøã_Ê›py
()

364 
ªˇlibøã
 = 0;

365 
cuºít_åack
 = 0;

366 
do_Ê›py
 = 
ªˇl_öãºu±
;

367 
	`ouçut_byã
(
FD_RECALIBRATE
);

368 
	`ouçut_byã
(
hód
<<2 | 
cuºít_drive
);

369 i‡(
ª£t
)

370 
	`do_fd_ªque°
();

371 
	}
}

373 
	$ª£t_öãºu±
()

375 
	`ouçut_byã
(
FD_SENSEI
);

376 (Ë
	`ªsu…
();

377 
	`ouçut_byã
(
FD_SPECIFY
);

378 
	`ouçut_byã
(
cur_•ec1
);

379 
	`ouçut_byã
(6);

380 
	`do_fd_ªque°
();

381 
	}
}

386 
	$ª£t_Ê›py
()

388 
i
;

390 
ª£t
 = 0;

391 
cur_•ec1
 = -1;

392 
cur_øã
 = -1;

393 
ªˇlibøã
 = 1;

394 
	`¥ötk
("Reset-floppy called\n\r");

395 
	`˛i
();

396 
do_Ê›py
 = 
ª£t_öãºu±
;

397 
	`outb_p
(
cuºít_DOR
 & ~0x04,
FD_DOR
);

398 
i
=0 ; i<100 ; i++)

399 
	`__asm__
("nop");

400 
	`outb
(
cuºít_DOR
,
FD_DOR
);

401 
	`°i
();

402 
	}
}

404 
	$Ê›py_⁄_öãºu±
()

407 
£À˘ed
 = 1;

408 i‡(
cuºít_drive
 !(
cuºít_DOR
 & 3)) {

409 
cuºít_DOR
 &= 0xFC;

410 
cuºít_DOR
 |
cuºít_drive
;

411 
	`outb
(
cuºít_DOR
,
FD_DOR
);

412 
	`add_timî
(2,&
å™s„r
);

414 
	`å™s„r
();

415 
	}
}

417 
	$do_fd_ªque°
()

419 
block
;

421 
£ek
 = 0;

422 i‡(
ª£t
) {

423 
	`ª£t_Ê›py
();

426 i‡(
ªˇlibøã
) {

427 
	`ªˇlibøã_Ê›py
();

430 
INIT_REQUEST
;

431 
Ê›py
 = (
	`MINOR
(
CURRENT
->
dev
)>>2Ë+ 
Ê›py_ty≥
;

432 i‡(
cuºít_drive
 !
CURRENT_DEV
)

433 
£ek
 = 1;

434 
cuºít_drive
 = 
CURRENT_DEV
;

435 
block
 = 
CURRENT
->
£˘‹
;

436 i‡(
block
+2 > 
Ê›py
->
size
) {

437 
	`íd_ªque°
(0);

438 
ª≥©
;

440 
£˘‹
 = 
block
 % 
Ê›py
->
£˘
;

441 
block
 /
Ê›py
->
£˘
;

442 
hód
 = 
block
 % 
Ê›py
->head;

443 
åack
 = 
block
 / 
Ê›py
->
hód
;

444 
£ek_åack
 = 
åack
 << 
Ê›py
->
°ªtch
;

445 i‡(
£ek_åack
 !
cuºít_åack
)

446 
£ek
 = 1;

447 
£˘‹
++;

448 i‡(
CURRENT
->
cmd
 =
READ
)

449 
comm™d
 = 
FD_READ
;

450 i‡(
CURRENT
->
cmd
 =
WRITE
)

451 
comm™d
 = 
FD_WRITE
;

453 
	`∑nic
("do_fd_request: unknown command");

454 
	`add_timî
(
	`ticks_to_Ê›py_⁄
(
cuºít_drive
),&
Ê›py_⁄_öãºu±
);

455 
	}
}

457 
	$Ê›py_öô
()

459 
blk_dev
[
MAJOR_NR
].
ªque°_‚
 = 
DEVICE_REQUEST
;

460 
	`£t_å≠_g©e
(0x26,&
Ê›py_öãºu±
);

461 
	`outb
(
	`öb_p
(0x21)&~0x40,0x21);

462 
	}
}

	@linux-0.11/kernel/blk_drv/hd.c

16 
	~<löux/c⁄fig.h
>

17 
	~<löux/sched.h
>

18 
	~<löux/fs.h
>

19 
	~<löux/kî√l.h
>

20 
	~<löux/hdªg.h
>

21 
	~<asm/sy°em.h
>

22 
	~<asm/io.h
>

23 
	~<asm/£gmít.h
>

25 
	#MAJOR_NR
 3

	)

26 
	~"blk.h
"

28 
	#CMOS_READ
(
addr
) ({ \

29 
	`outb_p
(0x80|
addr
,0x70); \

30 
	`öb_p
(0x71); \

31 })

	)

34 
	#MAX_ERRORS
 7

	)

35 
	#MAX_HD
 2

	)

37 
ªˇl_öå
();

39 
	gªˇlibøã
 = 0;

40 
	gª£t
 = 0;

45 
	shd_i_°ru˘
 {

46 
	mhód
,
	m£˘
,
	mcyl
,
	mwpcom
,
	mlz⁄e
,
	m˘l
;

48 #ifde‡
HD_TYPE


49 
hd_i_°ru˘
 
	ghd_öfo
[] = { 
HD_TYPE
 };

50 
	#NR_HD
 (( (
hd_öfo
))/( (
hd_i_°ru˘
)))

	)

52 
hd_i_°ru˘
 
	ghd_öfo
[] = { {0,0,0,0,0,0},{0,0,0,0,0,0} };

53 
	gNR_HD
 = 0;

56 
	shd_°ru˘
 {

57 
	m°¨t_£˘
;

58 
	mƒ_£˘s
;

59 } 
	ghd
[5*
MAX_HD
]={{0,0},};

61 
	#p‹t_ªad
(
p‹t
,
buf
,
ƒ
) \

62 
	`__asm__
("˛d;ªp;ösw"::"d" (
p‹t
),"D" (
buf
),"c" (
ƒ
))

	)

64 
	#p‹t_wrôe
(
p‹t
,
buf
,
ƒ
) \

65 
	`__asm__
("˛d;ªp;outsw"::"d" (
p‹t
),"S" (
buf
),"c" (
ƒ
))

	)

67 
hd_öãºu±
();

68 
rd_lﬂd
();

71 
	$sys_£tup
(* 
BIOS
)

73 
ˇŒabÀ
 = 1;

74 
i
,
drive
;

75 
cmos_disks
;

76 
∑πôi⁄
 *
p
;

77 
buf„r_hód
 * 
bh
;

79 i‡(!
ˇŒabÀ
)

81 
ˇŒabÀ
 = 0;

82 #i‚de‡
HD_TYPE


83 
drive
=0 ; drive<2 ; drive++) {

84 
hd_öfo
[
drive
].
cyl
 = *(*Ë
BIOS
;

85 
hd_öfo
[
drive
].
hód
 = *(*Ë(2+
BIOS
);

86 
hd_öfo
[
drive
].
wpcom
 = *(*Ë(5+
BIOS
);

87 
hd_öfo
[
drive
].
˘l
 = *(*Ë(8+
BIOS
);

88 
hd_öfo
[
drive
].
lz⁄e
 = *(*Ë(12+
BIOS
);

89 
hd_öfo
[
drive
].
£˘
 = *(*Ë(14+
BIOS
);

90 
BIOS
 += 16;

92 i‡(
hd_öfo
[1].
cyl
)

93 
NR_HD
=2;

95 
NR_HD
=1;

97 
i
=0 ; i<
NR_HD
 ; i++) {

98 
hd
[
i
*5].
°¨t_£˘
 = 0;

99 
hd
[
i
*5].
ƒ_£˘s
 = 
hd_öfo
[i].
hód
*

100 
hd_öfo
[
i
].
£˘
*hd_öfo[i].
cyl
;

125 i‡((
cmos_disks
 = 
	`CMOS_READ
(0x12)) & 0xf0)

126 i‡(
cmos_disks
 & 0x0f)

127 
NR_HD
 = 2;

129 
NR_HD
 = 1;

131 
NR_HD
 = 0;

132 
i
 = 
NR_HD
 ; i < 2 ; i++) {

133 
hd
[
i
*5].
°¨t_£˘
 = 0;

134 
hd
[
i
*5].
ƒ_£˘s
 = 0;

136 
drive
=0 ; drive<
NR_HD
 ; drive++) {

137 i‡(!(
bh
 = 
	`bªad
(0x300 + 
drive
*5,0))) {

138 
	`¥ötk
("UnableÅoÑeadÖartitionÅable of drive %d\n\r",

139 
drive
);

140 
	`∑nic
("");

142 i‡(
bh
->
b_d©a
[510] != 0x55 || ()

143 
bh
->
b_d©a
[511] != 0xAA) {

144 
	`¥ötk
("BadÖ¨tôi⁄ÅabÀ o¿drivê%d\n\r",
drive
);

145 
	`∑nic
("");

147 
p
 = 0x1BE + (*)
bh
->
b_d©a
;

148 
i
=1;i<5;i++,
p
++) {

149 
hd
[
i
+5*
drive
].
°¨t_£˘
 = 
p
->start_sect;

150 
hd
[
i
+5*
drive
].
ƒ_£˘s
 = 
p
->nr_sects;

152 
	`bªl£
(
bh
);

154 i‡(
NR_HD
)

155 
	`¥ötk
("P¨tôi⁄ÅabÀ%†ok.\n\r",(
NR_HD
>1)?"s":"");

156 
	`rd_lﬂd
();

157 
	`mou¡_roŸ
();

159 
	}
}

161 
	$c⁄åﬁÀr_ªady
()

163 
ªåõs
=100000;

165 --
ªåõs
 && (
	`öb_p
(
HD_STATUS
)&0x80));

166  (
ªåõs
);

167 
	}
}

169 
	$wö_ªsu…
()

171 
i
=
	`öb_p
(
HD_STATUS
);

173 i‡((
i
 & (
BUSY_STAT
 | 
READY_STAT
 | 
WRERR_STAT
 | 
SEEK_STAT
 | 
ERR_STAT
))

174 =(
READY_STAT
 | 
SEEK_STAT
))

176 i‡(
i
&1Ëi=
	`öb
(
HD_ERROR
);

178 
	}
}

180 
hd_out
(
drive
,
n£˘
,
£˘
,

181 
hód
,
cyl
,
cmd
,

182 (*
öå_addr
)())

184 
p‹t
 
	`asm
("dx");

186 i‡(
drive
>1 || 
hód
>15)

187 
	`∑nic
("TryingÅo write bad sector");

188 i‡(!
	`c⁄åﬁÀr_ªady
())

189 
	`∑nic
("HD controllerÇotÑeady");

190 
do_hd
 = 
öå_addr
;

191 
	`outb_p
(
hd_öfo
[
drive
].
˘l
,
HD_CMD
);

192 
p‹t
=
HD_DATA
;

193 
	`outb_p
(
hd_öfo
[
drive
].
wpcom
>>2,++
p‹t
);

194 
	`outb_p
(
n£˘
,++
p‹t
);

195 
	`outb_p
(
£˘
,++
p‹t
);

196 
	`outb_p
(
cyl
,++
p‹t
);

197 
	`outb_p
(
cyl
>>8,++
p‹t
);

198 
	`outb_p
(0xA0|(
drive
<<4)|
hód
,++
p‹t
);

199 
	`outb
(
cmd
,++
p‹t
);

200 
	}
}

202 
	$drive_busy
()

204 
i
;

206 
i
 = 0; i < 10000; i++)

207 i‡(
READY_STAT
 =(
	`öb_p
(
HD_STATUS
Ë& (
BUSY_STAT
|READY_STAT)))

209 
i
 = 
	`öb
(
HD_STATUS
);

210 
i
 &
BUSY_STAT
 | 
READY_STAT
 | 
SEEK_STAT
;

211 i‡(
i
 =(
READY_STAT
 | 
SEEK_STAT
))

213 
	`¥ötk
("HD controllerÅimes out\n\r");

215 
	}
}

217 
	$ª£t_c⁄åﬁÀr
()

219 
i
;

221 
	`outb
(4,
HD_CMD
);

222 
i
 = 0; i < 100; i++Ë
	`n›
();

223 
	`outb
(
hd_öfo
[0].
˘l
 & 0x0‡,
HD_CMD
);

224 i‡(
	`drive_busy
())

225 
	`¥ötk
("HD-controller still busy\n\r");

226 i‡((
i
 = 
	`öb
(
HD_ERROR
)) != 1)

227 
	`¥ötk
("HD-c⁄åﬁÀ∏ª£àÁûed: %02x\n\r",
i
);

228 
	}
}

230 
	$ª£t_hd
(
ƒ
)

232 
	`ª£t_c⁄åﬁÀr
();

233 
	`hd_out
(
ƒ
,
hd_öfo
[ƒ].
£˘
,hd_öfo[ƒ].£˘,hd_öfo[ƒ].
hód
-1,

234 
hd_öfo
[
ƒ
].
cyl
,
WIN_SPECIFY
,&
ªˇl_öå
);

235 
	}
}

237 
	$u√x≥˘ed_hd_öãºu±
()

239 
	`¥ötk
("Unexpected HD interrupt\n\r");

240 
	}
}

242 
	$bad_rw_öå
()

244 i‡(++
CURRENT
->
îr‹s
 >
MAX_ERRORS
)

245 
	`íd_ªque°
(0);

246 i‡(
CURRENT
->
îr‹s
 > 
MAX_ERRORS
/2)

247 
ª£t
 = 1;

248 
	}
}

250 
	$ªad_öå
()

252 i‡(
	`wö_ªsu…
()) {

253 
	`bad_rw_öå
();

254 
	`do_hd_ªque°
();

257 
	`p‹t_ªad
(
HD_DATA
,
CURRENT
->
buf„r
,256);

258 
CURRENT
->
îr‹s
 = 0;

259 
CURRENT
->
buf„r
 += 512;

260 
CURRENT
->
£˘‹
++;

261 i‡(--
CURRENT
->
ƒ_£˘‹s
) {

262 
do_hd
 = &
ªad_öå
;

265 
	`íd_ªque°
(1);

266 
	`do_hd_ªque°
();

267 
	}
}

269 
	$wrôe_öå
()

271 i‡(
	`wö_ªsu…
()) {

272 
	`bad_rw_öå
();

273 
	`do_hd_ªque°
();

276 i‡(--
CURRENT
->
ƒ_£˘‹s
) {

277 
CURRENT
->
£˘‹
++;

278 
CURRENT
->
buf„r
 += 512;

279 
do_hd
 = &
wrôe_öå
;

280 
	`p‹t_wrôe
(
HD_DATA
,
CURRENT
->
buf„r
,256);

283 
	`íd_ªque°
(1);

284 
	`do_hd_ªque°
();

285 
	}
}

287 
	$ªˇl_öå
()

289 i‡(
	`wö_ªsu…
())

290 
	`bad_rw_öå
();

291 
	`do_hd_ªque°
();

292 
	}
}

294 
	$do_hd_ªque°
()

296 
i
,
r
 = 0;

297 
block
,
dev
;

298 
£c
,
hód
,
cyl
;

299 
n£˘
;

301 
INIT_REQUEST
;

302 
dev
 = 
	`MINOR
(
CURRENT
->dev);

303 
block
 = 
CURRENT
->
£˘‹
;

304 i‡(
dev
 >5*
NR_HD
 || 
block
+2 > 
hd
[dev].
ƒ_£˘s
) {

305 
	`íd_ªque°
(0);

306 
ª≥©
;

308 
block
 +
hd
[
dev
].
°¨t_£˘
;

309 
dev
 /= 5;

310 
	`__asm__
("div»%4":"˜" (
block
),"=d" (
£c
):"0" (block),"1" (0),

311 "r" (
hd_öfo
[
dev
].
£˘
));

312 
	`__asm__
("div»%4":"˜" (
cyl
),"=d" (
hód
):"0" (
block
),"1" (0),

313 "r" (
hd_öfo
[
dev
].
hód
));

314 
£c
++;

315 
n£˘
 = 
CURRENT
->
ƒ_£˘‹s
;

316 i‡(
ª£t
) {

317 
ª£t
 = 0;

318 
ªˇlibøã
 = 1;

319 
	`ª£t_hd
(
CURRENT_DEV
);

322 i‡(
ªˇlibøã
) {

323 
ªˇlibøã
 = 0;

324 
	`hd_out
(
dev
,
hd_öfo
[
CURRENT_DEV
].
£˘
,0,0,0,

325 
WIN_RESTORE
,&
ªˇl_öå
);

328 i‡(
CURRENT
->
cmd
 =
WRITE
) {

329 
	`hd_out
(
dev
,
n£˘
,
£c
,
hód
,
cyl
,
WIN_WRITE
,&
wrôe_öå
);

330 
i
=0 ; i<3000 && !(
r
=
	`öb_p
(
HD_STATUS
)&
DRQ_STAT
) ; i++)

332 i‡(!
r
) {

333 
	`bad_rw_öå
();

334 
ª≥©
;

336 
	`p‹t_wrôe
(
HD_DATA
,
CURRENT
->
buf„r
,256);

337 } i‡(
CURRENT
->
cmd
 =
READ
) {

338 
	`hd_out
(
dev
,
n£˘
,
£c
,
hód
,
cyl
,
WIN_READ
,&
ªad_öå
);

340 
	`∑nic
("unknown hd-command");

341 
	}
}

343 
	$hd_öô
()

345 
blk_dev
[
MAJOR_NR
].
ªque°_‚
 = 
DEVICE_REQUEST
;

346 
	`£t_öå_g©e
(0x2E,&
hd_öãºu±
);

347 
	`outb_p
(
	`öb_p
(0x21)&0xfb,0x21);

348 
	`outb
(
	`öb_p
(0xA1)&0xbf,0xA1);

349 
	}
}

	@linux-0.11/kernel/blk_drv/ll_rw_blk.c

10 
	~<î∫o.h
>

11 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/sy°em.h
>

15 
	~"blk.h
"

21 
ªque°
 
	gªque°
[
NR_REQUEST
];

26 
èsk_°ru˘
 * 
	gwaô_f‹_ªque°
 = 
NULL
;

32 
blk_dev_°ru˘
 
	gblk_dev
[
NR_BLK_DEV
] = {

33 { 
NULL
, NULL },

34 { 
NULL
, NULL },

35 { 
NULL
, NULL },

36 { 
NULL
, NULL },

37 { 
NULL
, NULL },

38 { 
NULL
, NULL },

39 { 
NULL
, NULL }

42 
ölöe
 
	$lock_buf„r
(
buf„r_hód
 * 
bh
)

44 
	`˛i
();

45 
bh
->
b_lock
)

46 
	`¶ìp_⁄
(&
bh
->
b_waô
);

47 
bh
->
b_lock
=1;

48 
	`°i
();

49 
	}
}

51 
ölöe
 
	$u∆ock_buf„r
(
buf„r_hód
 * 
bh
)

53 i‡(!
bh
->
b_lock
)

54 
	`¥ötk
("ll_rw_block.c: bufferÇotÜocked\n\r");

55 
bh
->
b_lock
 = 0;

56 
	`wake_up
(&
bh
->
b_waô
);

57 
	}
}

64 
	$add_ªque°
(
blk_dev_°ru˘
 * 
dev
, 
ªque°
 * 
ªq
)

66 
ªque°
 * 
tmp
;

68 
ªq
->
√xt
 = 
NULL
;

69 
	`˛i
();

70 i‡(
ªq
->
bh
)

71 
ªq
->
bh
->
b_dút
 = 0;

72 i‡(!(
tmp
 = 
dev
->
cuºít_ªque°
)) {

73 
dev
->
cuºít_ªque°
 = 
ªq
;

74 
	`°i
();

75 (
dev
->
ªque°_‚
)();

78  ; 
tmp
->
√xt
 ;Åmp=tmp->next)

79 i‡((
	`IN_ORDER
(
tmp
,
ªq
) ||

80 !
	`IN_ORDER
(
tmp
,tmp->
√xt
)) &&

81 
	`IN_ORDER
(
ªq
,
tmp
->
√xt
))

83 
ªq
->
√xt
=
tmp
->next;

84 
tmp
->
√xt
=
ªq
;

85 
	`°i
();

86 
	}
}

88 
	$make_ªque°
(
maj‹
,
rw
, 
buf„r_hód
 * 
bh
)

90 
ªque°
 * 
ªq
;

91 
rw_ahód
;

95 i‡((
rw_ahód
 = (
rw
 =
READA
 ||Ñw =
WRITEA
))) {

96 i‡(
bh
->
b_lock
)

98 i‡(
rw
 =
READA
)

99 
rw
 = 
READ
;

101 
rw
 = 
WRITE
;

103 i‡(
rw
!=
READ
 &&Ñw!=
WRITE
)

104 
	`∑nic
("Bad block dev command, must be R/W/RA/WA");

105 
	`lock_buf„r
(
bh
);

106 i‡((
rw
 =
WRITE
 && !
bh
->
b_dút
Ë|| (rw =
READ
 && bh->
b_u±od©e
)) {

107 
	`u∆ock_buf„r
(
bh
);

110 
ª≥©
:

115 i‡(
rw
 =
READ
)

116 
ªq
 = 
ªque°
+
NR_REQUEST
;

118 
ªq
 = 
ªque°
+((
NR_REQUEST
*2)/3);

120 --
ªq
 >
ªque°
)

121 i‡(
ªq
->
dev
<0)

124 i‡(
ªq
 < 
ªque°
) {

125 i‡(
rw_ahód
) {

126 
	`u∆ock_buf„r
(
bh
);

129 
	`¶ìp_⁄
(&
waô_f‹_ªque°
);

130 
ª≥©
;

133 
ªq
->
dev
 = 
bh
->
b_dev
;

134 
ªq
->
cmd
 = 
rw
;

135 
ªq
->
îr‹s
=0;

136 
ªq
->
£˘‹
 = 
bh
->
b_blockƒ
<<1;

137 
ªq
->
ƒ_£˘‹s
 = 2;

138 
ªq
->
buf„r
 = 
bh
->
b_d©a
;

139 
ªq
->
waôög
 = 
NULL
;

140 
ªq
->
bh
 = bh;

141 
ªq
->
√xt
 = 
NULL
;

142 
	`add_ªque°
(
maj‹
+
blk_dev
,
ªq
);

143 
	}
}

145 
	$Œ_rw_block
(
rw
, 
buf„r_hód
 * 
bh
)

147 
maj‹
;

149 i‡((
maj‹
=
	`MAJOR
(
bh
->
b_dev
)Ë>
NR_BLK_DEV
 ||

150 !(
blk_dev
[
maj‹
].
ªque°_‚
)) {

151 
	`¥ötk
("TryingÅoÑeadÇonexistent block-device\n\r");

154 
	`make_ªque°
(
maj‹
,
rw
,
bh
);

155 
	}
}

157 
	$blk_dev_öô
()

159 
i
;

161 
i
=0 ; i<
NR_REQUEST
 ; i++) {

162 
ªque°
[
i
].
dev
 = -1;

163 
ªque°
[
i
].
√xt
 = 
NULL
;

165 
	}
}

	@linux-0.11/kernel/blk_drv/ramdisk.c

7 
	~<°rög.h
>

9 
	~<löux/c⁄fig.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/fs.h
>

12 
	~<löux/kî√l.h
>

13 
	~<asm/sy°em.h
>

14 
	~<asm/£gmít.h
>

15 
	~<asm/mem‹y.h
>

17 
	#MAJOR_NR
 1

	)

18 
	~"blk.h
"

20 *
	grd_°¨t
;

21 
	grd_Àngth
 = 0;

23 
	$do_rd_ªque°
()

25 
Àn
;

26 *
addr
;

28 
INIT_REQUEST
;

29 
addr
 = 
rd_°¨t
 + (
CURRENT
->
£˘‹
 << 9);

30 
Àn
 = 
CURRENT
->
ƒ_£˘‹s
 << 9;

31 i‡((
	`MINOR
(
CURRENT
->
dev
Ë!1Ë|| (
addr
+
Àn
 > 
rd_°¨t
+
rd_Àngth
)) {

32 
	`íd_ªque°
(0);

33 
ª≥©
;

35 i‡(
CURRENT
-> 
cmd
 =
WRITE
) {

36 (Ë
	`mem˝y
(
addr
,

37 
CURRENT
->
buf„r
,

38 
Àn
);

39 } i‡(
CURRENT
->
cmd
 =
READ
) {

40 (Ë
	`mem˝y
(
CURRENT
->
buf„r
,

41 
addr
,

42 
Àn
);

44 
	`∑nic
("unknownÑamdisk-command");

45 
	`íd_ªque°
(1);

46 
ª≥©
;

47 
	}
}

52 
	$rd_öô
(
mem_°¨t
, 
Àngth
)

54 
i
;

55 *
˝
;

57 
blk_dev
[
MAJOR_NR
].
ªque°_‚
 = 
DEVICE_REQUEST
;

58 
rd_°¨t
 = (*Ë
mem_°¨t
;

59 
rd_Àngth
 = 
Àngth
;

60 
˝
 = 
rd_°¨t
;

61 
i
=0; i < 
Àngth
; i++)

62 *
˝
++ = '\0';

63 (
Àngth
);

64 
	}
}

71 
	$rd_lﬂd
()

73 
buf„r_hód
 *
bh
;

74 
su≥r_block
 
s
;

75 
block
 = 256;

76 
i
 = 1;

77 
nblocks
;

78 *
˝
;

80 i‡(!
rd_Àngth
)

82 
	`¥ötk
("Ram disk: %d byãs, sèπögáà0x%x\n", 
rd_Àngth
,

83 (Ë
rd_°¨t
);

84 i‡(
	`MAJOR
(
ROOT_DEV
) != 2)

86 
bh
 = 
	`bªada
(
ROOT_DEV
,
block
+1,block,block+2,-1);

87 i‡(!
bh
) {

88 
	`¥ötk
("DiskÉrror whileÜooking forÑamdisk!\n");

91 *((
d_su≥r_block
 *Ë&
s
Ë*((d_su≥r_block *Ë
bh
->
b_d©a
);

92 
	`bªl£
(
bh
);

93 i‡(
s
.
s_magic
 !
SUPER_MAGIC
)

96 
nblocks
 = 
s
.
s_nz⁄es
 << s.
s_log_z⁄e_size
;

97 i‡(
nblocks
 > (
rd_Àngth
 >> 
BLOCK_SIZE_BITS
)) {

98 
	`¥ötk
("Ram disk imageÅoo big! (%d blocks, %dávail)\n",

99 
nblocks
, 
rd_Àngth
 >> 
BLOCK_SIZE_BITS
);

102 
	`¥ötk
("Loading %d bytes intoÑam disk... 0000k",

103 
nblocks
 << 
BLOCK_SIZE_BITS
);

104 
˝
 = 
rd_°¨t
;

105 
nblocks
) {

106 i‡(
nblocks
 > 2)

107 
bh
 = 
	`bªada
(
ROOT_DEV
, 
block
, block+1, block+2, -1);

109 
bh
 = 
	`bªad
(
ROOT_DEV
, 
block
);

110 i‡(!
bh
) {

111 
	`¥ötk
("I/OÉrror on block %d,ábortingÜoad\n",

112 
block
);

115 (Ë
	`mem˝y
(
˝
, 
bh
->
b_d©a
, 
BLOCK_SIZE
);

116 
	`bªl£
(
bh
);

117 
	`¥ötk
("\010\010\010\010\010%4dk",
i
);

118 
˝
 +
BLOCK_SIZE
;

119 
block
++;

120 
nblocks
--;

121 
i
++;

123 
	`¥ötk
("\010\010\010\010\010done \n");

124 
ROOT_DEV
=0x0101;

125 
	}
}

	@linux-0.11/kernel/chr_drv/console.c

30 
	~<löux/sched.h
>

31 
	~<löux/ây.h
>

32 
	~<asm/io.h
>

33 
	~<asm/sy°em.h
>

39 
	#ORIG_X
 (*(*)0x90000)

	)

40 
	#ORIG_Y
 (*(*)0x90001)

	)

41 
	#ORIG_VIDEO_PAGE
 (*(*)0x90004)

	)

42 
	#ORIG_VIDEO_MODE
 ((*(*)0x90006Ë& 0xff)

	)

43 
	#ORIG_VIDEO_COLS
 (((*(*)0x90006Ë& 0xff00Ë>> 8)

	)

44 
	#ORIG_VIDEO_LINES
 (25)

	)

45 
	#ORIG_VIDEO_EGA_AX
 (*(*)0x90008)

	)

46 
	#ORIG_VIDEO_EGA_BX
 (*(*)0x9000a)

	)

47 
	#ORIG_VIDEO_EGA_CX
 (*(*)0x9000c)

	)

49 
	#VIDEO_TYPE_MDA
 0x10

	)

50 
	#VIDEO_TYPE_CGA
 0x11

	)

51 
	#VIDEO_TYPE_EGAM
 0x20

	)

52 
	#VIDEO_TYPE_EGAC
 0x21

	)

54 
	#NPAR
 16

	)

56 
keybﬂrd_öãºu±
();

58 
	gvideo_ty≥
;

59 
	gvideo_num_cﬁumns
;

60 
	gvideo_size_row
;

61 
	gvideo_num_löes
;

62 
	gvideo_∑ge
;

63 
	gvideo_mem_°¨t
;

64 
	gvideo_mem_íd
;

65 
	gvideo_p‹t_ªg
;

66 
	gvideo_p‹t_vÆ
;

67 
	gvideo_îa£_ch¨
;

69 
	g‹igö
;

70 
	gs¸_íd
;

71 
	gpos
;

72 
	gx
,
	gy
;

73 
	gt›
,
	gbŸtom
;

74 
	g°©e
=0;

75 
	g≈¨
,
	g∑r
[
NPAR
];

76 
	gques
=0;

77 
	g©å
=0x07;

79 
sysbìp
();

85 
	#RESPONSE
 "\033[?1;2c"

	)

88 
ölöe
 
	$gŸoxy
(
√w_x
,
√w_y
)

90 i‡(
√w_x
 > 
video_num_cﬁumns
 || 
√w_y
 >
video_num_löes
)

92 
x
=
√w_x
;

93 
y
=
√w_y
;

94 
pos
=
‹igö
 + 
y
*
video_size_row
 + (
x
<<1);

95 
	}
}

97 
ölöe
 
	$£t_‹igö
()

99 
	`˛i
();

100 
	`outb_p
(12, 
video_p‹t_ªg
);

101 
	`outb_p
(0xff&((
‹igö
-
video_mem_°¨t
)>>9), 
video_p‹t_vÆ
);

102 
	`outb_p
(13, 
video_p‹t_ªg
);

103 
	`outb_p
(0xff&((
‹igö
-
video_mem_°¨t
)>>1), 
video_p‹t_vÆ
);

104 
	`°i
();

105 
	}
}

107 
	$s¸up
()

109 i‡(
video_ty≥
 =
VIDEO_TYPE_EGAC
 || video_ty≥ =
VIDEO_TYPE_EGAM
)

111 i‡(!
t›
 && 
bŸtom
 =
video_num_löes
) {

112 
‹igö
 +
video_size_row
;

113 
pos
 +
video_size_row
;

114 
s¸_íd
 +
video_size_row
;

115 i‡(
s¸_íd
 > 
video_mem_íd
) {

116 
	`__asm__
("cld\n\t"

122 ::"a" (
video_îa£_ch¨
),

123 "c" ((
video_num_löes
-1)*
video_num_cﬁumns
>>1),

124 "D" (
video_mem_°¨t
),

125 "S" (
‹igö
)

127 
s¸_íd
 -
‹igö
-
video_mem_°¨t
;

128 
pos
 -
‹igö
-
video_mem_°¨t
;

129 
‹igö
 = 
video_mem_°¨t
;

131 
	`__asm__
("cld\n\t"

134 ::"a" (
video_îa£_ch¨
),

135 "c" (
video_num_cﬁumns
),

136 "D" (
s¸_íd
-
video_size_row
)

139 
	`£t_‹igö
();

141 
	`__asm__
("cld\n\t"

147 ::"a" (
video_îa£_ch¨
),

148 "c" ((
bŸtom
-
t›
-1)*
video_num_cﬁumns
>>1),

149 "D" (
‹igö
+
video_size_row
*
t›
),

150 "S" (
‹igö
+
video_size_row
*(
t›
+1))

156 
	`__asm__
("cld\n\t"

162 ::"a" (
video_îa£_ch¨
),

163 "c" ((
bŸtom
-
t›
-1)*
video_num_cﬁumns
>>1),

164 "D" (
‹igö
+
video_size_row
*
t›
),

165 "S" (
‹igö
+
video_size_row
*(
t›
+1))

168 
	}
}

170 
	$s¸down
()

172 i‡(
video_ty≥
 =
VIDEO_TYPE_EGAC
 || video_ty≥ =
VIDEO_TYPE_EGAM
)

174 
	`__asm__
("std\n\t"

181 ::"a" (
video_îa£_ch¨
),

182 "c" ((
bŸtom
-
t›
-1)*
video_num_cﬁumns
>>1),

183 "D" (
‹igö
+
video_size_row
*
bŸtom
-4),

184 "S" (
‹igö
+
video_size_row
*(
bŸtom
-1)-4)

189 
	`__asm__
("std\n\t"

196 ::"a" (
video_îa£_ch¨
),

197 "c" ((
bŸtom
-
t›
-1)*
video_num_cﬁumns
>>1),

198 "D" (
‹igö
+
video_size_row
*
bŸtom
-4),

199 "S" (
‹igö
+
video_size_row
*(
bŸtom
-1)-4)

202 
	}
}

204 
	$lf
()

206 i‡(
y
+1<
bŸtom
) {

207 
y
++;

208 
pos
 +
video_size_row
;

211 
	`s¸up
();

212 
	}
}

214 
	$ri
()

216 i‡(
y
>
t›
) {

217 
y
--;

218 
pos
 -
video_size_row
;

221 
	`s¸down
();

222 
	}
}

224 
	$¸
()

226 
pos
 -
x
<<1;

227 
x
=0;

228 
	}
}

230 
	$dñ
()

232 i‡(
x
) {

233 
pos
 -= 2;

234 
x
--;

235 *(*)
pos
 = 
video_îa£_ch¨
;

237 
	}
}

239 
	$csi_J
(
∑r
)

241 
cou¡
;

242 
°¨t
;

244 
∑r
) {

246 
cou¡
 = (
s¸_íd
-
pos
)>>1;

247 
°¨t
 = 
pos
;

250 
cou¡
 = (
pos
-
‹igö
)>>1;

251 
°¨t
 = 
‹igö
;

254 
cou¡
 = 
video_num_cﬁumns
 * 
video_num_löes
;

255 
°¨t
 = 
‹igö
;

260 
	`__asm__
("cld\n\t"

263 ::"c" (
cou¡
),

264 "D" (
°¨t
),"a" (
video_îa£_ch¨
)

266 
	}
}

268 
	$csi_K
(
∑r
)

270 
cou¡
;

271 
°¨t
;

273 
∑r
) {

275 i‡(
x
>=
video_num_cﬁumns
)

277 
cou¡
 = 
video_num_cﬁumns
-
x
;

278 
°¨t
 = 
pos
;

281 
°¨t
 = 
pos
 - (
x
<<1);

282 
cou¡
 = (
x
<
video_num_cﬁumns
)?x:video_num_columns;

285 
°¨t
 = 
pos
 - (
x
<<1);

286 
cou¡
 = 
video_num_cﬁumns
;

291 
	`__asm__
("cld\n\t"

294 ::"c" (
cou¡
),

295 "D" (
°¨t
),"a" (
video_îa£_ch¨
)

297 
	}
}

299 
	$csi_m
()

301 
i
;

303 
i
=0;i<=
≈¨
;i++)

304 
∑r
[
i
]) {

305 0:
©å
=0x07;;

306 1:
©å
=0x0f;;

307 4:
©å
=0x0f;;

308 7:
©å
=0x70;;

309 27:
©å
=0x07;;

311 
	}
}

313 
ölöe
 
	$£t_curs‹
()

315 
	`˛i
();

316 
	`outb_p
(14, 
video_p‹t_ªg
);

317 
	`outb_p
(0xff&((
pos
-
video_mem_°¨t
)>>9), 
video_p‹t_vÆ
);

318 
	`outb_p
(15, 
video_p‹t_ªg
);

319 
	`outb_p
(0xff&((
pos
-
video_mem_°¨t
)>>1), 
video_p‹t_vÆ
);

320 
	`°i
();

321 
	}
}

323 
	$ª•⁄d
(
ây_°ru˘
 * 
ây
)

325 * 
p
 = 
RESPONSE
;

327 
	`˛i
();

328 *
p
) {

329 
	`PUTCH
(*
p
,
ây
->
ªad_q
);

330 
p
++;

332 
	`°i
();

333 
	`c›y_to_cooked
(
ây
);

334 
	}
}

336 
	$ö£π_ch¨
()

338 
i
=
x
;

339 
tmp
, 
ﬁd
 = 
video_îa£_ch¨
;

340 * 
p
 = (*Ë
pos
;

342 
i
++<
video_num_cﬁumns
) {

343 
tmp
=*
p
;

344 *
p
=
ﬁd
;

345 
ﬁd
=
tmp
;

346 
p
++;

348 
	}
}

350 
	$ö£π_löe
()

352 
ﬁdt›
,
ﬁdbŸtom
;

354 
ﬁdt›
=
t›
;

355 
ﬁdbŸtom
=
bŸtom
;

356 
t›
=
y
;

357 
bŸtom
 = 
video_num_löes
;

358 
	`s¸down
();

359 
t›
=
ﬁdt›
;

360 
bŸtom
=
ﬁdbŸtom
;

361 
	}
}

363 
	$dñëe_ch¨
()

365 
i
;

366 * 
p
 = (*Ë
pos
;

368 i‡(
x
>=
video_num_cﬁumns
)

370 
i
 = 
x
;

371 ++
i
 < 
video_num_cﬁumns
) {

372 *
p
 = *(p+1);

373 
p
++;

375 *
p
 = 
video_îa£_ch¨
;

376 
	}
}

378 
	$dñëe_löe
()

380 
ﬁdt›
,
ﬁdbŸtom
;

382 
ﬁdt›
=
t›
;

383 
ﬁdbŸtom
=
bŸtom
;

384 
t›
=
y
;

385 
bŸtom
 = 
video_num_löes
;

386 
	`s¸up
();

387 
t›
=
ﬁdt›
;

388 
bŸtom
=
ﬁdbŸtom
;

389 
	}
}

391 
	$csi_©
(
ƒ
)

393 i‡(
ƒ
 > 
video_num_cﬁumns
)

394 
ƒ
 = 
video_num_cﬁumns
;

395 i‡(!
ƒ
)

396 
ƒ
 = 1;

397 
ƒ
--)

398 
	`ö£π_ch¨
();

399 
	}
}

401 
	$csi_L
(
ƒ
)

403 i‡(
ƒ
 > 
video_num_löes
)

404 
ƒ
 = 
video_num_löes
;

405 i‡(!
ƒ
)

406 
ƒ
 = 1;

407 
ƒ
--)

408 
	`ö£π_löe
();

409 
	}
}

411 
	$csi_P
(
ƒ
)

413 i‡(
ƒ
 > 
video_num_cﬁumns
)

414 
ƒ
 = 
video_num_cﬁumns
;

415 i‡(!
ƒ
)

416 
ƒ
 = 1;

417 
ƒ
--)

418 
	`dñëe_ch¨
();

419 
	}
}

421 
	$csi_M
(
ƒ
)

423 i‡(
ƒ
 > 
video_num_löes
)

424 
ƒ
 = 
video_num_löes
;

425 i‡(!
ƒ
)

426 
ƒ
=1;

427 
ƒ
--)

428 
	`dñëe_löe
();

429 
	}
}

431 
	gßved_x
=0;

432 
	gßved_y
=0;

434 
	$ßve_cur
()

436 
ßved_x
=
x
;

437 
ßved_y
=
y
;

438 
	}
}

440 
	$ª°‹e_cur
()

442 
	`gŸoxy
(
ßved_x
, 
ßved_y
);

443 
	}
}

445 
	$c⁄_wrôe
(
ây_°ru˘
 * 
ây
)

447 
ƒ
;

448 
c
;

450 
ƒ
 = 
	`CHARS
(
ây
->
wrôe_q
);

451 
ƒ
--) {

452 
	`GETCH
(
ây
->
wrôe_q
,
c
);

453 
°©e
) {

455 i‡(
c
>31 && c<127) {

456 i‡(
x
>=
video_num_cﬁumns
) {

457 
x
 -
video_num_cﬁumns
;

458 
pos
 -
video_size_row
;

459 
	`lf
();

461 
	`__asm__
("movbáttr,%%ah\n\t"

463 ::"a" (
c
),"m" (*(*)
pos
)

465 
pos
 += 2;

466 
x
++;

467 } i‡(
c
==27)

468 
°©e
=1;

469 i‡(
c
==10 || c==11 || c==12)

470 
	`lf
();

471 i‡(
c
==13)

472 
	`¸
();

473 i‡(
c
==
	`ERASE_CHAR
(
ây
))

474 
	`dñ
();

475 i‡(
c
==8) {

476 i‡(
x
) {

477 
x
--;

478 
pos
 -= 2;

480 } i‡(
c
==9) {

481 
c
=8-(
x
&7);

482 
x
 +
c
;

483 
pos
 +
c
<<1;

484 i‡(
x
>
video_num_cﬁumns
) {

485 
x
 -
video_num_cﬁumns
;

486 
pos
 -
video_size_row
;

487 
	`lf
();

489 
c
=9;

490 } i‡(
c
==7)

491 
	`sysbìp
();

494 
°©e
=0;

495 i‡(
c
=='[')

496 
°©e
=2;

497 i‡(
c
=='E')

498 
	`gŸoxy
(0,
y
+1);

499 i‡(
c
=='M')

500 
	`ri
();

501 i‡(
c
=='D')

502 
	`lf
();

503 i‡(
c
=='Z')

504 
	`ª•⁄d
(
ây
);

505 i‡(
x
=='7')

506 
	`ßve_cur
();

507 i‡(
x
=='8')

508 
	`ª°‹e_cur
();

511 
≈¨
=0;≈¨<
NPAR
;npar++)

512 
∑r
[
≈¨
]=0;

513 
≈¨
=0;

514 
°©e
=3;

515 i‡((
ques
=(
c
=='?')))

518 i‡(
c
==';' && 
≈¨
<
NPAR
-1) {

519 
≈¨
++;

521 } i‡(
c
>='0' && c<='9') {

522 
∑r
[
≈¨
]=10*∑r[≈¨]+
c
-'0';

524 } 
°©e
=4;

526 
°©e
=0;

527 
c
) {

529 i‡(
∑r
[0])Öar[0]--;

530 
	`gŸoxy
(
∑r
[0],
y
);

533 i‡(!
∑r
[0])Öar[0]++;

534 
	`gŸoxy
(
x
,
y
-
∑r
[0]);

537 i‡(!
∑r
[0])Öar[0]++;

538 
	`gŸoxy
(
x
,
y
+
∑r
[0]);

541 i‡(!
∑r
[0])Öar[0]++;

542 
	`gŸoxy
(
x
+
∑r
[0],
y
);

545 i‡(!
∑r
[0])Öar[0]++;

546 
	`gŸoxy
(
x
-
∑r
[0],
y
);

549 i‡(!
∑r
[0])Öar[0]++;

550 
	`gŸoxy
(0,
y
+
∑r
[0]);

553 i‡(!
∑r
[0])Öar[0]++;

554 
	`gŸoxy
(0,
y
-
∑r
[0]);

557 i‡(
∑r
[0])Öar[0]--;

558 
	`gŸoxy
(
x
,
∑r
[0]);

561 i‡(
∑r
[0])Öar[0]--;

562 i‡(
∑r
[1])Öar[1]--;

563 
	`gŸoxy
(
∑r
[1],par[0]);

566 
	`csi_J
(
∑r
[0]);

569 
	`csi_K
(
∑r
[0]);

572 
	`csi_L
(
∑r
[0]);

575 
	`csi_M
(
∑r
[0]);

578 
	`csi_P
(
∑r
[0]);

581 
	`csi_©
(
∑r
[0]);

584 
	`csi_m
();

587 i‡(
∑r
[0])Öar[0]--;

588 i‡(!
∑r
[1]Ë∑r[1] = 
video_num_löes
;

589 i‡(
∑r
[0] <Öar[1] &&

590 
∑r
[1] <
video_num_löes
) {

591 
t›
=
∑r
[0];

592 
bŸtom
=
∑r
[1];

596 
	`ßve_cur
();

599 
	`ª°‹e_cur
();

604 
	`£t_curs‹
();

605 
	}
}

617 
	$c⁄_öô
()

619 
a
;

620 *
di•œy_desc
 = "????";

621 *
di•œy_±r
;

623 
video_num_cﬁumns
 = 
ORIG_VIDEO_COLS
;

624 
video_size_row
 = 
video_num_cﬁumns
 * 2;

625 
video_num_löes
 = 
ORIG_VIDEO_LINES
;

626 
video_∑ge
 = 
ORIG_VIDEO_PAGE
;

627 
video_îa£_ch¨
 = 0x0720;

629 i‡(
ORIG_VIDEO_MODE
 == 7)

631 
video_mem_°¨t
 = 0xb0000;

632 
video_p‹t_ªg
 = 0x3b4;

633 
video_p‹t_vÆ
 = 0x3b5;

634 i‡((
ORIG_VIDEO_EGA_BX
 & 0xff) != 0x10)

636 
video_ty≥
 = 
VIDEO_TYPE_EGAM
;

637 
video_mem_íd
 = 0xb8000;

638 
di•œy_desc
 = "EGAm";

642 
video_ty≥
 = 
VIDEO_TYPE_MDA
;

643 
video_mem_íd
 = 0xb2000;

644 
di•œy_desc
 = "*MDA";

649 
video_mem_°¨t
 = 0xb8000;

650 
video_p‹t_ªg
 = 0x3d4;

651 
video_p‹t_vÆ
 = 0x3d5;

652 i‡((
ORIG_VIDEO_EGA_BX
 & 0xff) != 0x10)

654 
video_ty≥
 = 
VIDEO_TYPE_EGAC
;

655 
video_mem_íd
 = 0xbc000;

656 
di•œy_desc
 = "EGAc";

660 
video_ty≥
 = 
VIDEO_TYPE_CGA
;

661 
video_mem_íd
 = 0xba000;

662 
di•œy_desc
 = "*CGA";

668 
di•œy_±r
 = ((*)
video_mem_°¨t
Ë+ 
video_size_row
 - 8;

669 *
di•œy_desc
)

671 *
di•œy_±r
++ = *
di•œy_desc
++;

672 
di•œy_±r
++;

677 
‹igö
 = 
video_mem_°¨t
;

678 
s¸_íd
 = 
video_mem_°¨t
 + 
video_num_löes
 * 
video_size_row
;

679 
t›
 = 0;

680 
bŸtom
 = 
video_num_löes
;

682 
	`gŸoxy
(
ORIG_X
,
ORIG_Y
);

683 
	`£t_å≠_g©e
(0x21,&
keybﬂrd_öãºu±
);

684 
	`outb_p
(
	`öb_p
(0x21)&0xfd,0x21);

685 
a
=
	`öb_p
(0x61);

686 
	`outb_p
(
a
|0x80,0x61);

687 
	`outb
(
a
,0x61);

688 
	}
}

691 
	$sysbìp°›
()

694 
	`outb
(
	`öb_p
(0x61)&0xFC, 0x61);

695 
	}
}

697 
	gbìpcou¡
 = 0;

699 
	$sysbìp
()

702 
	`outb_p
(
	`öb_p
(0x61)|3, 0x61);

704 
	`outb_p
(0xB6, 0x43);

706 
	`outb_p
(0x37, 0x42);

707 
	`outb
(0x06, 0x42);

709 
bìpcou¡
 = 
HZ
/8;

710 
	}
}

	@linux-0.11/kernel/chr_drv/keyboard.S

13 
	~<löux/c⁄fig.h
>

15 .
	gãxt


16 .
globl
 
keybﬂrd_öãºu±


21 
	gsize
 = 1024

23 
hód
 = 4

24 
èû
 = 8

25 
¥oc_li°
 = 12

26 
buf
 = 16

28 
mode
: .
byã
 0

29 
Àds
: .
byã
 2

30 
e0
: .
byã
 0

37 
keybﬂrd_öãºu±
:

38 
pushl
 %
óx


39 
pushl
 %
ebx


40 
pushl
 %
ecx


41 
pushl
 %
edx


42 
push
 %
ds


43 
push
 %
es


44 
movl
 
$0x10
,%
óx


45 
	gmov
 %
	gax
,%
ds


46 
	gmov
 %
	gax
,%
es


47 
	gx‹
 %
	gÆ
,%
Æ


48 
öb
 
	g$0x60
,%
Æ


49 
cmpb
 
	g$0xe0
,%
Æ


50 
je
 
£t_e0


51 
cmpb
 
	g$0xe1
,%
Æ


52 
je
 
£t_e1


53 
ˇŒ
 *
key_èbÀ
(,%
óx
,4)

54 
movb
 
	g$0
,
e0


55 
	ge0_e1
: 
öb
 
$0x61
,%
Æ


56 
	gjmp
 1f

57 1: 
jmp
 1f

58 1: 
‹b
 
$0x80
,%
Æ


59 
	gjmp
 1f

60 1: 
jmp
 1f

61 1: 
outb
 %
Æ
,
$0x61


62 
	gjmp
 1f

63 1: 
jmp
 1f

64 1: 
™db
 
$0x7F
,%
Æ


65 
	goutb
 %
	gÆ
,
$0x61


66 
movb
 
	g$0x20
,%
Æ


67 
	goutb
 %
	gÆ
,
$0x20


68 
pushl
 
$0


69 
ˇŒ
 
do_ây_öãºu±


70 
addl
 
	g$4
,%
e•


71 
	gp›
 %
es


72 
	gp›
 %
ds


73 
	gp›l
 %
edx


74 
	gp›l
 %
ecx


75 
	gp›l
 %
ebx


76 
	gp›l
 %
óx


77 
úë


78 
	g£t_e0
: 
movb
 
$1
,
e0


79 
jmp
 
e0_e1


80 
	g£t_e1
: 
movb
 
$2
,
e0


81 
jmp
 
e0_e1


88 
	gput_queue
:

89 
pushl
 %
ecx


90 
pushl
 %
edx


91 
movl
 
èbÀ_li°
,%
	gedx
 #ªad-
queue
 
c⁄sﬁe


92 
movl
 
hód
(%
edx
),%
	gecx


93 1: 
movb
 %
Æ
,
buf
(%
edx
,%
ecx
)

94 
	gö˛
 %
ecx


95 
™dl
 
	g$size
-1,%
ecx


96 
cm∂
 
èû
(%
edx
),%
	gecx
 #buf„∏
	gfuŒ
 - 
disˇrd
 
evîythög


97 
	gje
 3f

98 
shrdl
 
	g$8
,%
	gebx
,%
óx


99 
	gje
 2f

100 
shæ
 
	g$8
,%
ebx


101 
	gjmp
 1b

102 2: 
movl
 %
ecx
,
hód
(%
edx
)

103 
movl
 
¥oc_li°
(%
edx
),%
ecx


104 
	gã°l
 %
	gecx
,%
ecx


105 
	gje
 3f

106 
movl
 
	g$0
,(%
	gecx
)

107 3: 
p›l
 %
edx


108 
p›l
 %
ecx


109 
ªt


111 
˘æ
: 
movb
 
$0x04
,%
Æ


112 
	gjmp
 1f

113 
	gÆt
: 
movb
 
$0x10
,%
	gÆ


114 1: 
cmpb
 
$0
,
e0


115 
	gje
 2f

116 
	gaddb
 %
	gÆ
,%al

117 2: 
‹b
 %
Æ
,
mode


118 
ªt


119 
	gun˘æ
: 
movb
 
$0x04
,%
Æ


120 
	gjmp
 1f

121 
	gu«…
: 
movb
 
$0x10
,%
	gÆ


122 1: 
cmpb
 
$0
,
e0


123 
	gje
 2f

124 
	gaddb
 %
	gÆ
,%al

125 2: 
nŸb
 %
Æ


126 
™db
 %
Æ
,
mode


127 
ªt


129 
	glshi·
:

130 
‹b
 
$0x01
,
mode


131 
ªt


132 
	gu∆shi·
:

133 
™db
 
$0x„
,
mode


134 
ªt


135 
	grshi·
:

136 
‹b
 
$0x02
,
mode


137 
ªt


138 
	guƒshi·
:

139 
™db
 
$0xfd
,
mode


140 
ªt


142 
	gˇps
: 
ã°b
 
$0x80
,
mode


143 
	gj√
 1f

144 
x‹b
 
	g$4
,
Àds


145 
x‹b
 
	g$0x40
,
mode


146 
‹b
 
	g$0x80
,
mode


147 
	g£t_Àds
:

148 
ˇŒ
 
kb_waô


149 
movb
 
$0xed
,%
Æ


150 
	goutb
 %
	gÆ
,
$0x60


151 
ˇŒ
 
kb_waô


152 
movb
 
	gÀds
,%
Æ


153 
	goutb
 %
	gÆ
,
$0x60


154 
ªt


155 
	gunˇps
: 
™db
 
$0x7f
,
mode


156 
ªt


157 
	gs¸ﬁl
:

158 
x‹b
 
$1
,
Àds


159 
jmp
 
£t_Àds


160 
	gnum
: 
x‹b
 
$2
,
Àds


161 
jmp
 
£t_Àds


167 
	gcurs‹
:

168 
subb
 
$0x47
,%
Æ


169 
	gjb
 1f

170 
cmpb
 
	g$12
,%
Æ


171 
	gja
 1f

172 
j√
 
cur2


173 
ã°b
 
	g$0x0c
,
mode


174 
je
 
cur2


175 
ã°b
 
	g$0x30
,
mode


176 
j√
 
ªboŸ


177 
	gcur2
: 
cmpb
 
$0x01
,
e0


178 
je
 
cur


179 
ã°b
 
	g$0x02
,
Àds


180 
je
 
cur


181 
ã°b
 
	g$0x03
,
mode


182 
j√
 
cur


183 
	gx‹l
 %
	gebx
,%
ebx


184 
movb
 
num_èbÀ
(%
óx
),%
Æ


185 
jmp
 
	gput_queue


186 1: 
ªt


188 
cur
: 
movb
 
cur_èbÀ
(%
óx
),%
Æ


189 
cmpb
 
	g$
'9,%al

190 
ja
 
ok_cur


191 
movb
 
	g$
'~,%ah

192 
	gok_cur
: 
shŒ
 
$16
,%
óx


193 
movw
 
	g$0x5b1b
,%
ax


194 
	gx‹l
 %
	gebx
,%
ebx


195 
jmp
 
	gput_queue


197 #i‡
deföed
(
KBD_FR
)

198 
	gnum_èbÀ
:

199 .
ascii
 "789 456 1230."

201 
num_èbÀ
:

202 .
ascii
 "789 456 1230,"

204 
cur_èbÀ
:

205 .
ascii
 "HA5 DGC YB623"

210 
func
:

211 
pushl
 %
óx


212 
pushl
 %
ecx


213 
pushl
 %
edx


214 
ˇŒ
 
show_°©


215 
p›l
 %
edx


216 
p›l
 %
ecx


217 
p›l
 %
óx


218 
subb
 
$0x3B
,%
Æ


219 
jb
 
íd_func


220 
cmpb
 
	g$9
,%
Æ


221 
jbe
 
ok_func


222 
subb
 
	g$18
,%
Æ


223 
cmpb
 
	g$10
,%
Æ


224 
jb
 
íd_func


225 
cmpb
 
	g$11
,%
Æ


226 
ja
 
íd_func


227 
	gok_func
:

228 
cm∂
 
$4
,%
ecx


229 
jl
 
íd_func


230 
movl
 
func_èbÀ
(,%
óx
,4),%eax

231 
	gx‹l
 %
	gebx
,%
ebx


232 
jmp
 
put_queue


233 
	gíd_func
:

234 
ªt


239 
func_èbÀ
:

244 #if 
deföed
(
KBD_FINNISH
)

245 
	gkey_m≠
:

246 .
byã
 0,27

247 .
	gascii
 "1234567890+'"

248 .
	gbyã
 127,9

249 .
	gascii
 "qwertyuiop}"

250 .
	gbyã
 0,13,0

251 .
	gascii
 "asdfghjkl|{"

252 .
	gbyã
 0,0

253 .
	gascii
 "'zxcvbnm,.-"

254 .
	gbyã
 0,'*,0,32 /* 36-39 */

255 .
	gfûl
 16,1,0

256 .
	gbyã
 '-,0,0,0,'+

257 .
	gbyã
 0,0,0,0,0,0,0

258 .
	gbyã
 '<

259 .
	gfûl
 10,1,0

261 
	gshi·_m≠
:

262 .
byã
 0,27

263 .
	gascii
 "!\"#$%&/()=?`"

264 .
	gbyã
 127,9

265 .
	gascii
 "QWERTYUIOP]^"

266 .
	gbyã
 13,0

267 .
	gascii
 "ASDFGHJKL\\["

268 .
	gbyã
 0,0

269 .
	gascii
 "*ZXCVBNM;:_"

270 .
	gbyã
 0,'*,0,32 /* 36-39 */

271 .
	gfûl
 16,1,0

272 .
	gbyã
 '-,0,0,0,'+

273 .
	gbyã
 0,0,0,0,0,0,0

274 .
	gbyã
 '>

275 .
	gfûl
 10,1,0

277 
	gÆt_m≠
:

278 .
byã
 0,0

279 .
	gascii
 "\0@\0$\0\0{[]}\\\0"

280 .
	gbyã
 0,0

281 .
	gbyã
 0,0,0,0,0,0,0,0,0,0,0

282 .
	gbyã
 '~,13,0

283 .
	gbyã
 0,0,0,0,0,0,0,0,0,0,0

284 .
	gbyã
 0,0

285 .
	gbyã
 0,0,0,0,0,0,0,0,0,0,0

286 .
	gbyã
 0,0,0,0

287 .
	gfûl
 16,1,0

288 .
	gbyã
 0,0,0,0,0

289 .
	gbyã
 0,0,0,0,0,0,0

290 .
	gbyã
 '|

291 .
	gfûl
 10,1,0

293 #ñi‡
deföed
(
KBD_US
)

295 
	gkey_m≠
:

296 .
byã
 0,27

297 .
	gascii
 "1234567890-="

298 .
	gbyã
 127,9

299 .
	gascii
 "qwertyuiop[]"

300 .
	gbyã
 13,0

301 .
	gascii
 "asdfghjkl;'"

302 .
	gbyã
 '`,0

303 .
	gascii
 "\\zxcvbnm,./"

304 .
	gbyã
 0,'*,0,32 /* 36-39 */

305 .
	gfûl
 16,1,0

306 .
	gbyã
 '-,0,0,0,'+

307 .
	gbyã
 0,0,0,0,0,0,0

308 .
	gbyã
 '<

309 .
	gfûl
 10,1,0

312 
	gshi·_m≠
:

313 .
byã
 0,27

314 .
	gascii
 "!@#$%^&*()_+"

315 .
	gbyã
 127,9

316 .
	gascii
 "QWERTYUIOP{}"

317 .
	gbyã
 13,0

318 .
	gascii
 "ASDFGHJKL:\""

319 .
	gbyã
 '~,0

320 .
	gascii
 "|ZXCVBNM<>?"

321 .
	gbyã
 0,'*,0,32 /* 36-39 */

322 .
	gfûl
 16,1,0

323 .
	gbyã
 '-,0,0,0,'+

324 .
	gbyã
 0,0,0,0,0,0,0

325 .
	gbyã
 '>

326 .
	gfûl
 10,1,0

328 
	gÆt_m≠
:

329 .
byã
 0,0

330 .
	gascii
 "\0@\0$\0\0{[]}\\\0"

331 .
	gbyã
 0,0

332 .
	gbyã
 0,0,0,0,0,0,0,0,0,0,0

333 .
	gbyã
 '~,13,0

334 .
	gbyã
 0,0,0,0,0,0,0,0,0,0,0

335 .
	gbyã
 0,0

336 .
	gbyã
 0,0,0,0,0,0,0,0,0,0,0

337 .
	gbyã
 0,0,0,0

338 .
	gfûl
 16,1,0

339 .
	gbyã
 0,0,0,0,0

340 .
	gbyã
 0,0,0,0,0,0,0

341 .
	gbyã
 '|

342 .
	gfûl
 10,1,0

344 #ñi‡
deföed
(
KBD_GR
)

346 
	gkey_m≠
:

347 .
byã
 0,27

348 .
	gascii
 "1234567890\\'"

349 .
	gbyã
 127,9

350 .
	gascii
 "qwertzuiop@+"

351 .
	gbyã
 13,0

352 .
	gascii
 "asdfghjkl[]^"

353 .
	gbyã
 0,'#

354 .
	gascii
 "yxcvbnm,.-"

355 .
	gbyã
 0,'*,0,32 /* 36-39 */

356 .
	gfûl
 16,1,0

357 .
	gbyã
 '-,0,0,0,'+

358 .
	gbyã
 0,0,0,0,0,0,0

359 .
	gbyã
 '<

360 .
	gfûl
 10,1,0

363 
	gshi·_m≠
:

364 .
byã
 0,27

365 .
	gascii
 "!\"#$%&/()=?`"

366 .
	gbyã
 127,9

367 .
	gascii
 "QWERTZUIOP\\*"

368 .
	gbyã
 13,0

369 .
	gascii
 "ASDFGHJKL{}~"

370 .
	gbyã
 0,''

371 .
	gascii
 "YXCVBNM;:_"

372 .
	gbyã
 0,'*,0,32 /* 36-39 */

373 .
	gfûl
 16,1,0

374 .
	gbyã
 '-,0,0,0,'+

375 .
	gbyã
 0,0,0,0,0,0,0

376 .
	gbyã
 '>

377 .
	gfûl
 10,1,0

379 
	gÆt_m≠
:

380 .
byã
 0,0

381 .
	gascii
 "\0@\0$\0\0{[]}\\\0"

382 .
	gbyã
 0,0

383 .
	gbyã
 '@,0,0,0,0,0,0,0,0,0,0

384 .
	gbyã
 '~,13,0

385 .
	gbyã
 0,0,0,0,0,0,0,0,0,0,0

386 .
	gbyã
 0,0

387 .
	gbyã
 0,0,0,0,0,0,0,0,0,0,0

388 .
	gbyã
 0,0,0,0

389 .
	gfûl
 16,1,0

390 .
	gbyã
 0,0,0,0,0

391 .
	gbyã
 0,0,0,0,0,0,0

392 .
	gbyã
 '|

393 .
	gfûl
 10,1,0

396 #ñi‡
deföed
(
KBD_FR
)

398 
	gkey_m≠
:

399 .
byã
 0,27

400 .
	gascii
 "&{\"'(-}_/@)="

401 .
	gbyã
 127,9

402 .
	gascii
 "azertyuiop^$"

403 .
	gbyã
 13,0

404 .
	gascii
 "qsdfghjklm|"

405 .
	gbyã
 '`,0,42 /* coö su∞gauche, d⁄'
t
 
	gknow
, [*|
mu
] */

406 .
	gascii
 "wxcvbn,;:!"

407 .
	gbyã
 0,'*,0,32 /* 36-39 */

408 .
	gfûl
 16,1,0

409 .
	gbyã
 '-,0,0,0,'+

410 .
	gbyã
 0,0,0,0,0,0,0

411 .
	gbyã
 '<

412 .
	gfûl
 10,1,0

414 
	gshi·_m≠
:

415 .
byã
 0,27

416 .
	gascii
 "1234567890]+"

417 .
	gbyã
 127,9

418 .
	gascii
 "AZERTYUIOP<>"

419 .
	gbyã
 13,0

420 .
	gascii
 "QSDFGHJKLM%"

421 .
	gbyã
 '~,0,'#
.
	gascii
 "WXCVBN?./\\"

422 .
	gbyã
 0,'*,0,32 /* 36-39 */

423 .
	gfûl
 16,1,0

424 .
	gbyã
 '-,0,0,0,'+

425 .
	gbyã
 0,0,0,0,0,0,0

426 .
	gbyã
 '>

427 .
	gfûl
 10,1,0

429 
	gÆt_m≠
:

430 .
byã
 0,0

431 .
	gascii
 "\0~#{[|`\\^@]}"

432 .
	gbyã
 0,0

433 .
	gbyã
 '@,0,0,0,0,0,0,0,0,0,0

434 .
	gbyã
 '~,13,0

435 .
	gbyã
 0,0,0,0,0,0,0,0,0,0,0

436 .
	gbyã
 0,0

437 .
	gbyã
 0,0,0,0,0,0,0,0,0,0,0

438 .
	gbyã
 0,0,0,0

439 .
	gfûl
 16,1,0

440 .
	gbyã
 0,0,0,0,0

441 .
	gbyã
 0,0,0,0,0,0,0

442 .
	gbyã
 '|

443 .
	gfûl
 10,1,0

452 
	gdo_£lf
:

453 
Àa
 
Æt_m≠
,%
ebx


454 
ã°b
 
	g$0x20
,
mode


455 
	gj√
 1f

456 
Àa
 
	gshi·_m≠
,%
ebx


457 
ã°b
 
	g$0x03
,
mode


458 
	gj√
 1f

459 
Àa
 
	gkey_m≠
,%
	gebx


460 1: 
movb
 (%
ebx
,%
óx
),%
Æ


461 
	g‹b
 %
	gÆ
,%
Æ


462 
je
 
n⁄e


463 
ã°b
 
	g$0x4c
,
mode


464 
	gje
 2f

465 
cmpb
 
	g$
'a,%al

466 
	gjb
 2f

467 
cmpb
 
	g$
'},%al

468 
	gja
 2f

469 
subb
 
	g$32
,%
	gÆ


470 2: 
ã°b
 
$0x0c
,
mode


471 
	gje
 3f

472 
cmpb
 
	g$64
,%
Æ


473 
	gjb
 3f

474 
cmpb
 
	g$64
+32,%
Æ


475 
	gj´
 3f

476 
subb
 
	g$64
,%
	gÆ


477 3: 
ã°b
 
$0x10
,
mode


478 
	gje
 4f

479 
‹b
 
	g$0x80
,%
	gÆ


480 4: 
™dl
 
$0xff
,%
óx


481 
	gx‹l
 %
	gebx
,%
ebx


482 
ˇŒ
 
put_queue


483 
	gn⁄e
: 
ªt


490 
möus
: 
cmpb
 
$1
,
e0


491 
j√
 
do_£lf


492 
movl
 
	g$
'/,%eax

493 
	gx‹l
 %
	gebx
,%
ebx


494 
jmp
 
put_queue


501 
	gkey_èbÀ
:

502 .
n⁄e
,
	gdo_£lf
,do_self,do_self

503 .
	gdo_£lf
,do_self,do_self,do_self

504 .
	gdo_£lf
,do_self,do_self,do_self

505 .
	gdo_£lf
,do_self,do_self,do_self

506 .
	gdo_£lf
,do_self,do_self,do_self

507 .
	gdo_£lf
,do_self,do_self,do_self

508 .
	gdo_£lf
,do_self,do_self,do_self

509 .
	gdo_£lf
,
	g˘æ
,do_self,do_self

510 .
	gdo_£lf
,do_self,do_self,do_self

511 .
	gdo_£lf
,do_self,do_self,do_self

512 .
	gdo_£lf
,do_£lf,
	glshi·
,do_self

513 .
	gdo_£lf
,do_self,do_self,do_self

514 .
	gdo_£lf
,do_self,do_self,do_self

515 .
	gdo_£lf
,
	gmöus
,
	grshi·
,do_self

516 .
	gÆt
,
	gdo_£lf
,
	gˇps
,
	gfunc


517 .
	gfunc
,func,func,func

518 .
	gfunc
,func,func,func

519 .
	gfunc
,
	gnum
,
	gs¸ﬁl
,
	gcurs‹


520 .
	gcurs‹
,curs‹,
	gdo_£lf
,cursor

521 .
	gcurs‹
,curs‹,
	gdo_£lf
,cursor

522 .
	gcurs‹
,cursor,cursor,cursor

523 .
	gn⁄e
,n⁄e,
	gdo_£lf
,
	gfunc


524 .
	gfunc
,
	gn⁄e
,none,none

525 .
	gn⁄e
,none,none,none

526 .
	gn⁄e
,none,none,none

527 .
	gn⁄e
,none,none,none

528 .
	gn⁄e
,none,none,none

529 .
	gn⁄e
,none,none,none

530 .
	gn⁄e
,none,none,none

531 .
	gn⁄e
,none,none,none

532 .
	gn⁄e
,none,none,none

533 .
	gn⁄e
,none,none,none

534 .
	gn⁄e
,none,none,none

535 .
	gn⁄e
,none,none,none

536 .
	gn⁄e
,none,none,none

537 .
	gn⁄e
,none,none,none

538 .
	gn⁄e
,none,none,none

539 .
	gn⁄e
,none,none,none

540 .
	gn⁄e
,none,none,none

541 .
	gn⁄e
,
	gun˘æ
,none,none

542 .
	gn⁄e
,none,none,none

543 .
	gn⁄e
,none,none,none

544 .
	gn⁄e
,n⁄e,
	gu∆shi·
,none

545 .
	gn⁄e
,none,none,none

546 .
	gn⁄e
,none,none,none

547 .
	gn⁄e
,n⁄e,
	guƒshi·
,none

548 .
	gu«…
,
	gn⁄e
,
	gunˇps
,none

549 .
	gn⁄e
,none,none,none

550 .
	gn⁄e
,none,none,none

551 .
	gn⁄e
,none,none,none

552 .
	gn⁄e
,none,none,none

553 .
	gn⁄e
,none,none,none

554 .
	gn⁄e
,none,none,none

555 .
	gn⁄e
,none,none,none

556 .
	gn⁄e
,none,none,none

557 .
	gn⁄e
,none,none,none

558 .
	gn⁄e
,none,none,none

559 .
	gn⁄e
,none,none,none

560 .
	gn⁄e
,none,none,none

561 .
	gn⁄e
,none,none,none

562 .
	gn⁄e
,none,none,none

563 .
	gn⁄e
,none,none,none

564 .
	gn⁄e
,none,none,none

565 .
	gn⁄e
,n⁄e,n⁄e,
n⁄e


571 
	gkb_waô
:

572 
pushl
 %
óx


573 1: 
öb
 
$0x64
,%
Æ


574 
ã°b
 
	g$0x02
,%
Æ


575 
	gj√
 1b

576 
	gp›l
 %
óx


577 
ªt


582 
	gªboŸ
:

583 
ˇŒ
 
kb_waô


584 
movw
 
$0x1234
,0x472

585 
movb
 
	g$0xfc
,%
Æ


586 
	goutb
 %
	gÆ
,
$0x64


587 
	gdõ
: 
jmp
 
dõ


	@linux-0.11/kernel/chr_drv/serial.c

16 
	~<löux/ây.h
>

17 
	~<löux/sched.h
>

18 
	~<asm/sy°em.h
>

19 
	~<asm/io.h
>

21 
	#WAKEUP_CHARS
 (
TTY_BUF_SIZE
/4)

	)

23 
rs1_öãºu±
();

24 
rs2_öãºu±
();

26 
	$öô
(
p‹t
)

28 
	`outb_p
(0x80,
p‹t
+3);

29 
	`outb_p
(0x30,
p‹t
);

30 
	`outb_p
(0x00,
p‹t
+1);

31 
	`outb_p
(0x03,
p‹t
+3);

32 
	`outb_p
(0x0b,
p‹t
+4);

33 
	`outb_p
(0x0d,
p‹t
+1);

34 ()
	`öb
(
p‹t
);

35 
	}
}

37 
	$rs_öô
()

39 
	`£t_öå_g©e
(0x24,
rs1_öãºu±
);

40 
	`£t_öå_g©e
(0x23,
rs2_öãºu±
);

41 
	`öô
(
ây_èbÀ
[1].
ªad_q
.
d©a
);

42 
	`öô
(
ây_èbÀ
[2].
ªad_q
.
d©a
);

43 
	`outb
(
	`öb_p
(0x21)&0xE7,0x21);

44 
	}
}

53 
	$rs_wrôe
(
ây_°ru˘
 * 
ây
)

55 
	`˛i
();

56 i‡(!
	`EMPTY
(
ây
->
wrôe_q
))

57 
	`outb
(
	`öb_p
(
ây
->
wrôe_q
.
d©a
+1)|0x02,tty->write_q.data+1);

58 
	`°i
();

59 
	}
}

	@linux-0.11/kernel/chr_drv/tty_io.c

13 
	~<˘y≥.h
>

14 
	~<î∫o.h
>

15 
	~<sig«l.h
>

17 
	#ALRMMASK
 (1<<(
SIGALRM
-1))

	)

18 
	#KILLMASK
 (1<<(
SIGKILL
-1))

	)

19 
	#INTMASK
 (1<<(
SIGINT
-1))

	)

20 
	#QUITMASK
 (1<<(
SIGQUIT
-1))

	)

21 
	#TSTPMASK
 (1<<(
SIGTSTP
-1))

	)

23 
	~<löux/sched.h
>

24 
	~<löux/ây.h
>

25 
	~<asm/£gmít.h
>

26 
	~<asm/sy°em.h
>

28 
	#_L_FLAG
(
ây
,
f
Ë(—ty)->
ãrmios
.
c_lÊag
 & f)

	)

29 
	#_I_FLAG
(
ây
,
f
Ë(—ty)->
ãrmios
.
c_iÊag
 & f)

	)

30 
	#_O_FLAG
(
ây
,
f
Ë(—ty)->
ãrmios
.
c_oÊag
 & f)

	)

32 
	#L_CANON
(
ây
Ë
	`_L_FLAG
(—ty),
ICANON
)

	)

33 
	#L_ISIG
(
ây
Ë
	`_L_FLAG
(—ty),
ISIG
)

	)

34 
	#L_ECHO
(
ây
Ë
	`_L_FLAG
(—ty),
ECHO
)

	)

35 
	#L_ECHOE
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOE
)

	)

36 
	#L_ECHOK
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOK
)

	)

37 
	#L_ECHOCTL
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOCTL
)

	)

38 
	#L_ECHOKE
(
ây
Ë
	`_L_FLAG
(—ty),
ECHOKE
)

	)

40 
	#I_UCLC
(
ây
Ë
	`_I_FLAG
(—ty),
IUCLC
)

	)

41 
	#I_NLCR
(
ây
Ë
	`_I_FLAG
(—ty),
INLCR
)

	)

42 
	#I_CRNL
(
ây
Ë
	`_I_FLAG
(—ty),
ICRNL
)

	)

43 
	#I_NOCR
(
ây
Ë
	`_I_FLAG
(—ty),
IGNCR
)

	)

45 
	#O_POST
(
ây
Ë
	`_O_FLAG
(—ty),
OPOST
)

	)

46 
	#O_NLCR
(
ây
Ë
	`_O_FLAG
(—ty),
ONLCR
)

	)

47 
	#O_CRNL
(
ây
Ë
	`_O_FLAG
(—ty),
OCRNL
)

	)

48 
	#O_NLRET
(
ây
Ë
	`_O_FLAG
(—ty),
ONLRET
)

	)

49 
	#O_LCUC
(
ây
Ë
	`_O_FLAG
(—ty),
OLCUC
)

	)

51 
ây_°ru˘
 
	gây_èbÀ
[] = {

53 {
ICRNL
,

54 
OPOST
|
ONLCR
,

56 
ISIG
 | 
ICANON
 | 
ECHO
 | 
ECHOCTL
 | 
ECHOKE
,

58 
INIT_C_CC
},

61 
c⁄_wrôe
,

68 
B2400
 | 
CS8
,

71 
INIT_C_CC
},

74 
rs_wrôe
,

81 
B2400
 | 
CS8
,

84 
INIT_C_CC
},

87 
rs_wrôe
,

99 
ây_queue
 * 
	gèbÀ_li°
[]={

100 &
ây_èbÀ
[0].
ªad_q
, &ây_èbÀ[0].
wrôe_q
,

101 &
ây_èbÀ
[1].
ªad_q
, &ây_èbÀ[1].
wrôe_q
,

102 &
ây_èbÀ
[2].
ªad_q
, &ây_èbÀ[2].
wrôe_q


105 
	$ây_öô
()

107 
	`rs_öô
();

108 
	`c⁄_öô
();

109 
	}
}

111 
	$ây_öå
(
ây_°ru˘
 * 
ây
, 
mask
)

113 
i
;

115 i‡(
ây
->
pgΩ
 <= 0)

117 
i
=0;i<
NR_TASKS
;i++)

118 i‡(
èsk
[
i
] &&Åask[i]->
pgΩ
==
ây
->pgrp)

119 
èsk
[
i
]->
sig«l
 |
mask
;

120 
	}
}

122 
	$¶ìp_if_em±y
(
ây_queue
 * 
queue
)

124 
	`˛i
();

125 !
cuºít
->
sig«l
 && 
	`EMPTY
(*
queue
))

126 
	`öãºu±ibÀ_¶ìp_⁄
(&
queue
->
¥oc_li°
);

127 
	`°i
();

128 
	}
}

130 
	$¶ìp_if_fuŒ
(
ây_queue
 * 
queue
)

132 i‡(!
	`FULL
(*
queue
))

134 
	`˛i
();

135 !
cuºít
->
sig«l
 && 
	`LEFT
(*
queue
)<128)

136 
	`öãºu±ibÀ_¶ìp_⁄
(&
queue
->
¥oc_li°
);

137 
	`°i
();

138 
	}
}

140 
	$waô_f‹_key¥ess
()

142 
	`¶ìp_if_em±y
(&
ây_èbÀ
[0].
£c⁄d¨y
);

143 
	}
}

145 
	$c›y_to_cooked
(
ây_°ru˘
 * 
ây
)

147 sig√d 
c
;

149 !
	`EMPTY
(
ây
->
ªad_q
Ë&& !
	`FULL
—ty->
£c⁄d¨y
)) {

150 
	`GETCH
(
ây
->
ªad_q
,
c
);

151 i‡(
c
==13)

152 i‡(
	`I_CRNL
(
ây
))

153 
c
=10;

154 i‡(
	`I_NOCR
(
ây
))

157 i‡(
c
==10 && 
	`I_NLCR
(
ây
))

158 
c
=13;

159 i‡(
	`I_UCLC
(
ây
))

160 
c
=
	`tﬁowî
(c);

161 i‡(
	`L_CANON
(
ây
)) {

162 i‡(
c
==
	`KILL_CHAR
(
ây
)) {

164 !(
	`EMPTY
(
ây
->
£c⁄d¨y
) ||

165 (
c
=
	`LAST
(
ây
->
£c⁄d¨y
))==10 ||

166 
c
==
	`EOF_CHAR
(
ây
))) {

167 i‡(
	`L_ECHO
(
ây
)) {

168 i‡(
c
<32)

169 
	`PUTCH
(127,
ây
->
wrôe_q
);

170 
	`PUTCH
(127,
ây
->
wrôe_q
);

171 
ây
->
	`wrôe
(tty);

173 
	`DEC
(
ây
->
£c⁄d¨y
.
hód
);

177 i‡(
c
==
	`ERASE_CHAR
(
ây
)) {

178 i‡(
	`EMPTY
(
ây
->
£c⁄d¨y
) ||

179 (
c
=
	`LAST
(
ây
->
£c⁄d¨y
))==10 ||

180 
c
==
	`EOF_CHAR
(
ây
))

182 i‡(
	`L_ECHO
(
ây
)) {

183 i‡(
c
<32)

184 
	`PUTCH
(127,
ây
->
wrôe_q
);

185 
	`PUTCH
(127,
ây
->
wrôe_q
);

186 
ây
->
	`wrôe
(tty);

188 
	`DEC
(
ây
->
£c⁄d¨y
.
hód
);

191 i‡(
c
==
	`STOP_CHAR
(
ây
)) {

192 
ây
->
°›≥d
=1;

195 i‡(
c
==
	`START_CHAR
(
ây
)) {

196 
ây
->
°›≥d
=0;

200 i‡(
	`L_ISIG
(
ây
)) {

201 i‡(
c
==
	`INTR_CHAR
(
ây
)) {

202 
	`ây_öå
(
ây
,
INTMASK
);

205 i‡(
c
==
	`QUIT_CHAR
(
ây
)) {

206 
	`ây_öå
(
ây
,
QUITMASK
);

210 i‡(
c
==10 || c==
	`EOF_CHAR
(
ây
))

211 
ây
->
£c⁄d¨y
.
d©a
++;

212 i‡(
	`L_ECHO
(
ây
)) {

213 i‡(
c
==10) {

214 
	`PUTCH
(10,
ây
->
wrôe_q
);

215 
	`PUTCH
(13,
ây
->
wrôe_q
);

216 } i‡(
c
<32) {

217 i‡(
	`L_ECHOCTL
(
ây
)) {

218 
	`PUTCH
('^',
ây
->
wrôe_q
);

219 
	`PUTCH
(
c
+64,
ây
->
wrôe_q
);

222 
	`PUTCH
(
c
,
ây
->
wrôe_q
);

223 
ây
->
	`wrôe
(tty);

225 
	`PUTCH
(
c
,
ây
->
£c⁄d¨y
);

227 
	`wake_up
(&
ây
->
£c⁄d¨y
.
¥oc_li°
);

228 
	}
}

230 
	$ây_ªad
(
ch™√l
, * 
buf
, 
ƒ
)

232 
ây_°ru˘
 * 
ây
;

233 
c
, * 
b
=
buf
;

234 
möimum
,
time
,
Êag
=0;

235 
ﬁdÆ¨m
;

237 i‡(
ch™√l
>2 || 
ƒ
<0)  -1;

238 
ây
 = &
ây_èbÀ
[
ch™√l
];

239 
ﬁdÆ¨m
 = 
cuºít
->
Æ¨m
;

240 
time
 = 10L*
ây
->
ãrmios
.
c_cc
[
VTIME
];

241 
möimum
 = 
ây
->
ãrmios
.
c_cc
[
VMIN
];

242 i‡(
time
 && !
möimum
) {

243 
möimum
=1;

244 i‡((
Êag
=(!
ﬁdÆ¨m
 || 
time
+
jiffõs
<oldalarm)))

245 
cuºít
->
Æ¨m
 = 
time
+
jiffõs
;

247 i‡(
möimum
>
ƒ
)

248 
möimum
=
ƒ
;

249 
ƒ
>0) {

250 i‡(
Êag
 && (
cuºít
->
sig«l
 & 
ALRMMASK
)) {

251 
cuºít
->
sig«l
 &~
ALRMMASK
;

254 i‡(
cuºít
->
sig«l
)

256 i‡(
	`EMPTY
(
ây
->
£c⁄d¨y
Ë|| (
	`L_CANON
(tty) &&

257 !
ây
->
£c⁄d¨y
.
d©a
 && 
	`LEFT
(tty->secondary)>20)) {

258 
	`¶ìp_if_em±y
(&
ây
->
£c⁄d¨y
);

262 
	`GETCH
(
ây
->
£c⁄d¨y
,
c
);

263 i‡(
c
==
	`EOF_CHAR
(
ây
) || c==10)

264 
ây
->
£c⁄d¨y
.
d©a
--;

265 i‡(
c
==
	`EOF_CHAR
(
ây
Ë&& 
	`L_CANON
(tty))

266  (
b
-
buf
);

268 
	`put_fs_byã
(
c
,
b
++);

269 i‡(!--
ƒ
)

272 } 
ƒ
>0 && !
	`EMPTY
(
ây
->
£c⁄d¨y
));

273 i‡(
time
 && !
	`L_CANON
(
ây
)) {

274 i‡((
Êag
=(!
ﬁdÆ¨m
 || 
time
+
jiffõs
<oldalarm)))

275 
cuºít
->
Æ¨m
 = 
time
+
jiffõs
;

277 
cuºít
->
Æ¨m
 = 
ﬁdÆ¨m
;

279 i‡(
	`L_CANON
(
ây
)) {

280 i‡(
b
-
buf
)

282 } i‡(
b
-
buf
 >
möimum
)

285 
cuºít
->
Æ¨m
 = 
ﬁdÆ¨m
;

286 i‡(
cuºít
->
sig«l
 && !(
b
-
buf
))

287  -
EINTR
;

288  (
b
-
buf
);

289 
	}
}

291 
	$ây_wrôe
(
ch™√l
, * 
buf
, 
ƒ
)

293 
¸_Êag
=0;

294 
ây_°ru˘
 * 
ây
;

295 
c
, *
b
=
buf
;

297 i‡(
ch™√l
>2 || 
ƒ
<0)  -1;

298 
ây
 = 
ch™√l
 + 
ây_èbÀ
;

299 
ƒ
>0) {

300 
	`¶ìp_if_fuŒ
(&
ây
->
wrôe_q
);

301 i‡(
cuºít
->
sig«l
)

303 
ƒ
>0 && !
	`FULL
(
ây
->
wrôe_q
)) {

304 
c
=
	`gë_fs_byã
(
b
);

305 i‡(
	`O_POST
(
ây
)) {

306 i‡(
c
=='\r' && 
	`O_CRNL
(
ây
))

307 
c
='\n';

308 i‡(
c
=='\n' && 
	`O_NLRET
(
ây
))

309 
c
='\r';

310 i‡(
c
=='\n' && !
¸_Êag
 && 
	`O_NLCR
(
ây
)) {

311 
¸_Êag
 = 1;

312 
	`PUTCH
(13,
ây
->
wrôe_q
);

315 i‡(
	`O_LCUC
(
ây
))

316 
c
=
	`touµî
(c);

318 
b
++; 
ƒ
--;

319 
¸_Êag
 = 0;

320 
	`PUTCH
(
c
,
ây
->
wrôe_q
);

322 
ây
->
	`wrôe
(tty);

323 i‡(
ƒ
>0)

324 
	`scheduÀ
();

326  (
b
-
buf
);

327 
	}
}

343 
	$do_ây_öãºu±
(
ây
)

345 
	`c›y_to_cooked
(
ây_èbÀ
+
ây
);

346 
	}
}

348 
	$chr_dev_öô
()

350 
	}
}

	@linux-0.11/kernel/chr_drv/tty_ioctl.c

7 
	~<î∫o.h
>

8 
	~<ãrmios.h
>

10 
	~<löux/sched.h
>

11 
	~<löux/kî√l.h
>

12 
	~<löux/ây.h
>

14 
	~<asm/io.h
>

15 
	~<asm/£gmít.h
>

16 
	~<asm/sy°em.h
>

18 
	gquŸõ¡
[] = {

24 
	$ch™ge_•ìd
(
ây_°ru˘
 * 
ây
)

26 
p‹t
,
quŸ
;

28 i‡(!(
p‹t
 = 
ây
->
ªad_q
.
d©a
))

30 
quŸ
 = 
quŸõ¡
[
ây
->
ãrmios
.
c_cÊag
 & 
CBAUD
];

31 
	`˛i
();

32 
	`outb_p
(0x80,
p‹t
+3);

33 
	`outb_p
(
quŸ
 & 0xff,
p‹t
);

34 
	`outb_p
(
quŸ
 >> 8,
p‹t
+1);

35 
	`outb
(0x03,
p‹t
+3);

36 
	`°i
();

37 
	}
}

39 
	$Êush
(
ây_queue
 * 
queue
)

41 
	`˛i
();

42 
queue
->
hód
 = queue->
èû
;

43 
	`°i
();

44 
	}
}

46 
	$waô_u¡û_£¡
(
ây_°ru˘
 * 
ây
)

49 
	}
}

51 
	$£nd_bªak
(
ây_°ru˘
 * 
ây
)

54 
	}
}

56 
	$gë_ãrmios
(
ây_°ru˘
 * 
ây
, 
ãrmios
 *Åermios)

58 
i
;

60 
	`vîify_¨ó
(
ãrmios
,  (*termios));

61 
i
=0 ; i< ( (*
ãrmios
)) ; i++)

62 
	`put_fs_byã
–((*)&
ây
->
ãrmios
)[
i
] , i+(*)termios );

64 
	}
}

66 
	$£t_ãrmios
(
ây_°ru˘
 * 
ây
, 
ãrmios
 *Åermios)

68 
i
;

70 
i
=0 ; i< ( (*
ãrmios
)) ; i++)

71 ((*)&
ây
->
ãrmios
)[
i
]=
	`gë_fs_byã
(i+(*)termios);

72 
	`ch™ge_•ìd
(
ây
);

74 
	}
}

76 
	$gë_ãrmio
(
ây_°ru˘
 * 
ây
, 
ãrmio
 *Åermio)

78 
i
;

79 
ãrmio
 
tmp_ãrmio
;

81 
	`vîify_¨ó
(
ãrmio
,  (*termio));

82 
tmp_ãrmio
.
c_iÊag
 = 
ây
->
ãrmios
.c_iflag;

83 
tmp_ãrmio
.
c_oÊag
 = 
ây
->
ãrmios
.c_oflag;

84 
tmp_ãrmio
.
c_cÊag
 = 
ây
->
ãrmios
.c_cflag;

85 
tmp_ãrmio
.
c_lÊag
 = 
ây
->
ãrmios
.c_lflag;

86 
tmp_ãrmio
.
c_löe
 = 
ây
->
ãrmios
.c_line;

87 
i
=0 ; i < 
NCC
 ; i++)

88 
tmp_ãrmio
.
c_cc
[
i
] = 
ây
->
ãrmios
.c_cc[i];

89 
i
=0 ; i< ( (*
ãrmio
)) ; i++)

90 
	`put_fs_byã
–((*)&
tmp_ãrmio
)[
i
] , i+(*)
ãrmio
 );

92 
	}
}

97 
	$£t_ãrmio
(
ây_°ru˘
 * 
ây
, 
ãrmio
 *Åermio)

99 
i
;

100 
ãrmio
 
tmp_ãrmio
;

102 
i
=0 ; i< ( (*
ãrmio
)) ; i++)

103 ((*)&
tmp_ãrmio
)[
i
]=
	`gë_fs_byã
(i+(*)
ãrmio
);

104 *(*)&
ây
->
ãrmios
.
c_iÊag
 = 
tmp_ãrmio
.c_iflag;

105 *(*)&
ây
->
ãrmios
.
c_oÊag
 = 
tmp_ãrmio
.c_oflag;

106 *(*)&
ây
->
ãrmios
.
c_cÊag
 = 
tmp_ãrmio
.c_cflag;

107 *(*)&
ây
->
ãrmios
.
c_lÊag
 = 
tmp_ãrmio
.c_lflag;

108 
ây
->
ãrmios
.
c_löe
 = 
tmp_ãrmio
.c_line;

109 
i
=0 ; i < 
NCC
 ; i++)

110 
ây
->
ãrmios
.
c_cc
[
i
] = 
tmp_ãrmio
.c_cc[i];

111 
	`ch™ge_•ìd
(
ây
);

113 
	}
}

115 
	$ây_io˘l
(
dev
, 
cmd
, 
¨g
)

117 
ây_°ru˘
 * 
ây
;

118 i‡(
	`MAJOR
(
dev
) == 5) {

119 
dev
=
cuºít
->
ây
;

120 i‡(
dev
<0)

121 
	`∑nic
("tty_ioctl: dev<0");

123 
dev
=
	`MINOR
(dev);

124 
ây
 = 
dev
 + 
ây_èbÀ
;

125 
cmd
) {

126 
TCGETS
:

127  
	`gë_ãrmios
(
ây
,(
ãrmios
 *Ë
¨g
);

128 
TCSETSF
:

129 
	`Êush
(&
ây
->
ªad_q
);

130 
TCSETSW
:

131 
	`waô_u¡û_£¡
(
ây
);

132 
TCSETS
:

133  
	`£t_ãrmios
(
ây
,(
ãrmios
 *Ë
¨g
);

134 
TCGETA
:

135  
	`gë_ãrmio
(
ây
,(
ãrmio
 *Ë
¨g
);

136 
TCSETAF
:

137 
	`Êush
(&
ây
->
ªad_q
);

138 
TCSETAW
:

139 
	`waô_u¡û_£¡
(
ây
);

140 
TCSETA
:

141  
	`£t_ãrmio
(
ây
,(
ãrmio
 *Ë
¨g
);

142 
TCSBRK
:

143 i‡(!
¨g
) {

144 
	`waô_u¡û_£¡
(
ây
);

145 
	`£nd_bªak
(
ây
);

148 
TCXONC
:

149  -
EINVAL
;

150 
TCFLSH
:

151 i‡(
¨g
==0)

152 
	`Êush
(&
ây
->
ªad_q
);

153 i‡(
¨g
==1)

154 
	`Êush
(&
ây
->
wrôe_q
);

155 i‡(
¨g
==2) {

156 
	`Êush
(&
ây
->
ªad_q
);

157 
	`Êush
(&
ây
->
wrôe_q
);

159  -
EINVAL
;

161 
TIOCEXCL
:

162  -
EINVAL
;

163 
TIOCNXCL
:

164  -
EINVAL
;

165 
TIOCSCTTY
:

166  -
EINVAL
;

167 
TIOCGPGRP
:

168 
	`vîify_¨ó
((*Ë
¨g
,4);

169 
	`put_fs_l⁄g
(
ây
->
pgΩ
,(*Ë
¨g
);

171 
TIOCSPGRP
:

172 
ây
->
pgΩ
=
	`gë_fs_l⁄g
((*Ë
¨g
);

174 
TIOCOUTQ
:

175 
	`vîify_¨ó
((*Ë
¨g
,4);

176 
	`put_fs_l⁄g
(
	`CHARS
(
ây
->
wrôe_q
),(*Ë
¨g
);

178 
TIOCINQ
:

179 
	`vîify_¨ó
((*Ë
¨g
,4);

180 
	`put_fs_l⁄g
(
	`CHARS
(
ây
->
£c⁄d¨y
),

181 (*Ë
¨g
);

183 
TIOCSTI
:

184  -
EINVAL
;

185 
TIOCGWINSZ
:

186  -
EINVAL
;

187 
TIOCSWINSZ
:

188  -
EINVAL
;

189 
TIOCMGET
:

190  -
EINVAL
;

191 
TIOCMBIS
:

192  -
EINVAL
;

193 
TIOCMBIC
:

194  -
EINVAL
;

195 
TIOCMSET
:

196  -
EINVAL
;

197 
TIOCGSOFTCAR
:

198  -
EINVAL
;

199 
TIOCSSOFTCAR
:

200  -
EINVAL
;

202  -
EINVAL
;

204 
	}
}

	@linux-0.11/kernel/exit.c

7 
	~<î∫o.h
>

8 
	~<sig«l.h
>

9 
	~<sys/waô.h
>

11 
	~<löux/sched.h
>

12 
	~<löux/kî√l.h
>

13 
	~<löux/ây.h
>

14 
	~<asm/£gmít.h
>

16 
sys_∑u£
();

17 
sys_˛o£
(
fd
);

19 
	$ªÀa£
(
èsk_°ru˘
 * 
p
)

21 
i
;

23 i‡(!
p
)

25 
i
=1 ; i<
NR_TASKS
 ; i++)

26 i‡(
èsk
[
i
]==
p
) {

27 
èsk
[
i
]=
NULL
;

28 
	`‰ì_∑ge
(()
p
);

29 
	`scheduÀ
();

32 
	`∑nic
("tryingÅoÑeleaseÇon-existentÅask");

33 
	}
}

35 
ölöe
 
	$£nd_sig
(
sig
,
èsk_°ru˘
 * 
p
,
¥iv
)

37 i‡(!
p
 || 
sig
<1 || sig>32)

38  -
EINVAL
;

39 i‡(
¥iv
 || (
cuºít
->
euid
==
p
->euidË|| 
	`su£r
())

40 
p
->
sig«l
 |(1<<(
sig
-1));

42  -
EPERM
;

44 
	}
}

46 
	$kûl_£ssi⁄
()

48 
èsk_°ru˘
 **
p
 = 
NR_TASKS
 + 
èsk
;

50 --
p
 > &
FIRST_TASK
) {

51 i‡(*
p
 && (*p)->
£ssi⁄
 =
cuºít
->session)

52 (*
p
)->
sig«l
 |1<<(
SIGHUP
-1);

54 
	}
}

60 
	$sys_kûl
(
pid
,
sig
)

62 
èsk_°ru˘
 **
p
 = 
NR_TASKS
 + 
èsk
;

63 
îr
, 
ªtvÆ
 = 0;

65 i‡(!
pid
Ë--
p
 > &
FIRST_TASK
) {

66 i‡(*
p
 && (*p)->
pgΩ
 =
cuºít
->
pid
)

67 i‡((
îr
=
	`£nd_sig
(
sig
,*
p
,1)))

68 
ªtvÆ
 = 
îr
;

69 } i‡(
pid
>0Ë--
p
 > &
FIRST_TASK
) {

70 i‡(*
p
 && (*p)->
pid
 ==Öid)

71 i‡((
îr
=
	`£nd_sig
(
sig
,*
p
,0)))

72 
ªtvÆ
 = 
îr
;

73 } i‡(
pid
 =-1Ë--
p
 > &
FIRST_TASK
) {

74 i‡((
îr
 = 
	`£nd_sig
(
sig
,*
p
,0)))

75 
ªtvÆ
 = 
îr
;

76 } --
p
 > &
FIRST_TASK
)

77 i‡(*
p
 && (*p)->
pgΩ
 =-
pid
)

78 i‡((
îr
 = 
	`£nd_sig
(
sig
,*
p
,0)))

79 
ªtvÆ
 = 
îr
;

80  
ªtvÆ
;

81 
	}
}

83 
	$ãŒ_Áthî
(
pid
)

85 
i
;

87 i‡(
pid
)

88 
i
=0;i<
NR_TASKS
;i++) {

89 i‡(!
èsk
[
i
])

91 i‡(
èsk
[
i
]->
pid
 !=Öid)

93 
èsk
[
i
]->
sig«l
 |(1<<(
SIGCHLD
-1));

98 
	`¥ötk
("BAD BAD -Ço father found\n\r");

99 
	`ªÀa£
(
cuºít
);

100 
	}
}

102 
	$do_exô
(
code
)

104 
i
;

105 
	`‰ì_∑ge_èbÀs
(
	`gë_ba£
(
cuºít
->
ldt
[1]),
	`gë_limô
(0x0f));

106 
	`‰ì_∑ge_èbÀs
(
	`gë_ba£
(
cuºít
->
ldt
[2]),
	`gë_limô
(0x17));

107 
i
=0 ; i<
NR_TASKS
 ; i++)

108 i‡(
èsk
[
i
] &&Åask[i]->
Áthî
 =
cuºít
->
pid
) {

109 
èsk
[
i
]->
Áthî
 = 1;

110 i‡(
èsk
[
i
]->
°©e
 =
TASK_ZOMBIE
)

112 (Ë
	`£nd_sig
(
SIGCHLD
, 
èsk
[1], 1);

114 
i
=0 ; i<
NR_OPEN
 ; i++)

115 i‡(
cuºít
->
fûp
[
i
])

116 
	`sys_˛o£
(
i
);

117 
	`ùut
(
cuºít
->
pwd
);

118 
cuºít
->
pwd
=
NULL
;

119 
	`ùut
(
cuºít
->
roŸ
);

120 
cuºít
->
roŸ
=
NULL
;

121 
	`ùut
(
cuºít
->
execuèbÀ
);

122 
cuºít
->
execuèbÀ
=
NULL
;

123 i‡(
cuºít
->
Àadî
 && cuºít->
ây
 >= 0)

124 
ây_èbÀ
[
cuºít
->
ây
].
pgΩ
 = 0;

125 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

126 
œ°_èsk_u£d_m©h
 = 
NULL
;

127 i‡(
cuºít
->
Àadî
)

128 
	`kûl_£ssi⁄
();

129 
cuºít
->
°©e
 = 
TASK_ZOMBIE
;

130 
cuºít
->
exô_code
 = 
code
;

131 
	`ãŒ_Áthî
(
cuºít
->
Áthî
);

132 
	`scheduÀ
();

134 
	}
}

136 
	$sys_exô
(
îr‹_code
)

138  
	`do_exô
((
îr‹_code
&0xff)<<8);

139 
	}
}

141 
	$sys_waôpid
(
pid_t
 
pid
,* 
°©_addr
, 
›ti⁄s
)

143 
Êag
, 
code
;

144 
èsk_°ru˘
 ** 
p
;

146 
	`vîify_¨ó
(
°©_addr
,4);

147 
ª≥©
:

148 
Êag
=0;

149 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p) {

150 i‡(!*
p
 || *∞=
cuºít
)

152 i‡((*
p
)->
Áthî
 !
cuºít
->
pid
)

154 i‡(
pid
>0) {

155 i‡((*
p
)->
pid
 !=Öid)

157 } i‡(!
pid
) {

158 i‡((*
p
)->
pgΩ
 !
cuºít
->pgrp)

160 } i‡(
pid
 != -1) {

161 i‡((*
p
)->
pgΩ
 !-
pid
)

164 (*
p
)->
°©e
) {

165 
TASK_STOPPED
:

166 i‡(!(
›ti⁄s
 & 
WUNTRACED
))

168 
	`put_fs_l⁄g
(0x7f,
°©_addr
);

169  (*
p
)->
pid
;

170 
TASK_ZOMBIE
:

171 
cuºít
->
cutime
 +(*
p
)->
utime
;

172 
cuºít
->
c°ime
 +(*
p
)->
°ime
;

173 
Êag
 = (*
p
)->
pid
;

174 
code
 = (*
p
)->
exô_code
;

175 
	`ªÀa£
(*
p
);

176 
	`put_fs_l⁄g
(
code
,
°©_addr
);

177  
Êag
;

179 
Êag
=1;

183 i‡(
Êag
) {

184 i‡(
›ti⁄s
 & 
WNOHANG
)

186 
cuºít
->
°©e
=
TASK_INTERRUPTIBLE
;

187 
	`scheduÀ
();

188 i‡(!(
cuºít
->
sig«l
 &~(1<<(
SIGCHLD
-1))))

189 
ª≥©
;

191  -
EINTR
;

193  -
ECHILD
;

194 
	}
}

	@linux-0.11/kernel/fork.c

13 
	~<°rög.h
>

14 
	~<î∫o.h
>

16 
	~<löux/sched.h
>

17 
	~<löux/kî√l.h
>

18 
	~<asm/£gmít.h
>

19 
	~<asm/sy°em.h
>

21 
wrôe_vîify
(
addªss
);

23 
	gœ°_pid
=0;

25 
	$vîify_¨ó
(* 
addr
,
size
)

27 
°¨t
;

29 
°¨t
 = (Ë
addr
;

30 
size
 +
°¨t
 & 0xfff;

31 
°¨t
 &= 0xfffff000;

32 
°¨t
 +
	`gë_ba£
(
cuºít
->
ldt
[2]);

33 
size
>0) {

34 
size
 -= 4096;

35 
	`wrôe_vîify
(
°¨t
);

36 
°¨t
 += 4096;

38 
	}
}

40 
	$c›y_mem
(
ƒ
,
èsk_°ru˘
 * 
p
)

42 
ﬁd_d©a_ba£
,
√w_d©a_ba£
,
d©a_limô
;

43 
ﬁd_code_ba£
,
√w_code_ba£
,
code_limô
;

45 
code_limô
=
	`gë_limô
(0x0f);

46 
d©a_limô
=
	`gë_limô
(0x17);

47 
ﬁd_code_ba£
 = 
	`gë_ba£
(
cuºít
->
ldt
[1]);

48 
ﬁd_d©a_ba£
 = 
	`gë_ba£
(
cuºít
->
ldt
[2]);

49 i‡(
ﬁd_d©a_ba£
 !
ﬁd_code_ba£
)

50 
	`∑nic
("We don't support separate I&D");

51 i‡(
d©a_limô
 < 
code_limô
)

52 
	`∑nic
("Bad data_limit");

53 
√w_d©a_ba£
 = 
√w_code_ba£
 = 
ƒ
 * 0x4000000;

54 
p
->
°¨t_code
 = 
√w_code_ba£
;

55 
	`£t_ba£
(
p
->
ldt
[1],
√w_code_ba£
);

56 
	`£t_ba£
(
p
->
ldt
[2],
√w_d©a_ba£
);

57 i‡(
	`c›y_∑ge_èbÀs
(
ﬁd_d©a_ba£
,
√w_d©a_ba£
,
d©a_limô
)) {

58 
	`¥ötk
("free_page_tables: from copy_mem\n");

59 
	`‰ì_∑ge_èbÀs
(
√w_d©a_ba£
,
d©a_limô
);

60  -
ENOMEM
;

63 
	}
}

70 
	$c›y_¥o˚ss
(
ƒ
,
ebp
,
edi
,
esi
,
gs
,
n⁄e
,

71 
ebx
,
ecx
,
edx
,

72 
fs
,
es
,
ds
,

73 
eù
,
cs
,
eÊags
,
e•
,
ss
)

75 
èsk_°ru˘
 *
p
;

76 
i
;

77 
fûe
 *
f
;

79 
p
 = (
èsk_°ru˘
 *Ë
	`gë_‰ì_∑ge
();

80 i‡(!
p
)

81  -
EAGAIN
;

82 
èsk
[
ƒ
] = 
p
;

86 *
p
 = *
cuºít
;

87 
p
->
°©e
 = 
TASK_UNINTERRUPTIBLE
;

88 
p
->
pid
 = 
œ°_pid
;

89 
p
->
Áthî
 = 
cuºít
->
pid
;

90 
p
->
cou¡î
 =Ö->
¥i‹ôy
;

91 
p
->
sig«l
 = 0;

92 
p
->
Æ¨m
 = 0;

93 
p
->
Àadî
 = 0;

94 
p
->
utime
 =Ö->
°ime
 = 0;

95 
p
->
cutime
 =Ö->
c°ime
 = 0;

96 
p
->
°¨t_time
 = 
jiffõs
;

97 
p
->
tss
.
back_lök
 = 0;

98 
p
->
tss
.
e•0
 = 
PAGE_SIZE
 + ()Ö;

99 
p
->
tss
.
ss0
 = 0x10;

100 
p
->
tss
.
eù
 =Éip;

101 
p
->
tss
.
eÊags
 =Éflags;

102 
p
->
tss
.
óx
 = 0;

103 
p
->
tss
.
ecx
 =Écx;

104 
p
->
tss
.
edx
 =Édx;

105 
p
->
tss
.
ebx
 =Ébx;

106 
p
->
tss
.
e•
 =Ésp;

107 
p
->
tss
.
ebp
 =Ébp;

108 
p
->
tss
.
esi
 =Ési;

109 
p
->
tss
.
edi
 =Édi;

110 
p
->
tss
.
es
 =És & 0xffff;

111 
p
->
tss
.
cs
 = cs & 0xffff;

112 
p
->
tss
.
ss
 = ss & 0xffff;

113 
p
->
tss
.
ds
 = ds & 0xffff;

114 
p
->
tss
.
fs
 = fs & 0xffff;

115 
p
->
tss
.
gs
 = gs & 0xffff;

116 
p
->
tss
.
ldt
 = 
	`_LDT
(
ƒ
);

117 
p
->
tss
.
åa˚_bôm≠
 = 0x80000000;

118 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

119 
	`__asm__
("˛t†; fnßvê%0"::"m" (
p
->
tss
.
i387
));

120 i‡(
	`c›y_mem
(
ƒ
,
p
)) {

121 
èsk
[
ƒ
] = 
NULL
;

122 
	`‰ì_∑ge
((Ë
p
);

123  -
EAGAIN
;

125 
i
=0; i<
NR_OPEN
;i++)

126 i‡((
f
=
p
->
fûp
[
i
]))

127 
f
->
f_cou¡
++;

128 i‡(
cuºít
->
pwd
)

129 
cuºít
->
pwd
->
i_cou¡
++;

130 i‡(
cuºít
->
roŸ
)

131 
cuºít
->
roŸ
->
i_cou¡
++;

132 i‡(
cuºít
->
execuèbÀ
)

133 
cuºít
->
execuèbÀ
->
i_cou¡
++;

134 
	`£t_tss_desc
(
gdt
+(
ƒ
<<1)+
FIRST_TSS_ENTRY
,&(
p
->
tss
));

135 
	`£t_ldt_desc
(
gdt
+(
ƒ
<<1)+
FIRST_LDT_ENTRY
,&(
p
->
ldt
));

136 
p
->
°©e
 = 
TASK_RUNNING
;

137  
œ°_pid
;

138 
	}
}

140 
	$föd_em±y_¥o˚ss
()

142 
i
;

144 
ª≥©
:

145 i‡((++
œ°_pid
)<0)Üast_pid=1;

146 
i
=0 ; i<
NR_TASKS
 ; i++)

147 i‡(
èsk
[
i
] &&Åask[i]->
pid
 =
œ°_pid
Ë
ª≥©
;

148 
i
=1 ; i<
NR_TASKS
 ; i++)

149 i‡(!
èsk
[
i
])

150  
i
;

151  -
EAGAIN
;

152 
	}
}

	@linux-0.11/kernel/math/math_emulate.c

12 
	~<sig«l.h
>

14 
	~<löux/sched.h
>

15 
	~<löux/kî√l.h
>

16 
	~<asm/£gmít.h
>

18 
	$m©h_emuœã
(
edi
, 
esi
, 
ebp
, 
sys_ˇŒ_ªt
,

19 
óx
,
ebx
,
ecx
,
edx
,

20 
fs
,
es
,
ds
,

21 
eù
,
cs
,
eÊags
,

22 
ss
, 
e•
)

24 
fú°
, 
£c⁄d
;

27 i‡(
cs
 != 0x000F) {

28 
	`¥ötk
("m©h_emuœã: %04x:%08x\n\r",
cs
,
eù
);

29 
	`∑nic
("MathÉmulationÇeeded in kernel");

31 
fú°
 = 
	`gë_fs_byã
((*)((*&
eù
)++));

32 
£c⁄d
 = 
	`gë_fs_byã
((*)((*&
eù
)++));

33 
	`¥ötk
("%04x:%08x %02x %02x\n\r",
cs
,
eù
-2,
fú°
,
£c⁄d
);

34 
cuºít
->
sig«l
 |1<<(
SIGFPE
-1);

35 
	}
}

37 
	$m©h_îr‹
()

39 
	`__asm__
("fnclex");

40 i‡(
œ°_èsk_u£d_m©h
)

41 
œ°_èsk_u£d_m©h
->
sig«l
 |1<<(
SIGFPE
-1);

42 
	}
}

	@linux-0.11/kernel/mktime.c

7 
	~<time.h
>

20 
	#MINUTE
 60

	)

21 
	#HOUR
 (60*
MINUTE
)

	)

22 
	#DAY
 (24*
HOUR
)

	)

23 
	#YEAR
 (365*
DAY
)

	)

26 
	gm⁄th
[12] = {

28 
DAY
*(31),

29 
DAY
*(31+29),

30 
DAY
*(31+29+31),

31 
DAY
*(31+29+31+30),

32 
DAY
*(31+29+31+30+31),

33 
DAY
*(31+29+31+30+31+30),

34 
DAY
*(31+29+31+30+31+30+31),

35 
DAY
*(31+29+31+30+31+30+31+31),

36 
DAY
*(31+29+31+30+31+30+31+31+30),

37 
DAY
*(31+29+31+30+31+30+31+31+30+31),

38 
DAY
*(31+29+31+30+31+30+31+31+30+31+30)

41 
	$kî√l_mktime
(
tm
 *Åm)

43 
ªs
;

44 
yór
;

45 i‡(
tm
->
tm_yór
 >= 70)

46 
yór
 = 
tm
->
tm_yór
 - 70;

48 
yór
 = 
tm
->
tm_yór
 + 100 -70;

50 
ªs
 = 
YEAR
*
yór
 + 
DAY
*((year+1)/4);

51 
ªs
 +
m⁄th
[
tm
->
tm_m⁄
];

53 i‡(
tm
->
tm_m⁄
>1 && ((
yór
+2)%4))

54 
ªs
 -
DAY
;

55 
ªs
 +
DAY
*(
tm
->
tm_mday
-1);

56 
ªs
 +
HOUR
*
tm
->
tm_hour
;

57 
ªs
 +
MINUTE
*
tm
->
tm_mö
;

58 
ªs
 +
tm
->
tm_£c
;

59  
ªs
;

60 
	}
}

	@linux-0.11/kernel/panic.c

11 
	#PANIC


	)

13 
	~<löux/kî√l.h
>

14 
	~<löux/sched.h
>

16 
sys_sync
();

18 
	$∑nic
(c⁄° * 
s
)

20 
	`¥ötk
("Kî√»∑nic: %s\n\r",
s
);

21 i‡(
cuºít
 =
èsk
[0])

22 
	`¥ötk
("In swapperÅask -Çot syncing\n\r");

24 
	`sys_sync
();

26 
	}
}

	@linux-0.11/kernel/printk.c

12 
	~<°d¨g.h
>

13 
	~<°ddef.h
>

15 
	~<löux/kî√l.h
>

17 
	gbuf
[1024];

19 
v•rötf
(* 
buf
, c⁄° * 
fmt
, 
va_li°
 
¨gs
);

21 
	$¥ötk
(c⁄° *
fmt
, ...)

23 
va_li°
 
¨gs
;

24 
i
;

26 
	`va_°¨t
(
¨gs
, 
fmt
);

27 
i
=
	`v•rötf
(
buf
,
fmt
,
¨gs
);

28 
	`va_íd
(
¨gs
);

29 
	`__asm__
("push %%fs\n\t"

39 ::"r" (
i
):"ax","cx","dx");

40  
i
;

41 
	}
}

	@linux-0.11/kernel/sched.c

13 
	~<löux/sched.h
>

14 
	~<löux/kî√l.h
>

15 
	~<löux/sys.h
>

16 
	~<löux/fdªg.h
>

17 
	~<asm/sy°em.h
>

18 
	~<asm/io.h
>

19 
	~<asm/£gmít.h
>

21 
	~<sig«l.h
>

23 
	#_S
(
ƒ
Ë(1<<(“r)-1))

	)

24 
	#_BLOCKABLE
 (~(
	`_S
(
SIGKILL
Ë| _S(
SIGSTOP
)))

	)

26 
	$show_èsk
(
ƒ
,
èsk_°ru˘
 * 
p
)

28 
i
,
j
 = 4096-(
èsk_°ru˘
);

30 
	`¥ötk
("%d:Öid=%d, sèã=%d, ",
ƒ
,
p
->
pid
,p->
°©e
);

31 
i
=0;

32 
i
<
j
 && !((*)(
p
+1))[i])

33 
i
++;

34 
	`¥ötk
("%d (o‡%dËch¨†‰ì i¿kî√»°ack\n\r",
i
,
j
);

35 
	}
}

37 
	$show_°©
()

39 
i
;

41 
i
=0;i<
NR_TASKS
;i++)

42 i‡(
èsk
[
i
])

43 
	`show_èsk
(
i
,
èsk
[i]);

44 
	}
}

46 
	#LATCH
 (1193180/
HZ
)

	)

48 
mem_u£
();

50 
timî_öãºu±
();

51 
sy°em_ˇŒ
();

53 
	uèsk_uni⁄
 {

54 
èsk_°ru˘
 
	mèsk
;

55 
	m°ack
[
PAGE_SIZE
];

58 
èsk_uni⁄
 
	göô_èsk
 = {
INIT_TASK
,};

60 vﬁ©ûê
	gjiffõs
=0;

61 
	g°¨tup_time
=0;

62 
èsk_°ru˘
 *
	gcuºít
 = &(
öô_èsk
.
èsk
);

63 
èsk_°ru˘
 *
	gœ°_èsk_u£d_m©h
 = 
NULL
;

65 
èsk_°ru˘
 * 
	gèsk
[
NR_TASKS
] = {&(
öô_èsk
.
èsk
), };

67 
	gu£r_°ack
 [ 
PAGE_SIZE
>>2 ] ;

70 * 
	ma
;

71 
	mb
;

72 } 
	g°ack_°¨t
 = { & 
u£r_°ack
 [
PAGE_SIZE
>>2] , 0x10 };

77 
	$m©h_°©e_ª°‹e
()

79 i‡(
œ°_èsk_u£d_m©h
 =
cuºít
)

81 
	`__asm__
("fwait");

82 i‡(
œ°_èsk_u£d_m©h
) {

83 
	`__asm__
("‚ßvê%0"::"m" (
œ°_èsk_u£d_m©h
->
tss
.
i387
));

85 
œ°_èsk_u£d_m©h
=
cuºít
;

86 i‡(
cuºít
->
u£d_m©h
) {

87 
	`__asm__
("‰°‹ %0"::"m" (
cuºít
->
tss
.
i387
));

89 
	`__asm__
("fninit"::);

90 
cuºít
->
u£d_m©h
=1;

92 
	}
}

104 
	$scheduÀ
()

106 
i
,
√xt
,
c
;

107 
èsk_°ru˘
 ** 
p
;

111 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p)

112 i‡(*
p
) {

113 i‡((*
p
)->
Æ¨m
 && (*p)->Æ¨m < 
jiffõs
) {

114 (*
p
)->
sig«l
 |(1<<(
SIGALRM
-1));

115 (*
p
)->
Æ¨m
 = 0;

117 i‡(((*
p
)->
sig«l
 & ~(
_BLOCKABLE
 & (*p)->
blocked
)) &&

118 (*
p
)->
°©e
==
TASK_INTERRUPTIBLE
)

119 (*
p
)->
°©e
=
TASK_RUNNING
;

125 
c
 = -1;

126 
√xt
 = 0;

127 
i
 = 
NR_TASKS
;

128 
p
 = &
èsk
[
NR_TASKS
];

129 --
i
) {

130 i‡(!*--
p
)

132 i‡((*
p
)->
°©e
 =
TASK_RUNNING
 && (*p)->
cou¡î
 > 
c
)

133 
c
 = (*
p
)->
cou¡î
, 
√xt
 = 
i
;

135 i‡(
c
) ;

136 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p)

137 i‡(*
p
)

138 (*
p
)->
cou¡î
 = ((*p)->counter >> 1) +

139 (*
p
)->
¥i‹ôy
;

141 
	`swôch_to
(
√xt
);

142 
	}
}

144 
	$sys_∑u£
()

146 
cuºít
->
°©e
 = 
TASK_INTERRUPTIBLE
;

147 
	`scheduÀ
();

149 
	}
}

151 
	$¶ìp_⁄
(
èsk_°ru˘
 **
p
)

153 
èsk_°ru˘
 *
tmp
;

155 i‡(!
p
)

157 i‡(
cuºít
 =&(
öô_èsk
.
èsk
))

158 
	`∑nic
("task[0]ÅryingÅo sleep");

159 
tmp
 = *
p
;

160 *
p
 = 
cuºít
;

161 
cuºít
->
°©e
 = 
TASK_UNINTERRUPTIBLE
;

162 
	`scheduÀ
();

163 i‡(
tmp
)

164 
tmp
->
°©e
=0;

165 
	}
}

167 
	$öãºu±ibÀ_¶ìp_⁄
(
èsk_°ru˘
 **
p
)

169 
èsk_°ru˘
 *
tmp
;

171 i‡(!
p
)

173 i‡(
cuºít
 =&(
öô_èsk
.
èsk
))

174 
	`∑nic
("task[0]ÅryingÅo sleep");

175 
tmp
=*
p
;

176 *
p
=
cuºít
;

177 
ª≥©
: 
cuºít
->
°©e
 = 
TASK_INTERRUPTIBLE
;

178 
	`scheduÀ
();

179 i‡(*
p
 && *∞!
cuºít
) {

180 (**
p
).
°©e
=0;

181 
ª≥©
;

183 *
p
=
NULL
;

184 i‡(
tmp
)

185 
tmp
->
°©e
=0;

186 
	}
}

188 
	$wake_up
(
èsk_°ru˘
 **
p
)

190 i‡(
p
 && *p) {

191 (**
p
).
°©e
=0;

192 *
p
=
NULL
;

194 
	}
}

201 
èsk_°ru˘
 * 
	gwaô_mŸ‹
[4] = {
NULL
,NULL,NULL,NULL};

202 
	gm⁄_timî
[4]={0,0,0,0};

203 
	gmoff_timî
[4]={0,0,0,0};

204 
	gcuºít_DOR
 = 0x0C;

206 
	$ticks_to_Ê›py_⁄
(
ƒ
)

208 
£À˘ed
;

209 
mask
 = 0x10 << 
ƒ
;

211 i‡(
ƒ
>3)

212 
	`∑nic
("floppy_on:Çr>3");

213 
moff_timî
[
ƒ
]=10000;

214 
	`˛i
();

215 
mask
 |
cuºít_DOR
;

216 i‡(!
£À˘ed
) {

217 
mask
 &= 0xFC;

218 
mask
 |
ƒ
;

220 i‡(
mask
 !
cuºít_DOR
) {

221 
	`outb
(
mask
,
FD_DOR
);

222 i‡((
mask
 ^ 
cuºít_DOR
) & 0xf0)

223 
m⁄_timî
[
ƒ
] = 
HZ
/2;

224 i‡(
m⁄_timî
[
ƒ
] < 2)

225 
m⁄_timî
[
ƒ
] = 2;

226 
cuºít_DOR
 = 
mask
;

228 
	`°i
();

229  
m⁄_timî
[
ƒ
];

230 
	}
}

232 
	$Ê›py_⁄
(
ƒ
)

234 
	`˛i
();

235 
	`ticks_to_Ê›py_⁄
(
ƒ
))

236 
	`¶ìp_⁄
(
ƒ
+
waô_mŸ‹
);

237 
	`°i
();

238 
	}
}

240 
	$Ê›py_off
(
ƒ
)

242 
moff_timî
[
ƒ
]=3*
HZ
;

243 
	}
}

245 
	$do_Ê›py_timî
()

247 
i
;

248 
mask
 = 0x10;

250 
i
=0 ; i<4 ; i++,
mask
 <<= 1) {

251 i‡(!(
mask
 & 
cuºít_DOR
))

253 i‡(
m⁄_timî
[
i
]) {

254 i‡(!--
m⁄_timî
[
i
])

255 
	`wake_up
(
i
+
waô_mŸ‹
);

256 } i‡(!
moff_timî
[
i
]) {

257 
cuºít_DOR
 &~
mask
;

258 
	`outb
(
cuºít_DOR
,
FD_DOR
);

260 
moff_timî
[
i
]--;

262 
	}
}

264 
	#TIME_REQUESTS
 64

	)

266 
	stimî_li°
 {

267 
	mjiffõs
;

268 (*
	m‚
)();

269 
timî_li°
 * 
	m√xt
;

270 } 
	gtimî_li°
[
TIME_REQUESTS
], * 
	g√xt_timî
 = 
NULL
;

272 
add_timî
(
jiffõs
, (*
‚
)())

274 
timî_li°
 * 
p
;

276 i‡(!
‚
)

278 
	`˛i
();

279 i‡(
jiffõs
 <= 0)

280 (
‚
)();

282 
p
 = 
timî_li°
 ;Ö <Åimî_li° + 
TIME_REQUESTS
 ;Ö++)

283 i‡(!
p
->
‚
)

285 i‡(
p
 >
timî_li°
 + 
TIME_REQUESTS
)

286 
	`∑nic
("No moreÅimeÑequests free");

287 
p
->
‚
 = fn;

288 
p
->
jiffõs
 = jiffies;

289 
p
->
√xt
 = 
√xt_timî
;

290 
√xt_timî
 = 
p
;

291 
p
->
√xt
 &&Ö->√xt->
jiffõs
 <Ö->jiffies) {

292 
p
->
jiffõs
 -p->
√xt
->jiffies;

293 
‚
 = 
p
->fn;

294 
p
->
‚
 =Ö->
√xt
->fn;

295 
p
->
√xt
->
‚
 = fn;

296 
jiffõs
 = 
p
->jiffies;

297 
p
->
jiffõs
 =Ö->
√xt
->jiffies;

298 
p
->
√xt
->
jiffõs
 = jiffies;

299 
p
 =Ö->
√xt
;

302 
	`°i
();

303 
	}
}

305 
	$do_timî
(
˝l
)

307 
bìpcou¡
;

308 
	`sysbìp°›
();

310 i‡(
bìpcou¡
)

311 i‡(!--
bìpcou¡
)

312 
	`sysbìp°›
();

314 i‡(
˝l
)

315 
cuºít
->
utime
++;

317 
cuºít
->
°ime
++;

319 i‡(
√xt_timî
) {

320 
√xt_timî
->
jiffõs
--;

321 
√xt_timî
 &&Çext_timî->
jiffõs
 <= 0) {

322 (*
‚
)();

324 
‚
 = 
√xt_timî
->fn;

325 
√xt_timî
->
‚
 = 
NULL
;

326 
√xt_timî
 =Çext_timî->
√xt
;

327 (
‚
)();

330 i‡(
cuºít_DOR
 & 0xf0)

331 
	`do_Ê›py_timî
();

332 i‡((--
cuºít
->
cou¡î
)>0) ;

333 
cuºít
->
cou¡î
=0;

334 i‡(!
˝l
) ;

335 
	`scheduÀ
();

336 
	}
}

338 
	$sys_Æ¨m
(
£c⁄ds
)

340 
ﬁd
 = 
cuºít
->
Æ¨m
;

342 i‡(
ﬁd
)

343 
ﬁd
 = (ﬁd - 
jiffõs
Ë/ 
HZ
;

344 
cuºít
->
Æ¨m
 = (
£c⁄ds
>0)?(
jiffõs
+
HZ
*seconds):0;

345  (
ﬁd
);

346 
	}
}

348 
	$sys_gëpid
()

350  
cuºít
->
pid
;

351 
	}
}

353 
	$sys_gëµid
()

355  
cuºít
->
Áthî
;

356 
	}
}

358 
	$sys_gëuid
()

360  
cuºít
->
uid
;

361 
	}
}

363 
	$sys_gëeuid
()

365  
cuºít
->
euid
;

366 
	}
}

368 
	$sys_gëgid
()

370  
cuºít
->
gid
;

371 
	}
}

373 
	$sys_gëegid
()

375  
cuºít
->
egid
;

376 
	}
}

378 
	$sys_ni˚
(
ö¸emít
)

380 i‡(
cuºít
->
¥i‹ôy
-
ö¸emít
>0)

381 
cuºít
->
¥i‹ôy
 -
ö¸emít
;

383 
	}
}

385 
	$sched_öô
()

387 
i
;

388 
desc_°ru˘
 * 
p
;

390 i‡((
siga˘i⁄
) != 16)

391 
	`∑nic
("Struct sigaction MUST be 16 bytes");

392 
	`£t_tss_desc
(
gdt
+
FIRST_TSS_ENTRY
,&(
öô_èsk
.
èsk
.
tss
));

393 
	`£t_ldt_desc
(
gdt
+
FIRST_LDT_ENTRY
,&(
öô_èsk
.
èsk
.
ldt
));

394 
p
 = 
gdt
+2+
FIRST_TSS_ENTRY
;

395 
i
=1;i<
NR_TASKS
;i++) {

396 
èsk
[
i
] = 
NULL
;

397 
p
->
a
ı->
b
=0;

398 
p
++;

399 
p
->
a
ı->
b
=0;

400 
p
++;

403 
	`__asm__
("pushfl ;ándl $0xffffbfff,(%esp) ;Öopfl");

404 
	`…r
(0);

405 
	`Œdt
(0);

406 
	`outb_p
(0x36,0x43);

407 
	`outb_p
(
LATCH
 & 0xff , 0x40);

408 
	`outb
(
LATCH
 >> 8 , 0x40);

409 
	`£t_öå_g©e
(0x20,&
timî_öãºu±
);

410 
	`outb
(
	`öb_p
(0x21)&~0x01,0x21);

411 
	`£t_sy°em_g©e
(0x80,&
sy°em_ˇŒ
);

412 
	}
}

	@linux-0.11/kernel/signal.c

7 
	~<löux/sched.h
>

8 
	~<löux/kî√l.h
>

9 
	~<asm/£gmít.h
>

11 
	~<sig«l.h
>

13 
do_exô
(
îr‹_code
);

15 
	$sys_sgëmask
()

17  
cuºít
->
blocked
;

18 
	}
}

20 
	$sys_s£tmask
(
√wmask
)

22 
ﬁd
=
cuºít
->
blocked
;

24 
cuºít
->
blocked
 = 
√wmask
 & ~(1<<(
SIGKILL
-1));

25  
ﬁd
;

26 
	}
}

28 
ölöe
 
	$ßve_ﬁd
(* 
‰om
,* 
to
)

30 
i
;

32 
	`vîify_¨ó
(
to
, (
siga˘i⁄
));

33 
i
=0 ; i< (
siga˘i⁄
) ; i++) {

34 
	`put_fs_byã
(*
‰om
,
to
);

35 
‰om
++;

36 
to
++;

38 
	}
}

40 
ölöe
 
	$gë_√w
(* 
‰om
,* 
to
)

42 
i
;

44 
i
=0 ; i< (
siga˘i⁄
) ; i++)

45 *(
to
++Ë
	`gë_fs_byã
(
‰om
++);

46 
	}
}

48 
	$sys_sig«l
(
signum
, 
h™dÀr
, 
ª°‹î
)

50 
siga˘i⁄
 
tmp
;

52 i‡(
signum
<1 || signum>32 || signum==
SIGKILL
)

54 
tmp
.
ß_h™dÀr
 = ((*)()Ë
h™dÀr
;

55 
tmp
.
ß_mask
 = 0;

56 
tmp
.
ß_Êags
 = 
SA_ONESHOT
 | 
SA_NOMASK
;

57 
tmp
.
ß_ª°‹î
 = ((*)()Ë
ª°‹î
;

58 
h™dÀr
 = (Ë
cuºít
->
siga˘i⁄
[
signum
-1].
ß_h™dÀr
;

59 
cuºít
->
siga˘i⁄
[
signum
-1] = 
tmp
;

60  
h™dÀr
;

61 
	}
}

63 
	$sys_siga˘i⁄
(
signum
, c⁄° 
siga˘i⁄
 * 
a˘i⁄
,

64 
siga˘i⁄
 * 
ﬁda˘i⁄
)

66 
siga˘i⁄
 
tmp
;

68 i‡(
signum
<1 || signum>32 || signum==
SIGKILL
)

70 
tmp
 = 
cuºít
->
siga˘i⁄
[
signum
-1];

71 
	`gë_√w
((*Ë
a˘i⁄
,

72 (*Ë(
signum
-1+
cuºít
->
siga˘i⁄
));

73 i‡(
ﬁda˘i⁄
)

74 
	`ßve_ﬁd
((*Ë&
tmp
,(*Ë
ﬁda˘i⁄
);

75 i‡(
cuºít
->
siga˘i⁄
[
signum
-1].
ß_Êags
 & 
SA_NOMASK
)

76 
cuºít
->
siga˘i⁄
[
signum
-1].
ß_mask
 = 0;

78 
cuºít
->
siga˘i⁄
[
signum
-1].
ß_mask
 |= (1<<(signum-1));

80 
	}
}

82 
	$do_sig«l
(
sigƒ
,
óx
, 
ebx
, 
ecx
, 
edx
,

83 
fs
, 
es
, 
ds
,

84 
eù
, 
cs
, 
eÊags
,

85 * 
e•
, 
ss
)

87 
ß_h™dÀr
;

88 
ﬁd_eù
=
eù
;

89 
siga˘i⁄
 * 
ß
 = 
cuºít
->siga˘i⁄ + 
sigƒ
 - 1;

90 
l⁄gs
;

91 * 
tmp_e•
;

93 
ß_h™dÀr
 = (Ë
ß
->sa_handler;

94 i‡(
ß_h™dÀr
==1)

96 i‡(!
ß_h™dÀr
) {

97 i‡(
sigƒ
==
SIGCHLD
)

100 
	`do_exô
(1<<(
sigƒ
-1));

102 i‡(
ß
->
ß_Êags
 & 
SA_ONESHOT
)

103 
ß
->
ß_h™dÀr
 = 
NULL
;

104 *(&
eù
Ë
ß_h™dÀr
;

105 
l⁄gs
 = (
ß
->
ß_Êags
 & 
SA_NOMASK
)?7:8;

106 *(&
e•
Ë-
l⁄gs
;

107 
	`vîify_¨ó
(
e•
,
l⁄gs
*4);

108 
tmp_e•
=
e•
;

109 
	`put_fs_l⁄g
((Ë
ß
->
ß_ª°‹î
,
tmp_e•
++);

110 
	`put_fs_l⁄g
(
sigƒ
,
tmp_e•
++);

111 i‡(!(
ß
->
ß_Êags
 & 
SA_NOMASK
))

112 
	`put_fs_l⁄g
(
cuºít
->
blocked
,
tmp_e•
++);

113 
	`put_fs_l⁄g
(
óx
,
tmp_e•
++);

114 
	`put_fs_l⁄g
(
ecx
,
tmp_e•
++);

115 
	`put_fs_l⁄g
(
edx
,
tmp_e•
++);

116 
	`put_fs_l⁄g
(
eÊags
,
tmp_e•
++);

117 
	`put_fs_l⁄g
(
ﬁd_eù
,
tmp_e•
++);

118 
cuºít
->
blocked
 |
ß
->
ß_mask
;

119 
	}
}

	@linux-0.11/kernel/sys.c

7 
	~<î∫o.h
>

9 
	~<löux/sched.h
>

10 
	~<löux/ây.h
>

11 
	~<löux/kî√l.h
>

12 
	~<asm/£gmít.h
>

13 
	~<sys/times.h
>

14 
	~<sys/ut¢ame.h
>

16 
	$sys_·ime
()

18  -
ENOSYS
;

19 
	}
}

21 
	$sys_bªak
()

23  -
ENOSYS
;

24 
	}
}

26 
	$sys_±ø˚
()

28  -
ENOSYS
;

29 
	}
}

31 
	$sys_°ty
()

33  -
ENOSYS
;

34 
	}
}

36 
	$sys_gây
()

38  -
ENOSYS
;

39 
	}
}

41 
	$sys_ª«me
()

43  -
ENOSYS
;

44 
	}
}

46 
	$sys_¥of
()

48  -
ENOSYS
;

49 
	}
}

51 
	$sys_£åegid
(
rgid
, 
egid
)

53 i‡(
rgid
>0) {

54 i‡((
cuºít
->
gid
 =
rgid
) ||

55 
	`su£r
())

56 
cuºít
->
gid
 = 
rgid
;

58 (-
EPERM
);

60 i‡(
egid
>0) {

61 i‡((
cuºít
->
gid
 =
egid
) ||

62 (
cuºít
->
egid
 ==Égid) ||

63 (
cuºít
->
sgid
 =
egid
) ||

64 
	`su£r
())

65 
cuºít
->
egid
 =Égid;

67 (-
EPERM
);

70 
	}
}

72 
	$sys_£tgid
(
gid
)

74 (
	`sys_£åegid
(
gid
, gid));

75 
	}
}

77 
	$sys_ac˘
()

79  -
ENOSYS
;

80 
	}
}

82 
	$sys_phys
()

84  -
ENOSYS
;

85 
	}
}

87 
	$sys_lock
()

89  -
ENOSYS
;

90 
	}
}

92 
	$sys_mpx
()

94  -
ENOSYS
;

95 
	}
}

97 
	$sys_ulimô
()

99  -
ENOSYS
;

100 
	}
}

102 
	$sys_time
(* 
éoc
)

104 
i
;

106 
i
 = 
CURRENT_TIME
;

107 i‡(
éoc
) {

108 
	`vîify_¨ó
(
éoc
,4);

109 
	`put_fs_l⁄g
(
i
,(*)
éoc
);

111  
i
;

112 
	}
}

118 
	$sys_£åeuid
(
ruid
, 
euid
)

120 
ﬁd_ruid
 = 
cuºít
->
uid
;

122 i‡(
ruid
>0) {

123 i‡((
cuºít
->
euid
==
ruid
) ||

124 (
ﬁd_ruid
 =
ruid
) ||

125 
	`su£r
())

126 
cuºít
->
uid
 = 
ruid
;

128 (-
EPERM
);

130 i‡(
euid
>0) {

131 i‡((
ﬁd_ruid
 =
euid
) ||

132 (
cuºít
->
euid
 ==Éuid) ||

133 
	`su£r
())

134 
cuºít
->
euid
 =Éuid;

136 
cuºít
->
uid
 = 
ﬁd_ruid
;

137 (-
EPERM
);

141 
	}
}

143 
	$sys_£tuid
(
uid
)

145 (
	`sys_£åeuid
(
uid
, uid));

146 
	}
}

148 
	$sys_°ime
(* 
çå
)

150 i‡(!
	`su£r
())

151  -
EPERM
;

152 
°¨tup_time
 = 
	`gë_fs_l⁄g
((*)
çå
Ë- 
jiffõs
/
HZ
;

154 
	}
}

156 
	$sys_times
(
tms
 * 
tbuf
)

158 i‡(
tbuf
) {

159 
	`vîify_¨ó
(
tbuf
, *tbuf);

160 
	`put_fs_l⁄g
(
cuºít
->
utime
,(*)&
tbuf
->
tms_utime
);

161 
	`put_fs_l⁄g
(
cuºít
->
°ime
,(*)&
tbuf
->
tms_°ime
);

162 
	`put_fs_l⁄g
(
cuºít
->
cutime
,(*)&
tbuf
->
tms_cutime
);

163 
	`put_fs_l⁄g
(
cuºít
->
c°ime
,(*)&
tbuf
->
tms_c°ime
);

165  
jiffõs
;

166 
	}
}

168 
	$sys_brk
(
íd_d©a_£g
)

170 i‡(
íd_d©a_£g
 >
cuºít
->
íd_code
 &&

171 
íd_d©a_£g
 < 
cuºít
->
°¨t_°ack
 - 16384)

172 
cuºít
->
brk
 = 
íd_d©a_£g
;

173  
cuºít
->
brk
;

174 
	}
}

181 
	$sys_£çgid
(
pid
, 
pgid
)

183 
i
;

185 i‡(!
pid
)

186 
pid
 = 
cuºít
->pid;

187 i‡(!
pgid
)

188 
pgid
 = 
cuºít
->
pid
;

189 
i
=0 ; i<
NR_TASKS
 ; i++)

190 i‡(
èsk
[
i
] &&Åask[i]->
pid
==pid) {

191 i‡(
èsk
[
i
]->
Àadî
)

192  -
EPERM
;

193 i‡(
èsk
[
i
]->
£ssi⁄
 !
cuºít
->session)

194  -
EPERM
;

195 
èsk
[
i
]->
pgΩ
 = 
pgid
;

198  -
ESRCH
;

199 
	}
}

201 
	$sys_gëpgΩ
()

203  
cuºít
->
pgΩ
;

204 
	}
}

206 
	$sys_£tsid
()

208 i‡(
cuºít
->
Àadî
 && !
	`su£r
())

209  -
EPERM
;

210 
cuºít
->
Àadî
 = 1;

211 
cuºít
->
£ssi⁄
 = cuºít->
pgΩ
 = cuºít->
pid
;

212 
cuºít
->
ây
 = -1;

213  
cuºít
->
pgΩ
;

214 
	}
}

216 
	$sys_u«me
(
ut¢ame
 * 
«me
)

218 
ut¢ame
 
thi¢ame
 = {

221 
i
;

223 i‡(!
«me
Ë -
ERROR
;

224 
	`vîify_¨ó
(
«me
, *name);

225 
i
=0;i< *
«me
;i++)

226 
	`put_fs_byã
(((*Ë&
thi¢ame
)[
i
],i+(*Ë
«me
);

228 
	}
}

230 
	$sys_umask
(
mask
)

232 
ﬁd
 = 
cuºít
->
umask
;

234 
cuºít
->
umask
 = 
mask
 & 0777;

235  (
ﬁd
);

236 
	}
}

	@linux-0.11/kernel/traps.c

13 
	~<°rög.h
>

15 
	~<löux/hód.h
>

16 
	~<löux/sched.h
>

17 
	~<löux/kî√l.h
>

18 
	~<asm/sy°em.h
>

19 
	~<asm/£gmít.h
>

20 
	~<asm/io.h
>

22 
	#gë_£g_byã
(
£g
,
addr
) ({ \

23 
__ªs
; \

24 
	`__asm__
("push %%fs;mov %%ax,%%fs;movb %%fs:%2,%%al;pop %%fs" \

25 :"˜" (
__ªs
):"0" (
£g
),"m" (*(
addr
))); \

26 
__ªs
;})

	)

28 
	#gë_£g_l⁄g
(
£g
,
addr
) ({ \

29 
__ªs
; \

30 
	`__asm__
("push %%fs;mov %%ax,%%fs;movl %%fs:%2,%%eax;pop %%fs" \

31 :"˜" (
__ªs
):"0" (
£g
),"m" (*(
addr
))); \

32 
__ªs
;})

	)

34 
	#_fs
() ({ \

35 
__ªs
; \

36 
	`__asm__
("mov %%fs,%%ax":"˜" (
__ªs
):); \

37 
__ªs
;})

	)

39 
do_exô
(
code
);

41 
∑ge_ex˚±i⁄
();

43 
divide_îr‹
();

44 
debug
();

45 
nmi
();

46 
öt3
();

47 
ovîÊow
();

48 
bounds
();

49 
övÆid_›
();

50 
devi˚_nŸ_avaûabÀ
();

51 
doubÀ_Áu…
();

52 
c›ro˚ss‹_£gmít_ovîrun
();

53 
övÆid_TSS
();

54 
£gmít_nŸ_¥e£¡
();

55 
°ack_£gmít
();

56 
gíîÆ_¥Ÿe˘i⁄
();

57 
∑ge_Áu…
();

58 
c›ro˚ss‹_îr‹
();

59 
ª£rved
();

60 
∑øŒñ_öãºu±
();

61 
úq13
();

63 
	$dõ
(* 
°r
,
e•_±r
,
ƒ
)

65 * 
e•
 = (*Ë
e•_±r
;

66 
i
;

68 
	`¥ötk
("%s: %04x\n\r",
°r
,
ƒ
&0xffff);

69 
	`¥ötk
("EIP:\t%04x:%p\nEFLAGS:\t%p\nESP:\t%04x:%p\n",

70 
e•
[1],esp[0],esp[2],esp[4],esp[3]);

71 
	`¥ötk
("fs: %04x\n",
	`_fs
());

72 
	`¥ötk
("ba£: %p,Üimô: %p\n",
	`gë_ba£
(
cuºít
->
ldt
[1]),
	`gë_limô
(0x17));

73 i‡(
e•
[4] == 0x17) {

74 
	`¥ötk
("Stack: ");

75 
i
=0;i<4;i++)

76 
	`¥ötk
("%∞",
	`gë_£g_l⁄g
(0x17,
i
+(*)
e•
[3]));

77 
	`¥ötk
("\n");

79 
	`°r
(
i
);

80 
	`¥ötk
("Pid: %d,Öro˚s†ƒ: %d\n\r",
cuºít
->
pid
,0xfff‡& 
i
);

81 
i
=0;i<10;i++)

82 
	`¥ötk
("%02x ",0xf‡& 
	`gë_£g_byã
(
e•
[1],(
i
+(*)esp[0])));

83 
	`¥ötk
("\n\r");

84 
	`do_exô
(11);

85 
	}
}

87 
	$do_doubÀ_Áu…
(
e•
, 
îr‹_code
)

89 
	`dõ
("doubÀ fau…",
e•
,
îr‹_code
);

90 
	}
}

92 
	$do_gíîÆ_¥Ÿe˘i⁄
(
e•
, 
îr‹_code
)

94 
	`dõ
("gíîÆÖrŸe˘i⁄",
e•
,
îr‹_code
);

95 
	}
}

97 
	$do_divide_îr‹
(
e•
, 
îr‹_code
)

99 
	`dõ
("dividêîr‹",
e•
,
îr‹_code
);

100 
	}
}

102 
	$do_öt3
(* 
e•
, 
îr‹_code
,

103 
fs
,
es
,
ds
,

104 
ebp
,
esi
,
edi
,

105 
edx
,
ecx
,
ebx
,
óx
)

107 
å
;

109 
	`__asm__
("°∏%%ax":"˜" (
å
):"0" (0));

110 
	`¥ötk
("eax\t\tebx\t\tecx\t\tedx\n\r%8x\t%8x\t%8x\t%8x\n\r",

111 
óx
,
ebx
,
ecx
,
edx
);

112 
	`¥ötk
("esi\t\tedi\t\tebp\t\tesp\n\r%8x\t%8x\t%8x\t%8x\n\r",

113 
esi
,
edi
,
ebp
,(Ë
e•
);

114 
	`¥ötk
("\n\rds\tes\tfs\ttr\n\r%4x\t%4x\t%4x\t%4x\n\r",

115 
ds
,
es
,
fs
,
å
);

116 
	`¥ötk
("EIP: %8x CS: %4x EFLAGS: %8x\n\r",
e•
[0],esp[1],esp[2]);

117 
	}
}

119 
	$do_nmi
(
e•
, 
îr‹_code
)

121 
	`dõ
("nmi",
e•
,
îr‹_code
);

122 
	}
}

124 
	$do_debug
(
e•
, 
îr‹_code
)

126 
	`dõ
("debug",
e•
,
îr‹_code
);

127 
	}
}

129 
	$do_ovîÊow
(
e•
, 
îr‹_code
)

131 
	`dõ
("ovîÊow",
e•
,
îr‹_code
);

132 
	}
}

134 
	$do_bounds
(
e•
, 
îr‹_code
)

136 
	`dõ
("bounds",
e•
,
îr‹_code
);

137 
	}
}

139 
	$do_övÆid_›
(
e•
, 
îr‹_code
)

141 
	`dõ
("övÆid o≥ønd",
e•
,
îr‹_code
);

142 
	}
}

144 
	$do_devi˚_nŸ_avaûabÀ
(
e•
, 
îr‹_code
)

146 
	`dõ
("devi˚ÇŸávaûabÀ",
e•
,
îr‹_code
);

147 
	}
}

149 
	$do_c›ro˚ss‹_£gmít_ovîrun
(
e•
, 
îr‹_code
)

151 
	`dõ
("c›ro˚ss‹ segmíàovîrun",
e•
,
îr‹_code
);

152 
	}
}

154 
	$do_övÆid_TSS
(
e•
,
îr‹_code
)

156 
	`dõ
("övÆid TSS",
e•
,
îr‹_code
);

157 
	}
}

159 
	$do_£gmít_nŸ_¥e£¡
(
e•
,
îr‹_code
)

161 
	`dõ
("£gmíànŸÖª£¡",
e•
,
îr‹_code
);

162 
	}
}

164 
	$do_°ack_£gmít
(
e•
,
îr‹_code
)

166 
	`dõ
("°ack segmít",
e•
,
îr‹_code
);

167 
	}
}

169 
	$do_c›ro˚ss‹_îr‹
(
e•
, 
îr‹_code
)

171 i‡(
œ°_èsk_u£d_m©h
 !
cuºít
)

173 
	`dõ
("c›ro˚ss‹Éº‹",
e•
,
îr‹_code
);

174 
	}
}

176 
	$do_ª£rved
(
e•
, 
îr‹_code
)

178 
	`dõ
("ª£rved (15,17-47Ëîr‹",
e•
,
îr‹_code
);

179 
	}
}

181 
	$å≠_öô
()

183 
i
;

185 
	`£t_å≠_g©e
(0,&
divide_îr‹
);

186 
	`£t_å≠_g©e
(1,&
debug
);

187 
	`£t_å≠_g©e
(2,&
nmi
);

188 
	`£t_sy°em_g©e
(3,&
öt3
);

189 
	`£t_sy°em_g©e
(4,&
ovîÊow
);

190 
	`£t_sy°em_g©e
(5,&
bounds
);

191 
	`£t_å≠_g©e
(6,&
övÆid_›
);

192 
	`£t_å≠_g©e
(7,&
devi˚_nŸ_avaûabÀ
);

193 
	`£t_å≠_g©e
(8,&
doubÀ_Áu…
);

194 
	`£t_å≠_g©e
(9,&
c›ro˚ss‹_£gmít_ovîrun
);

195 
	`£t_å≠_g©e
(10,&
övÆid_TSS
);

196 
	`£t_å≠_g©e
(11,&
£gmít_nŸ_¥e£¡
);

197 
	`£t_å≠_g©e
(12,&
°ack_£gmít
);

198 
	`£t_å≠_g©e
(13,&
gíîÆ_¥Ÿe˘i⁄
);

199 
	`£t_å≠_g©e
(14,&
∑ge_Áu…
);

200 
	`£t_å≠_g©e
(15,&
ª£rved
);

201 
	`£t_å≠_g©e
(16,&
c›ro˚ss‹_îr‹
);

202 
i
=17;i<48;i++)

203 
	`£t_å≠_g©e
(
i
,&
ª£rved
);

204 
	`£t_å≠_g©e
(45,&
úq13
);

205 
	`outb_p
(
	`öb_p
(0x21)&0xfb,0x21);

206 
	`outb
(
	`öb_p
(0xA1)&0xdf,0xA1);

207 
	`£t_å≠_g©e
(39,&
∑øŒñ_öãºu±
);

208 
	}
}

	@linux-0.11/kernel/vsprintf.c

12 
	~<°d¨g.h
>

13 
	~<°rög.h
>

16 
	#is_digô
(
c
Ë((cË>'0' && (cË<'9')

	)

18 
	$skù_©oi
(c⁄° **
s
)

20 
i
=0;

22 
	`is_digô
(**
s
))

23 
i
 = i*10 + *((*
s
)++) - '0';

24  
i
;

25 
	}
}

27 
	#ZEROPAD
 1

	)

28 
	#SIGN
 2

	)

29 
	#PLUS
 4

	)

30 
	#SPACE
 8

	)

31 
	#LEFT
 16

	)

32 
	#SPECIAL
 32

	)

33 
	#SMALL
 64

	)

35 
	#do_div
(
n
,
ba£
) ({ \

36 
__ªs
; \

37 
	`__asm__
("div»%4":"˜" (
n
),"=d" (
__ªs
):"0" (n),"1" (0),"r" (
ba£
)); \

38 
__ªs
; })

	)

40 * 
	$numbî
(* 
°r
, 
num
, 
ba£
, 
size
, 
¥ecisi⁄


41 ,
ty≥
)

43 
c
,
sign
,
tmp
[36];

44 c⁄° *
digôs
="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";

45 
i
;

47 i‡(
ty≥
&
SMALL
Ë
digôs
="0123456789abcdefghijklmnopqrstuvwxyz";

48 i‡(
ty≥
&
LEFT
Ëty≥ &~
ZEROPAD
;

49 i‡(
ba£
<2 || base>36)

51 
c
 = (
ty≥
 & 
ZEROPAD
) ? '0' : ' ' ;

52 i‡(
ty≥
&
SIGN
 && 
num
<0) {

53 
sign
='-';

54 
num
 = -num;

56 
sign
=(
ty≥
&
PLUS
Ë? '+' : (—y≥&
SPACE
) ? ' ' : 0);

57 i‡(
sign
Ë
size
--;

58 i‡(
ty≥
&
SPECIAL
) {

59 i‡(
ba£
==16Ë
size
 -= 2;

60 i‡(
ba£
==8Ë
size
--;

62 
i
=0;

63 i‡(
num
==0)

64 
tmp
[
i
++]='0';

65 
num
!=0)

66 
tmp
[
i
++]=
digôs
[
	`do_div
(
num
,
ba£
)];

67 i‡(
i
>
¥ecisi⁄
)Örecision=i;

68 
size
 -
¥ecisi⁄
;

69 i‡(!(
ty≥
&(
ZEROPAD
+
LEFT
)))

70 
size
-->0)

71 *
°r
++ = ' ';

72 i‡(
sign
)

73 *
°r
++ = 
sign
;

74 i‡(
ty≥
&
SPECIAL
) {

75 i‡(
ba£
==8)

76 *
°r
++ = '0';

77 i‡(
ba£
==16) {

78 *
°r
++ = '0';

79 *
°r
++ = 
digôs
[33];

82 i‡(!(
ty≥
&
LEFT
))

83 
size
-->0)

84 *
°r
++ = 
c
;

85 
i
<
¥ecisi⁄
--)

86 *
°r
++ = '0';

87 
i
-->0)

88 *
°r
++ = 
tmp
[
i
];

89 
size
-->0)

90 *
°r
++ = ' ';

91  
°r
;

92 
	}
}

94 
	$v•rötf
(*
buf
, c⁄° *
fmt
, 
va_li°
 
¨gs
)

96 
Àn
;

97 
i
;

98 * 
°r
;

99 *
s
;

100 *
ù
;

102 
Êags
;

104 
fõld_width
;

105 
¥ecisi⁄
;

107 
quÆifõr
;

109 
°r
=
buf
 ; *
fmt
 ; ++fmt) {

110 i‡(*
fmt
 != '%') {

111 *
°r
++ = *
fmt
;

116 
Êags
 = 0;

117 
ª≥©
:

118 ++
fmt
;

119 *
fmt
) {

120 '-': 
Êags
 |
LEFT
; 
ª≥©
;

121 '+': 
Êags
 |
PLUS
; 
ª≥©
;

122 ' ': 
Êags
 |
SPACE
; 
ª≥©
;

123 '#': 
Êags
 |
SPECIAL
; 
ª≥©
;

124 '0': 
Êags
 |
ZEROPAD
; 
ª≥©
;

128 
fõld_width
 = -1;

129 i‡(
	`is_digô
(*
fmt
))

130 
fõld_width
 = 
	`skù_©oi
(&
fmt
);

131 i‡(*
fmt
 == '*') {

133 
fõld_width
 = 
	`va_¨g
(
¨gs
, );

134 i‡(
fõld_width
 < 0) {

135 
fõld_width
 = -field_width;

136 
Êags
 |
LEFT
;

141 
¥ecisi⁄
 = -1;

142 i‡(*
fmt
 == '.') {

143 ++
fmt
;

144 i‡(
	`is_digô
(*
fmt
))

145 
¥ecisi⁄
 = 
	`skù_©oi
(&
fmt
);

146 i‡(*
fmt
 == '*') {

148 
¥ecisi⁄
 = 
	`va_¨g
(
¨gs
, );

150 i‡(
¥ecisi⁄
 < 0)

151 
¥ecisi⁄
 = 0;

155 
quÆifõr
 = -1;

156 i‡(*
fmt
 == 'h' || *fmt == 'l' || *fmt == 'L') {

157 
quÆifõr
 = *
fmt
;

158 ++
fmt
;

161 *
fmt
) {

163 i‡(!(
Êags
 & 
LEFT
))

164 --
fõld_width
 > 0)

165 *
°r
++ = ' ';

166 *
°r
++ = (Ë
	`va_¨g
(
¨gs
, );

167 --
fõld_width
 > 0)

168 *
°r
++ = ' ';

172 
s
 = 
	`va_¨g
(
¨gs
, *);

173 
Àn
 = 
	`°æí
(
s
);

174 i‡(
¥ecisi⁄
 < 0)

175 
¥ecisi⁄
 = 
Àn
;

176 i‡(
Àn
 > 
¥ecisi⁄
)

177 
Àn
 = 
¥ecisi⁄
;

179 i‡(!(
Êags
 & 
LEFT
))

180 
Àn
 < 
fõld_width
--)

181 *
°r
++ = ' ';

182 
i
 = 0; i < 
Àn
; ++i)

183 *
°r
++ = *
s
++;

184 
Àn
 < 
fõld_width
--)

185 *
°r
++ = ' ';

189 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 8,

190 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

194 i‡(
fõld_width
 == -1) {

195 
fõld_width
 = 8;

196 
Êags
 |
ZEROPAD
;

198 
°r
 = 
	`numbî
(str,

199 (Ë
	`va_¨g
(
¨gs
, *), 16,

200 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

204 
Êags
 |
SMALL
;

206 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 16,

207 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

212 
Êags
 |
SIGN
;

214 
°r
 = 
	`numbî
(°r, 
	`va_¨g
(
¨gs
, ), 10,

215 
fõld_width
, 
¥ecisi⁄
, 
Êags
);

219 
ù
 = 
	`va_¨g
(
¨gs
, *);

220 *
ù
 = (
°r
 - 
buf
);

224 i‡(*
fmt
 != '%')

225 *
°r
++ = '%';

226 i‡(*
fmt
)

227 *
°r
++ = *
fmt
;

229 --
fmt
;

233 *
°r
 = '\0';

234  
°r
-
buf
;

235 
	}
}

	@linux-0.11/lib/_exit.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
	$_exô
(
exô_code
)

12 
__asm__
 
	`__vﬁ©ûe__
 ("öà$0x80"::"a" (
__NR_exô
),"b" (
exô_code
));

13 
	}
}

	@linux-0.11/lib/close.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
_sysˇŒ1
(,
˛o£
,,
fd
)

	@linux-0.11/lib/ctype.c

7 
	~<˘y≥.h
>

9 
	g_˘mp
;

10 
	g_˘y≥
[] = {0x00,

11 
_C
,_C,_C,_C,_C,_C,_C,_C,

12 
_C
,_C|
_S
,_C|_S,_C|_S,_C|_S,_C|_S,_C,_C,

13 
_C
,_C,_C,_C,_C,_C,_C,_C,

14 
_C
,_C,_C,_C,_C,_C,_C,_C,

15 
_S
|
_SP
,
_P
,_P,_P,_P,_P,_P,_P,

16 
_P
,_P,_P,_P,_P,_P,_P,_P,

17 
_D
,_D,_D,_D,_D,_D,_D,_D,

18 
_D
,_D,
_P
,_P,_P,_P,_P,_P,

19 
_P
,
_U
|
_X
,_U|_X,_U|_X,_U|_X,_U|_X,_U|_X,_U,

20 
_U
,_U,_U,_U,_U,_U,_U,_U,

21 
_U
,_U,_U,_U,_U,_U,_U,_U,

22 
_U
,_U,_U,
_P
,_P,_P,_P,_P,

23 
_P
,
_L
|
_X
,_L|_X,_L|_X,_L|_X,_L|_X,_L|_X,_L,

24 
_L
,_L,_L,_L,_L,_L,_L,_L,

25 
_L
,_L,_L,_L,_L,_L,_L,_L,

26 
_L
,_L,_L,
_P
,_P,_P,_P,
_C
,

	@linux-0.11/lib/dup.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
_sysˇŒ1
(,
dup
,,
fd
)

	@linux-0.11/lib/errno.c

7 
	gî∫o
;

	@linux-0.11/lib/execve.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
_sysˇŒ3
(,
execve
,c⁄° *,
fûe
,**,
¨gv
,**,
ívp
)

	@linux-0.11/lib/malloc.c

48 
	~<löux/kî√l.h
>

49 
	~<löux/mm.h
>

50 
	~<asm/sy°em.h
>

52 
	sbuckë_desc
 {

53 *
	m∑ge
;

54 
buckë_desc
 *
	m√xt
;

55 *
	m‰ì±r
;

56 
	mªf˙t
;

57 
	mbuckë_size
;

60 
	s_buckë_dú
 {

61 
	msize
;

62 
buckë_desc
 *
	mchaö
;

77 
_buckë_dú
 
	gbuckë_dú
[] = {

78 { 16, (
buckë_desc
 *) 0},

79 { 32, (
buckë_desc
 *) 0},

80 { 64, (
buckë_desc
 *) 0},

81 { 128, (
buckë_desc
 *) 0},

82 { 256, (
buckë_desc
 *) 0},

83 { 512, (
buckë_desc
 *) 0},

84 { 1024, (
buckë_desc
 *) 0},

85 { 2048, (
buckë_desc
 *) 0},

86 { 4096, (
buckë_desc
 *) 0},

87 { 0, (
buckë_desc
 *) 0}};

92 
buckë_desc
 *
	g‰ì_buckë_desc
 = (bucket_desc *) 0;

97 
ölöe
 
	$öô_buckë_desc
()

99 
buckë_desc
 *
bdesc
, *
fú°
;

100 
i
;

102 
fú°
 = 
bdesc
 = (
buckë_desc
 *Ë
	`gë_‰ì_∑ge
();

103 i‡(!
bdesc
)

104 
	`∑nic
("Out of memory in init_bucket_desc()");

105 
i
 = 
PAGE_SIZE
/(
buckë_desc
); i > 1; i--) {

106 
bdesc
->
√xt
 = bdesc+1;

107 
bdesc
++;

113 
bdesc
->
√xt
 = 
‰ì_buckë_desc
;

114 
‰ì_buckë_desc
 = 
fú°
;

115 
	}
}

117 *
	$mÆloc
(
Àn
)

119 
_buckë_dú
 *
bdú
;

120 
buckë_desc
 *
bdesc
;

121 *
ªtvÆ
;

127 
bdú
 = 
buckë_dú
; bdú->
size
; bdir++)

128 i‡(
bdú
->
size
 >
Àn
)

130 i‡(!
bdú
->
size
) {

131 
	`¥ötk
("malloc called with impossiblyÜargeárgument (%d)\n",

132 
Àn
);

133 
	`∑nic
("malloc: badárg");

138 
	`˛i
();

139 
bdesc
 = 
bdú
->
chaö
; bdesc; bdes¯bdesc->
√xt
)

140 i‡(
bdesc
->
‰ì±r
)

146 i‡(!
bdesc
) {

147 *
˝
;

148 
i
;

150 i‡(!
‰ì_buckë_desc
)

151 
	`öô_buckë_desc
();

152 
bdesc
 = 
‰ì_buckë_desc
;

153 
‰ì_buckë_desc
 = 
bdesc
->
√xt
;

154 
bdesc
->
ªf˙t
 = 0;

155 
bdesc
->
buckë_size
 = 
bdú
->
size
;

156 
bdesc
->
∑ge
 = bdesc->
‰ì±r
 = (*Ë(
˝
 = (*Ë
	`gë_‰ì_∑ge
());

157 i‡(!
˝
)

158 
	`∑nic
("Out of memory in kernel malloc()");

160 
i
=
PAGE_SIZE
/
bdú
->
size
; i > 1; i--) {

161 *((**Ë
˝
Ë˝ + 
bdú
->
size
;

162 
˝
 +
bdú
->
size
;

164 *((**Ë
˝
) = 0;

165 
bdesc
->
√xt
 = 
bdú
->
chaö
;

166 
bdú
->
chaö
 = 
bdesc
;

168 
ªtvÆ
 = (*Ë
bdesc
->
‰ì±r
;

169 
bdesc
->
‰ì±r
 = *((**Ë
ªtvÆ
);

170 
bdesc
->
ªf˙t
++;

171 
	`°i
();

172 (
ªtvÆ
);

173 
	}
}

182 
	$‰ì_s
(*
obj
, 
size
)

184 *
∑ge
;

185 
_buckë_dú
 *
bdú
;

186 
buckë_desc
 *
bdesc
, *
¥ev
;

187 
bdesc
 = 
¥ev
 = 0;

189 
∑ge
 = (*Ë((Ë
obj
 & 0xfffff000);

191 
bdú
 = 
buckë_dú
; bdú->
size
; bdir++) {

192 
¥ev
 = 0;

194 i‡(
bdú
->
size
 < size)

196 
bdesc
 = 
bdú
->
chaö
; bdesc; bdes¯bdesc->
√xt
) {

197 i‡(
bdesc
->
∑ge
 ==Öage)

198 
found
;

199 
¥ev
 = 
bdesc
;

202 
	`∑nic
("BadáddressÖassedÅo kernel free_s()");

203 
found
:

204 
	`˛i
();

205 *((**)
obj
Ë
bdesc
->
‰ì±r
;

206 
bdesc
->
‰ì±r
 = 
obj
;

207 
bdesc
->
ªf˙t
--;

208 i‡(
bdesc
->
ªf˙t
 == 0) {

213 i‡((
¥ev
 && (¥ev->
√xt
 !
bdesc
)) ||

214 (!
¥ev
 && (
bdú
->
chaö
 !
bdesc
)))

215 
¥ev
 = 
bdú
->
chaö
;Öªv;Öªv =Öªv->
√xt
)

216 i‡(
¥ev
->
√xt
 =
bdesc
)

218 i‡(
¥ev
)

219 
¥ev
->
√xt
 = 
bdesc
->next;

221 i‡(
bdú
->
chaö
 !
bdesc
)

222 
	`∑nic
("malloc bucket chains corrupted");

223 
bdú
->
chaö
 = 
bdesc
->
√xt
;

225 
	`‰ì_∑ge
((Ë
bdesc
->
∑ge
);

226 
bdesc
->
√xt
 = 
‰ì_buckë_desc
;

227 
‰ì_buckë_desc
 = 
bdesc
;

229 
	`°i
();

231 
	}
}

	@linux-0.11/lib/open.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

9 
	~<°d¨g.h
>

11 
	$›í
(c⁄° * 
fûíame
, 
Êag
, ...)

13 
ªs
;

14 
va_li°
 
¨g
;

16 
	`va_°¨t
(
¨g
,
Êag
);

17 
	`__asm__
("int $0x80"

18 :"˜" (
ªs
)

19 :"0" (
__NR_›í
),"b" (
fûíame
),"c" (
Êag
),

20 "d" (
	`va_¨g
(
¨g
,)));

21 i‡(
ªs
>=0)

22  
ªs
;

23 
î∫o
 = -
ªs
;

25 
	}
}

	@linux-0.11/lib/setsid.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
_sysˇŒ0
(
pid_t
,
£tsid
)

	@linux-0.11/lib/string.c

7 #i‚de‡
__GNUC__


8 #îr‹ 
I
 
w™t
 
gcc
!

11 

	)

12 
	#ölöe


	)

13 

	)

14 
	#__LIBRARY__


	)

15 
	~<°rög.h
>

	@linux-0.11/lib/wait.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

9 
	~<sys/waô.h
>

11 
	$_sysˇŒ3
(
pid_t
,
waôpid
,pid_t,
pid
,*,
waô_°©
,,
›ti⁄s
)

13 
pid_t
 
	$waô
(* 
waô_°©
)

15  
	`waôpid
(-1,
waô_°©
,0);

16 
	}
}

	@linux-0.11/lib/write.c

7 
	#__LIBRARY__


	)

8 
	~<uni°d.h
>

10 
_sysˇŒ3
(,
wrôe
,,
fd
,c⁄° *,
buf
,
off_t
,
cou¡
)

	@linux-0.11/mm/memory.c

23 
	~<sig«l.h
>

25 
	~<asm/sy°em.h
>

27 
	~<löux/sched.h
>

28 
	~<löux/hód.h
>

29 
	~<löux/kî√l.h
>

31 
do_exô
(
code
);

33 
ölöe
 
	$oom
()

35 
	`¥ötk
("out of memory\n\r");

36 
	`do_exô
(
SIGSEGV
);

37 
	}
}

39 
	#övÆid©e
() \

40 
	`__asm__
("mov»%%óx,%%¸3"::"a" (0))

	)

43 
	#LOW_MEM
 0x100000

	)

44 
	#PAGING_MEMORY
 (15*1024*1024)

	)

45 
	#PAGING_PAGES
 (
PAGING_MEMORY
>>12)

	)

46 
	#MAP_NR
(
addr
Ë((◊ddr)-
LOW_MEM
)>>12)

	)

47 
	#USED
 100

	)

49 
	#CODE_SPACE
(
addr
) ((((addr)+4095)&~4095) < \

50 
cuºít
->
°¨t_code
 + cuºít->
íd_code
)

	)

52 
	gHIGH_MEMORY
 = 0;

54 
	#c›y_∑ge
(
‰om
,
to
) \

55 
	`__asm__
("˛d ;Ñï ; mov¶"::"S" (
‰om
),"D" (
to
),"c" (1024))

	)

57 
	gmem_m≠
 [ 
PAGING_PAGES
 ] = {0,};

63 
	$gë_‰ì_∑ge
()

65 
__ªs
 
	`asm
("ax");

67 
	`__asm__
("std ;Ñepne ; scasb\n\t"

78 :"˜" (
__ªs
)

79 :"0" (0),"i" (
LOW_MEM
),"c" (
PAGING_PAGES
),

80 "D" (
mem_m≠
+
PAGING_PAGES
-1)

82  
__ªs
;

83 
	}
}

89 
	$‰ì_∑ge
(
addr
)

91 i‡(
addr
 < 
LOW_MEM
) ;

92 i‡(
addr
 >
HIGH_MEMORY
)

93 
	`∑nic
("tryingÅo freeÇonexistentÖage");

94 
addr
 -
LOW_MEM
;

95 
addr
 >>= 12;

96 i‡(
mem_m≠
[
addr
]--) ;

97 
mem_m≠
[
addr
]=0;

98 
	`∑nic
("tryingÅo free freeÖage");

99 
	}
}

105 
	$‰ì_∑ge_èbÀs
(
‰om
,
size
)

107 *
pg_èbÀ
;

108 * 
dú
, 
ƒ
;

110 i‡(
‰om
 & 0x3fffff)

111 
	`∑nic
("free_page_tables called with wrongálignment");

112 i‡(!
‰om
)

113 
	`∑nic
("TryingÅo free up swapper memory space");

114 
size
 = (size + 0x3fffff) >> 22;

115 
dú
 = (*Ë((
‰om
>>20) & 0xffc);

116  ; 
size
-->0 ; 
dú
++) {

117 i‡(!(1 & *
dú
))

119 
pg_èbÀ
 = (*Ë(0xfffff000 & *
dú
);

120 
ƒ
=0 ;Çr<1024 ;Çr++) {

121 i‡(1 & *
pg_èbÀ
)

122 
	`‰ì_∑ge
(0xfffff000 & *
pg_èbÀ
);

123 *
pg_èbÀ
 = 0;

124 
pg_èbÀ
++;

126 
	`‰ì_∑ge
(0xfffff000 & *
dú
);

127 *
dú
 = 0;

129 
	`övÆid©e
();

131 
	}
}

150 
	$c›y_∑ge_èbÀs
(
‰om
,
to
,
size
)

152 * 
‰om_∑ge_èbÀ
;

153 * 
to_∑ge_èbÀ
;

154 
this_∑ge
;

155 * 
‰om_dú
, * 
to_dú
;

156 
ƒ
;

158 i‡((
‰om
&0x3fffffË|| (
to
&0x3fffff))

159 
	`∑nic
("copy_page_tables called with wrongálignment");

160 
‰om_dú
 = (*Ë((
‰om
>>20) & 0xffc);

161 
to_dú
 = (*Ë((
to
>>20) & 0xffc);

162 
size
 = (() (size+0x3fffff)) >> 22;

163  ; 
size
-->0 ; 
‰om_dú
++,
to_dú
++) {

164 i‡(1 & *
to_dú
)

165 
	`∑nic
("copy_page_tables:álreadyÉxist");

166 i‡(!(1 & *
‰om_dú
))

168 
‰om_∑ge_èbÀ
 = (*Ë(0xfffff000 & *
‰om_dú
);

169 i‡(!(
to_∑ge_èbÀ
 = (*Ë
	`gë_‰ì_∑ge
()))

171 *
to_dú
 = ((Ë
to_∑ge_èbÀ
) | 7;

172 
ƒ
 = (
‰om
==0)?0xA0:1024;

173  ; 
ƒ
-- > 0 ; 
‰om_∑ge_èbÀ
++,
to_∑ge_èbÀ
++) {

174 
this_∑ge
 = *
‰om_∑ge_èbÀ
;

175 i‡(!(1 & 
this_∑ge
))

177 
this_∑ge
 &= ~2;

178 *
to_∑ge_èbÀ
 = 
this_∑ge
;

179 i‡(
this_∑ge
 > 
LOW_MEM
) {

180 *
‰om_∑ge_èbÀ
 = 
this_∑ge
;

181 
this_∑ge
 -
LOW_MEM
;

182 
this_∑ge
 >>= 12;

183 
mem_m≠
[
this_∑ge
]++;

187 
	`övÆid©e
();

189 
	}
}

197 
	$put_∑ge
(
∑ge
,
addªss
)

199 
tmp
, *
∑ge_èbÀ
;

203 i‡(
∑ge
 < 
LOW_MEM
 ||Öagê>
HIGH_MEMORY
)

204 
	`¥ötk
("TryögÅÿpuà∑gê%∞© %p\n",
∑ge
,
addªss
);

205 i‡(
mem_m≠
[(
∑ge
-
LOW_MEM
)>>12] != 1)

206 
	`¥ötk
("mem_m≠ dißgªe†wôh %∞© %p\n",
∑ge
,
addªss
);

207 
∑ge_èbÀ
 = (*Ë((
addªss
>>20) & 0xffc);

208 i‡((*
∑ge_èbÀ
)&1)

209 
∑ge_èbÀ
 = (*) (0xfffff000 & *page_table);

211 i‡(!(
tmp
=
	`gë_‰ì_∑ge
()))

213 *
∑ge_èbÀ
 = 
tmp
|7;

214 
∑ge_èbÀ
 = (*Ë
tmp
;

216 
∑ge_èbÀ
[(
addªss
>>12Ë& 0x3ff] = 
∑ge
 | 7;

218  
∑ge
;

219 
	}
}

221 
	$un_wp_∑ge
(* 
èbÀ_íåy
)

223 
ﬁd_∑ge
,
√w_∑ge
;

225 
ﬁd_∑ge
 = 0xfffff000 & *
èbÀ_íåy
;

226 i‡(
ﬁd_∑ge
 >
LOW_MEM
 && 
mem_m≠
[
	`MAP_NR
(old_page)]==1) {

227 *
èbÀ_íåy
 |= 2;

228 
	`övÆid©e
();

231 i‡(!(
√w_∑ge
=
	`gë_‰ì_∑ge
()))

232 
	`oom
();

233 i‡(
ﬁd_∑ge
 >
LOW_MEM
)

234 
mem_m≠
[
	`MAP_NR
(
ﬁd_∑ge
)]--;

235 *
èbÀ_íåy
 = 
√w_∑ge
 | 7;

236 
	`övÆid©e
();

237 
	`c›y_∑ge
(
ﬁd_∑ge
,
√w_∑ge
);

238 
	}
}

247 
	$do_wp_∑ge
(
îr‹_code
,
addªss
)

252 i‡(
	`CODE_SPACE
(
addªss
))

253 
	`do_exô
(
SIGSEGV
);

255 
	`un_wp_∑ge
((*)

256 (((
addªss
>>10) & 0xffc) + (0xfffff000 &

257 *((*Ë((
addªss
>>20) &0xffc)))));

259 
	}
}

261 
	$wrôe_vîify
(
addªss
)

263 
∑ge
;

265 i‡(!–(
∑ge
 = *((*Ë((
addªss
>>20) & 0xffc)) )&1))

267 
∑ge
 &= 0xfffff000;

268 
∑ge
 +((
addªss
>>10) & 0xffc);

269 i‡((3 & *(*Ë
∑ge
) == 1)

270 
	`un_wp_∑ge
((*Ë
∑ge
);

272 
	}
}

274 
	$gë_em±y_∑ge
(
addªss
)

276 
tmp
;

278 i‡(!(
tmp
=
	`gë_‰ì_∑ge
()Ë|| !
	`put_∑ge
—mp,
addªss
)) {

279 
	`‰ì_∑ge
(
tmp
);

280 
	`oom
();

282 
	}
}

292 
	$åy_to_sh¨e
(
addªss
, 
èsk_°ru˘
 * 
p
)

294 
‰om
;

295 
to
;

296 
‰om_∑ge
;

297 
to_∑ge
;

298 
phys_addr
;

300 
‰om_∑ge
 = 
to_∑ge
 = ((
addªss
>>20) & 0xffc);

301 
‰om_∑ge
 +((
p
->
°¨t_code
>>20) & 0xffc);

302 
to_∑ge
 +((
cuºít
->
°¨t_code
>>20) & 0xffc);

304 
‰om
 = *(*Ë
‰om_∑ge
;

305 i‡(!(
‰om
 & 1))

307 
‰om
 &= 0xfffff000;

308 
‰om_∑ge
 = 
‰om
 + ((
addªss
>>10) & 0xffc);

309 
phys_addr
 = *(*Ë
‰om_∑ge
;

311 i‡((
phys_addr
 & 0x41) != 0x01)

313 
phys_addr
 &= 0xfffff000;

314 i‡(
phys_addr
 >
HIGH_MEMORY
 ||Öhys_add∏< 
LOW_MEM
)

316 
to
 = *(*Ë
to_∑ge
;

317 i‡(!(
to
 & 1)) {

318 i‡((
to
 = 
	`gë_‰ì_∑ge
()))

319 *(*Ë
to_∑ge
 = 
to
 | 7;

321 
	`oom
();

323 
to
 &= 0xfffff000;

324 
to_∑ge
 = 
to
 + ((
addªss
>>10) & 0xffc);

325 i‡(1 & *(*Ë
to_∑ge
)

326 
	`∑nic
("try_to_share:Åo_pageálreadyÉxists");

328 *(*Ë
‰om_∑ge
 &= ~2;

329 *(*Ë
to_∑ge
 = *(*Ë
‰om_∑ge
;

330 
	`övÆid©e
();

331 
phys_addr
 -
LOW_MEM
;

332 
phys_addr
 >>= 12;

333 
mem_m≠
[
phys_addr
]++;

335 
	}
}

345 
	$sh¨e_∑ge
(
addªss
)

347 
èsk_°ru˘
 ** 
p
;

349 i‡(!
cuºít
->
execuèbÀ
)

351 i‡(
cuºít
->
execuèbÀ
->
i_cou¡
 < 2)

353 
p
 = &
LAST_TASK
 ;Ö > &
FIRST_TASK
 ; --p) {

354 i‡(!*
p
)

356 i‡(
cuºít
 =*
p
)

358 i‡((*
p
)->
execuèbÀ
 !
cuºít
->executable)

360 i‡(
	`åy_to_sh¨e
(
addªss
,*
p
))

364 
	}
}

366 
	$do_no_∑ge
(
îr‹_code
,
addªss
)

368 
ƒ
[4];

369 
tmp
;

370 
∑ge
;

371 
block
,
i
;

373 
addªss
 &= 0xfffff000;

374 
tmp
 = 
addªss
 - 
cuºít
->
°¨t_code
;

375 i‡(!
cuºít
->
execuèbÀ
 || 
tmp
 >cuºít->
íd_d©a
) {

376 
	`gë_em±y_∑ge
(
addªss
);

379 i‡(
	`sh¨e_∑ge
(
tmp
))

381 i‡(!(
∑ge
 = 
	`gë_‰ì_∑ge
()))

382 
	`oom
();

384 
block
 = 1 + 
tmp
/
BLOCK_SIZE
;

385 
i
=0 ; i<4 ; 
block
++,i++)

386 
ƒ
[
i
] = 
	`bm≠
(
cuºít
->
execuèbÀ
,
block
);

387 
	`bªad_∑ge
(
∑ge
,
cuºít
->
execuèbÀ
->
i_dev
,
ƒ
);

388 
i
 = 
tmp
 + 4096 - 
cuºít
->
íd_d©a
;

389 
tmp
 = 
∑ge
 + 4096;

390 
i
-- > 0) {

391 
tmp
--;

392 *(*)
tmp
 = 0;

394 i‡(
	`put_∑ge
(
∑ge
,
addªss
))

396 
	`‰ì_∑ge
(
∑ge
);

397 
	`oom
();

398 
	}
}

400 
	$mem_öô
(
°¨t_mem
, 
íd_mem
)

402 
i
;

404 
HIGH_MEMORY
 = 
íd_mem
;

405 
i
=0 ; i<
PAGING_PAGES
 ; i++)

406 
mem_m≠
[
i
] = 
USED
;

407 
i
 = 
	`MAP_NR
(
°¨t_mem
);

408 
íd_mem
 -
°¨t_mem
;

409 
íd_mem
 >>= 12;

410 
íd_mem
-->0)

411 
mem_m≠
[
i
++]=0;

412 
	}
}

414 
	$ˇlc_mem
()

416 
i
,
j
,
k
,
‰ì
=0;

417 * 
pg_tbl
;

419 
i
=0 ; i<
PAGING_PAGES
 ; i++)

420 i‡(!
mem_m≠
[
i
]Ë
‰ì
++;

421 
	`¥ötk
("%dÖage†‰ì (o‡%d)\n\r",
‰ì
,
PAGING_PAGES
);

422 
i
=2 ; i<1024 ; i++) {

423 i‡(1&
pg_dú
[
i
]) {

424 
pg_tbl
=(*Ë(0xfffff000 & 
pg_dú
[
i
]);

425 
j
=
k
=0 ; j<1024 ; j++)

426 i‡(
pg_tbl
[
j
]&1)

427 
k
++;

428 
	`¥ötk
("Pg-dú[%d] u£†%dÖages\n",
i
,
k
);

431 
	}
}

	@/usr/include/a.out.h

1 #i‚de‡
__A_OUT_GNU_H__


2 
	#__A_OUT_GNU_H__


	)

4 
	~<bôs/a.out.h
>

6 
	#__GNU_EXEC_MACROS__


	)

8 
	sexec


10 
	ma_öfo
;

11 
	ma_ãxt
;

12 
	ma_d©a
;

13 
	ma_bss
;

14 
	ma_syms
;

15 
	ma_íåy
;

16 
	ma_åsize
;

17 
	ma_drsize
;

20 
	emachöe_ty≥


22 
	mM_OLDSUN2
 = 0,

23 
	mM_68010
 = 1,

24 
	mM_68020
 = 2,

25 
	mM_SPARC
 = 3,

26 
	mM_386
 = 100,

27 
	mM_MIPS1
 = 151,

28 
	mM_MIPS2
 = 152

31 
	#N_MAGIC
(
exec
Ë(”xec).
a_öfo
 & 0xffff)

	)

32 
	#N_MACHTYPE
(
exec
Ë((
machöe_ty≥
)((”xec).
a_öfo
 >> 16Ë& 0xff))

	)

33 
	#N_FLAGS
(
exec
Ë((”xec).
a_öfo
 >> 24Ë& 0xff)

	)

34 
	#N_SET_INFO
(
exec
, 
magic
, 
ty≥
, 
Êags
) \

35 ((
exec
).
a_öfo
 = ((
magic
) & 0xffff) \

36 | ((()(
ty≥
) & 0xff) << 16) \

37 | (((
Êags
Ë& 0xffË<< 24))

	)

38 
	#N_SET_MAGIC
(
exec
, 
magic
) \

39 ((
exec
).
a_öfo
 = (”xec).a_öfÿ& 0xffff0000Ë| ((
magic
Ë& 0xffff))

	)

40 
	#N_SET_MACHTYPE
(
exec
, 
machty≥
) \

41 ((
exec
).
a_öfo
 = \

42 ((
exec
).
a_öfo
&0xff00ffffË| (((()(
machty≥
))&0xffË<< 16))

	)

43 
	#N_SET_FLAGS
(
exec
, 
Êags
) \

44 ((
exec
).
a_öfo
 = \

45 ((
exec
).
a_öfo
&0x00ffffffË| (((
Êags
Ë& 0xffË<< 24))

	)

48 
	#OMAGIC
 0407

	)

50 
	#NMAGIC
 0410

	)

52 
	#ZMAGIC
 0413

	)

55 
	#QMAGIC
 0314

	)

57 
	#CMAGIC
 0421

	)

59 
	#N_TRSIZE
(
a
Ë(◊).
a_åsize
)

	)

60 
	#N_DRSIZE
(
a
Ë(◊).
a_drsize
)

	)

61 
	#N_SYMSIZE
(
a
Ë(◊).
a_syms
)

	)

62 
	#N_BADMAG
(
x
) \

63 (
	`N_MAGIC
(
x
Ë!
OMAGIC
 && N_MAGIC(xË!
NMAGIC
 \

64 && 
	`N_MAGIC
(
x
Ë!
ZMAGIC
 && N_MAGIC(xË!
QMAGIC
)

	)

65 
	#_N_HDROFF
(
x
Ë(1024 -  (
exec
))

	)

66 
	#N_TXTOFF
(
x
) \

67 (
	`N_MAGIC
(
x
Ë=
ZMAGIC
 ? 
	`_N_HDROFF
((x)Ë+  (
exec
) : \

68 (
	`N_MAGIC
(
x
Ë=
QMAGIC
 ? 0 :  (
exec
)))

	)

69 
	#N_DATOFF
(
x
Ë(
	`N_TXTOFF
(xË+ (x).
a_ãxt
)

	)

70 
	#N_TRELOFF
(
x
Ë(
	`N_DATOFF
(xË+ (x).
a_d©a
)

	)

71 
	#N_DRELOFF
(
x
Ë(
	`N_TRELOFF
(xË+ 
	`N_TRSIZE
(x))

	)

72 
	#N_SYMOFF
(
x
Ë(
	`N_DRELOFF
(xË+ 
	`N_DRSIZE
(x))

	)

73 
	#N_STROFF
(
x
Ë(
	`N_SYMOFF
(xË+ 
	`N_SYMSIZE
(x))

	)

76 
	#N_TXTADDR
(
x
Ë(
	`N_MAGIC
(xË=
QMAGIC
 ? 4096 : 0)

	)

79 
	#SEGMENT_SIZE
 1024

	)

81 
	#_N_SEGMENT_ROUND
(
x
Ë(((xË+ 
SEGMENT_SIZE
 - 1Ë& ~(SEGMENT_SIZE - 1))

	)

82 
	#_N_TXTENDADDR
(
x
Ë(
	`N_TXTADDR
(x)+(x).
a_ãxt
)

	)

84 
	#N_DATADDR
(
x
) \

85 (
	`N_MAGIC
(
x
)==
OMAGIC
? (
	`_N_TXTENDADDR
(x)) \

86 : (
	`_N_SEGMENT_ROUND
 (
	`_N_TXTENDADDR
(
x
))))

	)

87 
	#N_BSSADDR
(
x
Ë(
	`N_DATADDR
(xË+ (x).
a_d©a
)

	)

89 #i‡!
deföed
 (
N_NLIST_DECLARED
)

90 
	s∆i°


94 *
	mn_«me
;

95 
∆i°
 *
	mn_√xt
;

96 
	mn_°rx
;

97 } 
	mn_un
;

98 
	mn_ty≥
;

99 
	mn_Ÿhî
;

100 
	mn_desc
;

101 
	mn_vÆue
;

105 
	#N_UNDF
 0

	)

106 
	#N_ABS
 2

	)

107 
	#N_TEXT
 4

	)

108 
	#N_DATA
 6

	)

109 
	#N_BSS
 8

	)

110 
	#N_FN
 15

	)

111 
	#N_EXT
 1

	)

112 
	#N_TYPE
 036

	)

113 
	#N_STAB
 0340

	)

114 
	#N_INDR
 0xa

	)

115 
	#N_SETA
 0x14

	)

116 
	#N_SETT
 0x16

	)

117 
	#N_SETD
 0x18

	)

118 
	#N_SETB
 0x1A

	)

119 
	#N_SETV
 0x1C

	)

121 #i‡!
deföed
 (
N_RELOCATION_INFO_DECLARED
)

127 
	sªloˇti⁄_öfo


129 
	mr_addªss
;

130 
	mr_symbﬁnum
:24;

131 
	mr_p¸ñ
:1;

132 
	mr_Àngth
:2;

133 
	mr_exã∫
:1;

134 
	mr_∑d
:4;

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

105 #ifde‡
__USE_ATFILE


106 
	#AT_FDCWD
 -100

	)

109 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

110 
	#AT_REMOVEDIR
 0x200

	)

112 
	#AT_SYMLINK_FOLLOW
 0x400

	)

113 
	#AT_NO_AUTOMOUNT
 0x800

	)

115 
	#AT_EACCESS
 0x200

	)

124 
f˙é
 (
__fd
, 
__cmd
, ...);

132 #i‚de‡
__USE_FILE_OFFSET64


133 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

135 #ifde‡
__REDIRECT


136 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

137 
	`__n⁄nuŒ
 ((1));

139 
	#›í
 
›í64


	)

142 #ifde‡
__USE_LARGEFILE64


143 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

146 #ifde‡
__USE_ATFILE


156 #i‚de‡
__USE_FILE_OFFSET64


157 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

158 
	`__n⁄nuŒ
 ((2));

160 #ifde‡
__REDIRECT


161 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

162 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

164 
	#›í©
 
›í©64


	)

167 #ifde‡
__USE_LARGEFILE64


168 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

169 
	`__n⁄nuŒ
 ((2));

178 #i‚de‡
__USE_FILE_OFFSET64


179 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

181 #ifde‡
__REDIRECT


182 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

183 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

185 
	#¸ót
 
¸ót64


	)

188 #ifde‡
__USE_LARGEFILE64


189 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

192 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

193 && !
deföed
 
__USE_POSIX
))

202 
	#F_ULOCK
 0

	)

203 
	#F_LOCK
 1

	)

204 
	#F_TLOCK
 2

	)

205 
	#F_TEST
 3

	)

207 #i‚de‡
__USE_FILE_OFFSET64


208 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

210 #ifde‡
__REDIRECT


211 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

213 
	#lockf
 
lockf64


	)

216 #ifde‡
__USE_LARGEFILE64


217 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

221 #ifde‡
__USE_XOPEN2K


224 #i‚de‡
__USE_FILE_OFFSET64


225 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

226 
__advi£
Ë
__THROW
;

228 #ifde‡
__REDIRECT_NTH


229 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

230 
__off64_t
 
__Àn
, 
__advi£
),

231 
posix_Ádvi£64
);

233 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

236 #ifde‡
__USE_LARGEFILE64


237 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

238 
__advi£
Ë
__THROW
;

246 #i‚de‡
__USE_FILE_OFFSET64


247 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

249 #ifde‡
__REDIRECT


250 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

251 
__off64_t
 
__Àn
),

252 
posix_ÁŒoˇã64
);

254 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

257 #ifde‡
__USE_LARGEFILE64


258 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

264 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

265 && 
deföed
 
__va_¨g_∑ck_Àn


266 
	~<bôs/f˙é2.h
>

269 
__END_DECLS


	@/usr/include/linux/fdreg.h

1 #i‚de‡
_LINUX_FDREG_H


2 
	#_LINUX_FDREG_H


	)

9 #ifde‡
FDPATCHES


10 
	#FD_IOPORT
 
fdc_°©e
[
fdc
].
addªss


	)

14 
	#FD_IOPORT
 0x3f0

	)

18 
	#FD_STATUS
 (4 + 
FD_IOPORT
 )

	)

19 
	#FD_DATA
 (5 + 
FD_IOPORT
 )

	)

22 
	#FD_DOR
 (2 + 
FD_IOPORT
 )

	)

25 
	#FD_DIR
 (7 + 
FD_IOPORT
 )

	)

28 
	#FD_DCR
 (7 + 
FD_IOPORT
 )

	)

31 
	#STATUS_BUSYMASK
 0x0F

	)

32 
	#STATUS_BUSY
 0x10

	)

33 
	#STATUS_DMA
 0x20

	)

34 
	#STATUS_DIR
 0x40

	)

35 
	#STATUS_READY
 0x80

	)

38 
	#ST0_DS
 0x03

	)

39 
	#ST0_HA
 0x04

	)

40 
	#ST0_NR
 0x08

	)

41 
	#ST0_ECE
 0x10

	)

42 
	#ST0_SE
 0x20

	)

43 
	#ST0_INTR
 0xC0

	)

46 
	#ST1_MAM
 0x01

	)

47 
	#ST1_WP
 0x02

	)

48 
	#ST1_ND
 0x04

	)

49 
	#ST1_OR
 0x10

	)

50 
	#ST1_CRC
 0x20

	)

51 
	#ST1_EOC
 0x80

	)

54 
	#ST2_MAM
 0x01

	)

55 
	#ST2_BC
 0x02

	)

56 
	#ST2_SNS
 0x04

	)

57 
	#ST2_SEH
 0x08

	)

58 
	#ST2_WC
 0x10

	)

59 
	#ST2_CRC
 0x20

	)

60 
	#ST2_CM
 0x40

	)

63 
	#ST3_HA
 0x04

	)

64 
	#ST3_DS
 0x08

	)

65 
	#ST3_TZ
 0x10

	)

66 
	#ST3_RY
 0x20

	)

67 
	#ST3_WP
 0x40

	)

68 
	#ST3_FT
 0x80

	)

71 
	#FD_RECALIBRATE
 0x07

	)

72 
	#FD_SEEK
 0x0F

	)

73 
	#FD_READ
 0xE6

	)

74 
	#FD_WRITE
 0xC5

	)

75 
	#FD_SENSEI
 0x08

	)

76 
	#FD_SPECIFY
 0x03

	)

77 
	#FD_FORMAT
 0x4D

	)

78 
	#FD_VERSION
 0x10

	)

79 
	#FD_CONFIGURE
 0x13

	)

80 
	#FD_PERPENDICULAR
 0x12

	)

81 
	#FD_GETSTATUS
 0x04

	)

82 
	#FD_DUMPREGS
 0x0E

	)

83 
	#FD_READID
 0xEA

	)

84 
	#FD_UNLOCK
 0x14

	)

85 
	#FD_LOCK
 0x94

	)

86 
	#FD_RSEEK_OUT
 0x8‡

	)

87 
	#FD_RSEEK_IN
 0xc‡

	)

94 
	#FD_PARTID
 0x18

	)

95 
	#FD_SAVE
 0x2ê

	)

96 
	#FD_DRIVESPEC
 0x8ê

	)

100 
	#FD_RESTORE
 0x4ê

	)

101 
	#FD_POWERDOWN
 0x27

	)

102 
	#FD_FORMAT_N_WRITE
 0xe‡

	)

103 
	#FD_OPTION
 0x33

	)

107 
	#DMA_READ
 0x46

	)

108 
	#DMA_WRITE
 0x4A

	)

111 
	#FDC_NONE
 0x00

	)

112 
	#FDC_UNKNOWN
 0x10

	)

114 
	#FDC_8272A
 0x20

	)

115 
	#FDC_765ED
 0x30

	)

116 
	#FDC_82072
 0x40

	)

117 
	#FDC_82072A
 0x45

	)

118 
	#FDC_82077_ORIG
 0x51

	)

119 
	#FDC_82077
 0x52

	)

120 
	#FDC_82078_UNKN
 0x5‡

	)

121 
	#FDC_82078
 0x60

	)

122 
	#FDC_82078_1
 0x61

	)

123 
	#FDC_S82078B
 0x62

	)

125 
	#FDC_87306
 0x63

	)

136 
	#FD_RESET_DELAY
 20

	)

	@/usr/include/linux/fs.h

1 #i‚de‡
_LINUX_FS_H


2 
	#_LINUX_FS_H


	)

9 
	~<löux/limôs.h
>

10 
	~<löux/io˘l.h
>

23 #unde‡
NR_OPEN


24 
	#INR_OPEN
 1024

	)

26 
	#BLOCK_SIZE_BITS
 10

	)

27 
	#BLOCK_SIZE
 (1<<
BLOCK_SIZE_BITS
)

	)

29 
	#SEEK_SET
 0

	)

30 
	#SEEK_CUR
 1

	)

31 
	#SEEK_END
 2

	)

32 
	#SEEK_MAX
 
SEEK_END


	)

35 
	sfûes_°©_°ru˘
 {

36 
	mƒ_fûes
;

37 
	mƒ_‰ì_fûes
;

38 
	mmax_fûes
;

41 
	söodes_°©_t
 {

42 
	mƒ_öodes
;

43 
	mƒ_unu£d
;

44 
	mdummy
[5];

48 
	#NR_FILE
 8192

	)

50 
	#MAY_EXEC
 1

	)

51 
	#MAY_WRITE
 2

	)

52 
	#MAY_READ
 4

	)

53 
	#MAY_APPEND
 8

	)

54 
	#MAY_ACCESS
 16

	)

55 
	#MAY_OPEN
 32

	)

63 
	#FMODE_READ
 ((
fmode_t
)0x1)

	)

65 
	#FMODE_WRITE
 ((
fmode_t
)0x2)

	)

67 
	#FMODE_LSEEK
 ((
fmode_t
)0x4)

	)

69 
	#FMODE_PREAD
 ((
fmode_t
)0x8)

	)

71 
	#FMODE_PWRITE
 ((
fmode_t
)0x10)

	)

73 
	#FMODE_EXEC
 ((
fmode_t
)0x20)

	)

75 
	#FMODE_NDELAY
 ((
fmode_t
)0x40)

	)

77 
	#FMODE_EXCL
 ((
fmode_t
)0x80)

	)

80 
	#FMODE_WRITE_IOCTL
 ((
fmode_t
)0x100)

	)

88 
	#FMODE_NOCMTIME
 ((
fmode_t
)0x800)

	)

91 
	#FMODE_RANDOM
 ((
fmode_t
)0x1000)

	)

147 
	#RW_MASK
 1

	)

148 
	#RWA_MASK
 16

	)

149 
	#READ
 0

	)

150 
	#WRITE
 1

	)

151 
	#READA
 16

	)

152 
	#SWRITE
 17

	)

153 
	#READ_SYNC
 (
READ
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_UNPLUG
))

	)

154 
	#READ_META
 (
READ
 | (1 << 
BIO_RW_META
))

	)

155 
	#WRITE_SYNC_PLUG
 (
WRITE
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_NOIDLE
))

	)

156 
	#WRITE_SYNC
 (
WRITE_SYNC_PLUG
 | (1 << 
BIO_RW_UNPLUG
))

	)

157 
	#WRITE_ODIRECT_PLUG
 (
WRITE
 | (1 << 
BIO_RW_SYNCIO
))

	)

158 
	#WRITE_META
 (
WRITE
 | (1 << 
BIO_RW_META
))

	)

159 
	#SWRITE_SYNC_PLUG
 \

160 (
SWRITE
 | (1 << 
BIO_RW_SYNCIO
Ë| (1 << 
BIO_RW_NOIDLE
))

	)

161 
	#SWRITE_SYNC
 (
SWRITE_SYNC_PLUG
 | (1 << 
BIO_RW_UNPLUG
))

	)

162 
	#WRITE_BARRIER
 (
WRITE
 | (1 << 
BIO_RW_BARRIER
))

	)

168 
	#DISCARD_NOBARRIER
 (
WRITE
 | (1 << 
BIO_RW_DISCARD
))

	)

169 
	#DISCARD_BARRIER
 (
DISCARD_NOBARRIER
 | (1 << 
BIO_RW_BARRIER
))

	)

171 
	#SEL_IN
 1

	)

172 
	#SEL_OUT
 2

	)

173 
	#SEL_EX
 4

	)

176 
	#FS_REQUIRES_DEV
 1

	)

177 
	#FS_BINARY_MOUNTDATA
 2

	)

178 
	#FS_HAS_SUBTYPE
 4

	)

179 
	#FS_REVAL_DOT
 16384

	)

180 
	#FS_RENAME_DOES_D_MOVE
 32768

	)

187 
	#MS_RDONLY
 1

	)

188 
	#MS_NOSUID
 2

	)

189 
	#MS_NODEV
 4

	)

190 
	#MS_NOEXEC
 8

	)

191 
	#MS_SYNCHRONOUS
 16

	)

192 
	#MS_REMOUNT
 32

	)

193 
	#MS_MANDLOCK
 64

	)

194 
	#MS_DIRSYNC
 128

	)

195 
	#MS_NOATIME
 1024

	)

196 
	#MS_NODIRATIME
 2048

	)

197 
	#MS_BIND
 4096

	)

198 
	#MS_MOVE
 8192

	)

199 
	#MS_REC
 16384

	)

200 
	#MS_VERBOSE
 32768

	)

202 
	#MS_SILENT
 32768

	)

203 
	#MS_POSIXACL
 (1<<16Ë

	)

204 
	#MS_UNBINDABLE
 (1<<17Ë

	)

205 
	#MS_PRIVATE
 (1<<18Ë

	)

206 
	#MS_SLAVE
 (1<<19Ë

	)

207 
	#MS_SHARED
 (1<<20Ë

	)

208 
	#MS_RELATIME
 (1<<21Ë

	)

209 
	#MS_KERNMOUNT
 (1<<22Ë

	)

210 
	#MS_I_VERSION
 (1<<23Ë

	)

211 
	#MS_STRICTATIME
 (1<<24Ë

	)

212 
	#MS_BORN
 (1<<29)

	)

213 
	#MS_ACTIVE
 (1<<30)

	)

214 
	#MS_NOUSER
 (1<<31)

	)

219 
	#MS_RMT_MASK
 (
MS_RDONLY
|
MS_SYNCHRONOUS
|
MS_MANDLOCK
|
MS_I_VERSION
)

	)

224 
	#MS_MGC_VAL
 0xC0ED0000

	)

225 
	#MS_MGC_MSK
 0xffff0000

	)

229 
	#S_SYNC
 1

	)

230 
	#S_NOATIME
 2

	)

231 
	#S_APPEND
 4

	)

232 
	#S_IMMUTABLE
 8

	)

233 
	#S_DEAD
 16

	)

234 
	#S_NOQUOTA
 32

	)

235 
	#S_DIRSYNC
 64

	)

236 
	#S_NOCMTIME
 128

	)

237 
	#S_SWAPFILE
 256

	)

238 
	#S_PRIVATE
 512

	)

253 
	#__IS_FLG
(
öode
,
Êg
Ë((öode)->
i_sb
->
s_Êags
 & (Êg))

	)

255 
	#IS_RDONLY
(
öode
Ë((öode)->
i_sb
->
s_Êags
 & 
MS_RDONLY
)

	)

256 
	#IS_SYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
) || \

257 ((
öode
)->
i_Êags
 & 
S_SYNC
))

	)

258 
	#IS_DIRSYNC
(
öode
Ë(
	`__IS_FLG
(öode, 
MS_SYNCHRONOUS
|
MS_DIRSYNC
) || \

259 ((
öode
)->
i_Êags
 & (
S_SYNC
|
S_DIRSYNC
)))

	)

260 
	#IS_MANDLOCK
(
öode
Ë
	`__IS_FLG
(öode, 
MS_MANDLOCK
)

	)

261 
	#IS_NOATIME
(
öode
Ë
	`__IS_FLG
(öode, 
MS_RDONLY
|
MS_NOATIME
)

	)

262 
	#IS_I_VERSION
(
öode
Ë
	`__IS_FLG
(öode, 
MS_I_VERSION
)

	)

264 
	#IS_NOQUOTA
(
öode
Ë((öode)->
i_Êags
 & 
S_NOQUOTA
)

	)

265 
	#IS_APPEND
(
öode
Ë((öode)->
i_Êags
 & 
S_APPEND
)

	)

266 
	#IS_IMMUTABLE
(
öode
Ë((öode)->
i_Êags
 & 
S_IMMUTABLE
)

	)

267 
	#IS_POSIXACL
(
öode
Ë
	`__IS_FLG
(öode, 
MS_POSIXACL
)

	)

269 
	#IS_DEADDIR
(
öode
Ë((öode)->
i_Êags
 & 
S_DEAD
)

	)

270 
	#IS_NOCMTIME
(
öode
Ë((öode)->
i_Êags
 & 
S_NOCMTIME
)

	)

271 
	#IS_SWAPFILE
(
öode
Ë((öode)->
i_Êags
 & 
S_SWAPFILE
)

	)

272 
	#IS_PRIVATE
(
öode
Ë((öode)->
i_Êags
 & 
S_PRIVATE
)

	)

277 
	#BLKROSET
 
	`_IO
(0x12,93Ë

	)

278 
	#BLKROGET
 
	`_IO
(0x12,94Ë

	)

279 
	#BLKRRPART
 
	`_IO
(0x12,95Ë

	)

280 
	#BLKGETSIZE
 
	`_IO
(0x12,96Ë

	)

281 
	#BLKFLSBUF
 
	`_IO
(0x12,97Ë

	)

282 
	#BLKRASET
 
	`_IO
(0x12,98Ë

	)

283 
	#BLKRAGET
 
	`_IO
(0x12,99Ë

	)

284 
	#BLKFRASET
 
	`_IO
(0x12,100)

	)

285 
	#BLKFRAGET
 
	`_IO
(0x12,101)

	)

286 
	#BLKSECTSET
 
	`_IO
(0x12,102)

	)

287 
	#BLKSECTGET
 
	`_IO
(0x12,103)

	)

288 
	#BLKSSZGET
 
	`_IO
(0x12,104)

	)

290 
	#BLKPG
 
	`_IO
(0x12,105)

	)

294 
	#BLKELVGET
 
	`_IOR
(0x12,106,
size_t
)

	)

295 
	#BLKELVSET
 
	`_IOW
(0x12,107,
size_t
)

	)

300 
	#BLKBSZGET
 
	`_IOR
(0x12,112,
size_t
)

	)

301 
	#BLKBSZSET
 
	`_IOW
(0x12,113,
size_t
)

	)

302 
	#BLKGETSIZE64
 
	`_IOR
(0x12,114,
size_t
Ë

	)

303 
	#BLKTRACESETUP
 
	`_IOWR
(0x12,115,
blk_u£r_åa˚_£tup
)

	)

304 
	#BLKTRACESTART
 
	`_IO
(0x12,116)

	)

305 
	#BLKTRACESTOP
 
	`_IO
(0x12,117)

	)

306 
	#BLKTRACETEARDOWN
 
	`_IO
(0x12,118)

	)

307 
	#BLKDISCARD
 
	`_IO
(0x12,119)

	)

308 
	#BLKIOMIN
 
	`_IO
(0x12,120)

	)

309 
	#BLKIOOPT
 
	`_IO
(0x12,121)

	)

310 
	#BLKALIGNOFF
 
	`_IO
(0x12,122)

	)

311 
	#BLKPBSZGET
 
	`_IO
(0x12,123)

	)

312 
	#BLKDISCARDZEROES
 
	`_IO
(0x12,124)

	)

314 
	#BMAP_IOCTL
 1

	)

315 
	#FIBMAP
 
	`_IO
(0x00,1Ë

	)

316 
	#FIGETBSZ
 
	`_IO
(0x00,2Ë

	)

317 
	#FIFREEZE
 
	`_IOWR
('X', 119, Ë

	)

318 
	#FITHAW
 
	`_IOWR
('X', 120, Ë

	)

320 
	#FS_IOC_GETFLAGS
 
	`_IOR
('f', 1, )

	)

321 
	#FS_IOC_SETFLAGS
 
	`_IOW
('f', 2, )

	)

322 
	#FS_IOC_GETVERSION
 
	`_IOR
('v', 1, )

	)

323 
	#FS_IOC_SETVERSION
 
	`_IOW
('v', 2, )

	)

324 
	#FS_IOC_FIEMAP
 
	`_IOWR
('f', 11, 
fõm≠
)

	)

325 
	#FS_IOC32_GETFLAGS
 
	`_IOR
('f', 1, )

	)

326 
	#FS_IOC32_SETFLAGS
 
	`_IOW
('f', 2, )

	)

327 
	#FS_IOC32_GETVERSION
 
	`_IOR
('v', 1, )

	)

328 
	#FS_IOC32_SETVERSION
 
	`_IOW
('v', 2, )

	)

333 
	#FS_SECRM_FL
 0x00000001

	)

334 
	#FS_UNRM_FL
 0x00000002

	)

335 
	#FS_COMPR_FL
 0x00000004

	)

336 
	#FS_SYNC_FL
 0x00000008

	)

337 
	#FS_IMMUTABLE_FL
 0x00000010

	)

338 
	#FS_APPEND_FL
 0x00000020

	)

339 
	#FS_NODUMP_FL
 0x00000040

	)

340 
	#FS_NOATIME_FL
 0x00000080

	)

342 
	#FS_DIRTY_FL
 0x00000100

	)

343 
	#FS_COMPRBLK_FL
 0x00000200

	)

344 
	#FS_NOCOMP_FL
 0x00000400

	)

345 
	#FS_ECOMPR_FL
 0x00000800

	)

347 
	#FS_BTREE_FL
 0x00001000

	)

348 
	#FS_INDEX_FL
 0x00001000

	)

349 
	#FS_IMAGIC_FL
 0x00002000

	)

350 
	#FS_JOURNAL_DATA_FL
 0x00004000

	)

351 
	#FS_NOTAIL_FL
 0x00008000

	)

352 
	#FS_DIRSYNC_FL
 0x00010000

	)

353 
	#FS_TOPDIR_FL
 0x00020000

	)

354 
	#FS_EXTENT_FL
 0x00080000

	)

355 
	#FS_DIRECTIO_FL
 0x00100000

	)

356 
	#FS_RESERVED_FL
 0x80000000

	)

358 
	#FS_FL_USER_VISIBLE
 0x0003DFFF

	)

359 
	#FS_FL_USER_MODIFIABLE
 0x000380FF

	)

362 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

363 
	#SYNC_FILE_RANGE_WRITE
 2

	)

364 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

	@/usr/include/linux/hdreg.h

1 #i‚de‡
_LINUX_HDREG_H


2 
	#_LINUX_HDREG_H


	)

4 
	~<löux/ty≥s.h
>

10 
	#HDIO_DRIVE_CMD_HDR_SIZE
 (4 * (
__u8
))

	)

11 
	#HDIO_DRIVE_HOB_HDR_SIZE
 (8 * (
__u8
))

	)

12 
	#HDIO_DRIVE_TASK_HDR_SIZE
 (8 * (
__u8
))

	)

14 
	#IDE_DRIVE_TASK_NO_DATA
 0

	)

15 
	#IDE_DRIVE_TASK_INVALID
 -1

	)

16 
	#IDE_DRIVE_TASK_SET_XFER
 1

	)

17 
	#IDE_DRIVE_TASK_IN
 2

	)

18 
	#IDE_DRIVE_TASK_OUT
 3

	)

19 
	#IDE_DRIVE_TASK_RAW_WRITE
 4

	)

24 
	#IDE_TASKFILE_STD_IN_FLAGS
 0xFE

	)

25 
	#IDE_HOB_STD_IN_FLAGS
 0x3C

	)

26 
	#IDE_TASKFILE_STD_OUT_FLAGS
 0xFE

	)

27 
	#IDE_HOB_STD_OUT_FLAGS
 0x3C

	)

29 
	tèsk_i‹eg_t
;

30 
	tßè_i‹eg_t
;

32 
	uide_ªg_vÆid_s
 {

33 
	mÆl
 : 16;

35 
	md©a
 : 1;

36 
	mîr‹_„©uª
 : 1;

37 
	m£˘‹
 : 1;

38 
	mn£˘‹
 : 1;

39 
	mlcyl
 : 1;

40 
	mhcyl
 : 1;

41 
	m£À˘
 : 1;

42 
	m°©us_comm™d
 : 1;

44 
	md©a_hob
 : 1;

45 
	mîr‹_„©uª_hob
 : 1;

46 
	m£˘‹_hob
 : 1;

47 
	mn£˘‹_hob
 : 1;

48 
	mlcyl_hob
 : 1;

49 
	mhcyl_hob
 : 1;

50 
	m£À˘_hob
 : 1;

51 
	mc⁄åﬁ_hob
 : 1;

52 } 
	mb
;

53 } 
	tide_ªg_vÆid_t
;

55 
	side_èsk_ªque°_s
 {

56 
__u8
 
	mio_p‹ts
[8];

57 
__u8
 
	mhob_p‹ts
[8];

58 
ide_ªg_vÆid_t
 
	mout_Êags
;

59 
ide_ªg_vÆid_t
 
	mö_Êags
;

60 
	md©a_pha£
;

61 
	mªq_cmd
;

62 
	mout_size
;

63 
	mö_size
;

64 } 
	tide_èsk_ªque°_t
;

66 
	side_io˘l_ªque°_s
 {

67 
ide_èsk_ªque°_t
 *
	mèsk_ªque°
;

68 *
	mout_buf„r
;

69 *
	mö_buf„r
;

70 } 
	tide_io˘l_ªque°_t
;

72 
	shd_drive_cmd_hdr
 {

73 
__u8
 
	mcomm™d
;

74 
__u8
 
	m£˘‹_numbî
;

75 
__u8
 
	m„©uª
;

76 
__u8
 
	m£˘‹_cou¡
;

79 
	shd_drive_èsk_hdr
 {

80 
__u8
 
	md©a
;

81 
__u8
 
	m„©uª
;

82 
__u8
 
	m£˘‹_cou¡
;

83 
__u8
 
	m£˘‹_numbî
;

84 
__u8
 
	mlow_cylödî
;

85 
__u8
 
	mhigh_cylödî
;

86 
__u8
 
	mdevi˚_hód
;

87 
__u8
 
	mcomm™d
;

88 } 
	tèsk_°ru˘_t
;

90 
	shd_drive_hob_hdr
 {

91 
__u8
 
	md©a
;

92 
__u8
 
	m„©uª
;

93 
__u8
 
	m£˘‹_cou¡
;

94 
__u8
 
	m£˘‹_numbî
;

95 
__u8
 
	mlow_cylödî
;

96 
__u8
 
	mhigh_cylödî
;

97 
__u8
 
	mdevi˚_hód
;

98 
__u8
 
	mc⁄åﬁ
;

99 } 
	thob_°ru˘_t
;

101 
	#TASKFILE_NO_DATA
 0x0000

	)

103 
	#TASKFILE_IN
 0x0001

	)

104 
	#TASKFILE_MULTI_IN
 0x0002

	)

106 
	#TASKFILE_OUT
 0x0004

	)

107 
	#TASKFILE_MULTI_OUT
 0x0008

	)

108 
	#TASKFILE_IN_OUT
 0x0010

	)

110 
	#TASKFILE_IN_DMA
 0x0020

	)

111 
	#TASKFILE_OUT_DMA
 0x0040

	)

112 
	#TASKFILE_IN_DMAQ
 0x0080

	)

113 
	#TASKFILE_OUT_DMAQ
 0x0100

	)

115 
	#TASKFILE_P_IN
 0x0200

	)

116 
	#TASKFILE_P_OUT
 0x0400

	)

117 
	#TASKFILE_P_IN_DMA
 0x0800

	)

118 
	#TASKFILE_P_OUT_DMA
 0x1000

	)

119 
	#TASKFILE_P_IN_DMAQ
 0x2000

	)

120 
	#TASKFILE_P_OUT_DMAQ
 0x4000

	)

121 
	#TASKFILE_48
 0x8000

	)

122 
	#TASKFILE_INVALID
 0x7fff

	)

125 
	#WIN_NOP
 0x00

	)

129 
	#CFA_REQ_EXT_ERROR_CODE
 0x03

	)

133 
	#WIN_SRST
 0x08

	)

134 
	#WIN_DEVICE_RESET
 0x08

	)

138 
	#WIN_RECAL
 0x10

	)

139 
	#WIN_RESTORE
 
WIN_RECAL


	)

143 
	#WIN_READ
 0x20

	)

144 
	#WIN_READ_ONCE
 0x21

	)

145 
	#WIN_READ_LONG
 0x22

	)

146 
	#WIN_READ_LONG_ONCE
 0x23

	)

147 
	#WIN_READ_EXT
 0x24

	)

148 
	#WIN_READDMA_EXT
 0x25

	)

149 
	#WIN_READDMA_QUEUED_EXT
 0x26

	)

150 
	#WIN_READ_NATIVE_MAX_EXT
 0x27

	)

154 
	#WIN_MULTREAD_EXT
 0x29

	)

158 
	#WIN_WRITE
 0x30

	)

159 
	#WIN_WRITE_ONCE
 0x31

	)

160 
	#WIN_WRITE_LONG
 0x32

	)

161 
	#WIN_WRITE_LONG_ONCE
 0x33

	)

162 
	#WIN_WRITE_EXT
 0x34

	)

163 
	#WIN_WRITEDMA_EXT
 0x35

	)

164 
	#WIN_WRITEDMA_QUEUED_EXT
 0x36

	)

165 
	#WIN_SET_MAX_EXT
 0x37

	)

166 
	#CFA_WRITE_SECT_WO_ERASE
 0x38

	)

167 
	#WIN_MULTWRITE_EXT
 0x39

	)

171 
	#WIN_WRITE_VERIFY
 0x3C

	)

175 
	#WIN_VERIFY
 0x40

	)

176 
	#WIN_VERIFY_ONCE
 0x41

	)

177 
	#WIN_VERIFY_EXT
 0x42

	)

181 
	#WIN_FORMAT
 0x50

	)

185 
	#WIN_INIT
 0x60

	)

189 
	#WIN_SEEK
 0x70

	)

191 
	#CFA_TRANSLATE_SECTOR
 0x87

	)

192 
	#WIN_DIAGNOSE
 0x90

	)

193 
	#WIN_SPECIFY
 0x91

	)

194 
	#WIN_DOWNLOAD_MICROCODE
 0x92

	)

195 
	#WIN_STANDBYNOW2
 0x94

	)

196 
	#WIN_STANDBY2
 0x96

	)

197 
	#WIN_SETIDLE2
 0x97

	)

198 
	#WIN_CHECKPOWERMODE2
 0x98

	)

199 
	#WIN_SLEEPNOW2
 0x99

	)

203 
	#WIN_PACKETCMD
 0xA0

	)

204 
	#WIN_PIDENTIFY
 0xA1

	)

205 
	#WIN_QUEUED_SERVICE
 0xA2

	)

206 
	#WIN_SMART
 0xB0

	)

207 
	#CFA_ERASE_SECTORS
 0xC0

	)

208 
	#WIN_MULTREAD
 0xC4

	)

209 
	#WIN_MULTWRITE
 0xC5

	)

210 
	#WIN_SETMULT
 0xC6

	)

211 
	#WIN_READDMA_QUEUED
 0xC7

	)

212 
	#WIN_READDMA
 0xC8

	)

213 
	#WIN_READDMA_ONCE
 0xC9

	)

214 
	#WIN_WRITEDMA
 0xCA

	)

215 
	#WIN_WRITEDMA_ONCE
 0xCB

	)

216 
	#WIN_WRITEDMA_QUEUED
 0xCC

	)

217 
	#CFA_WRITE_MULTI_WO_ERASE
 0xCD

	)

218 
	#WIN_GETMEDIASTATUS
 0xDA

	)

219 
	#WIN_ACKMEDIACHANGE
 0xDB

	)

220 
	#WIN_POSTBOOT
 0xDC

	)

221 
	#WIN_PREBOOT
 0xDD

	)

222 
	#WIN_DOORLOCK
 0xDE

	)

223 
	#WIN_DOORUNLOCK
 0xDF

	)

224 
	#WIN_STANDBYNOW1
 0xE0

	)

225 
	#WIN_IDLEIMMEDIATE
 0xE1

	)

226 
	#WIN_STANDBY
 0xE2

	)

227 
	#WIN_SETIDLE1
 0xE3

	)

228 
	#WIN_READ_BUFFER
 0xE4

	)

229 
	#WIN_CHECKPOWERMODE1
 0xE5

	)

230 
	#WIN_SLEEPNOW1
 0xE6

	)

231 
	#WIN_FLUSH_CACHE
 0xE7

	)

232 
	#WIN_WRITE_BUFFER
 0xE8

	)

233 
	#WIN_WRITE_SAME
 0xE9

	)

235 
	#WIN_FLUSH_CACHE_EXT
 0xEA

	)

236 
	#WIN_IDENTIFY
 0xEC

	)

237 
	#WIN_MEDIAEJECT
 0xED

	)

238 
	#WIN_IDENTIFY_DMA
 0xEE

	)

239 
	#WIN_SETFEATURES
 0xEF

	)

240 
	#EXABYTE_ENABLE_NEST
 0xF0

	)

241 
	#WIN_SECURITY_SET_PASS
 0xF1

	)

242 
	#WIN_SECURITY_UNLOCK
 0xF2

	)

243 
	#WIN_SECURITY_ERASE_PREPARE
 0xF3

	)

244 
	#WIN_SECURITY_ERASE_UNIT
 0xF4

	)

245 
	#WIN_SECURITY_FREEZE_LOCK
 0xF5

	)

246 
	#WIN_SECURITY_DISABLE
 0xF6

	)

247 
	#WIN_READ_NATIVE_MAX
 0xF8

	)

248 
	#WIN_SET_MAX
 0xF9

	)

249 
	#DISABLE_SEAGATE
 0xFB

	)

253 
	#SMART_READ_VALUES
 0xD0

	)

254 
	#SMART_READ_THRESHOLDS
 0xD1

	)

255 
	#SMART_AUTOSAVE
 0xD2

	)

256 
	#SMART_SAVE
 0xD3

	)

257 
	#SMART_IMMEDIATE_OFFLINE
 0xD4

	)

258 
	#SMART_READ_LOG_SECTOR
 0xD5

	)

259 
	#SMART_WRITE_LOG_SECTOR
 0xD6

	)

260 
	#SMART_WRITE_THRESHOLDS
 0xD7

	)

261 
	#SMART_ENABLE
 0xD8

	)

262 
	#SMART_DISABLE
 0xD9

	)

263 
	#SMART_STATUS
 0xDA

	)

264 
	#SMART_AUTO_OFFLINE
 0xDB

	)

268 
	#SMART_LCYL_PASS
 0x4F

	)

269 
	#SMART_HCYL_PASS
 0xC2

	)

272 
	#SETFEATURES_EN_8BIT
 0x01

	)

273 
	#SETFEATURES_EN_WCACHE
 0x02

	)

274 
	#SETFEATURES_DIS_DEFECT
 0x04

	)

275 
	#SETFEATURES_EN_APM
 0x05

	)

276 
	#SETFEATURES_EN_SAME_R
 0x22

	)

277 
	#SETFEATURES_DIS_MSN
 0x31

	)

278 
	#SETFEATURES_DIS_RETRY
 0x33

	)

279 
	#SETFEATURES_EN_AAM
 0x42

	)

280 
	#SETFEATURES_RW_LONG
 0x44

	)

281 
	#SETFEATURES_SET_CACHE
 0x54

	)

282 
	#SETFEATURES_DIS_RLA
 0x55

	)

283 
	#SETFEATURES_EN_RI
 0x5D

	)

284 
	#SETFEATURES_EN_SI
 0x5E

	)

285 
	#SETFEATURES_DIS_RPOD
 0x66

	)

286 
	#SETFEATURES_DIS_ECC
 0x77

	)

287 
	#SETFEATURES_DIS_8BIT
 0x81

	)

288 
	#SETFEATURES_DIS_WCACHE
 0x82

	)

289 
	#SETFEATURES_EN_DEFECT
 0x84

	)

290 
	#SETFEATURES_DIS_APM
 0x85

	)

291 
	#SETFEATURES_EN_ECC
 0x88

	)

292 
	#SETFEATURES_EN_MSN
 0x95

	)

293 
	#SETFEATURES_EN_RETRY
 0x99

	)

294 
	#SETFEATURES_EN_RLA
 0xAA

	)

295 
	#SETFEATURES_PREFETCH
 0xAB

	)

296 
	#SETFEATURES_EN_REST
 0xAC

	)

297 
	#SETFEATURES_4B_RW_LONG
 0xBB

	)

298 
	#SETFEATURES_DIS_AAM
 0xC2

	)

299 
	#SETFEATURES_EN_RPOD
 0xCC

	)

300 
	#SETFEATURES_DIS_RI
 0xDD

	)

301 
	#SETFEATURES_EN_SAME_M
 0xDD

	)

302 
	#SETFEATURES_DIS_SI
 0xDE

	)

306 
	#SECURITY_SET_PASSWORD
 0xBA

	)

307 
	#SECURITY_UNLOCK
 0xBB

	)

308 
	#SECURITY_ERASE_PREPARE
 0xBC

	)

309 
	#SECURITY_ERASE_UNIT
 0xBD

	)

310 
	#SECURITY_FREEZE_LOCK
 0xBE

	)

311 
	#SECURITY_DISABLE_PASSWORD
 0xBF

	)

313 
	shd_geomëry
 {

314 
	mhóds
;

315 
	m£˘‹s
;

316 
	mcylödîs
;

317 
	m°¨t
;

321 
	#HDIO_GETGEO
 0x0301

	)

322 
	#HDIO_GET_UNMASKINTR
 0x0302

	)

323 
	#HDIO_GET_MULTCOUNT
 0x0304

	)

324 
	#HDIO_GET_QDMA
 0x0305

	)

326 
	#HDIO_SET_XFER
 0x0306

	)

328 
	#HDIO_OBSOLETE_IDENTITY
 0x0307

	)

329 
	#HDIO_GET_KEEPSETTINGS
 0x0308

	)

330 
	#HDIO_GET_32BIT
 0x0309

	)

331 
	#HDIO_GET_NOWERR
 0x030®

	)

332 
	#HDIO_GET_DMA
 0x030b

	)

333 
	#HDIO_GET_NICE
 0x030¯

	)

334 
	#HDIO_GET_IDENTITY
 0x030d

	)

335 
	#HDIO_GET_WCACHE
 0x030ê

	)

336 
	#HDIO_GET_ACOUSTIC
 0x030‡

	)

337 
	#HDIO_GET_ADDRESS
 0x0310

	)

339 
	#HDIO_GET_BUSSTATE
 0x031®

	)

340 
	#HDIO_TRISTATE_HWIF
 0x031b

	)

341 
	#HDIO_DRIVE_RESET
 0x031¯

	)

342 
	#HDIO_DRIVE_TASKFILE
 0x031d

	)

343 
	#HDIO_DRIVE_TASK
 0x031ê

	)

344 
	#HDIO_DRIVE_CMD
 0x031‡

	)

345 
	#HDIO_DRIVE_CMD_AEB
 
HDIO_DRIVE_TASK


	)

348 
	#HDIO_SET_MULTCOUNT
 0x0321

	)

349 
	#HDIO_SET_UNMASKINTR
 0x0322

	)

350 
	#HDIO_SET_KEEPSETTINGS
 0x0323

	)

351 
	#HDIO_SET_32BIT
 0x0324

	)

352 
	#HDIO_SET_NOWERR
 0x0325

	)

353 
	#HDIO_SET_DMA
 0x0326

	)

354 
	#HDIO_SET_PIO_MODE
 0x0327

	)

355 
	#HDIO_SCAN_HWIF
 0x0328

	)

356 
	#HDIO_UNREGISTER_HWIF
 0x032®

	)

357 
	#HDIO_SET_NICE
 0x0329

	)

358 
	#HDIO_SET_WCACHE
 0x032b

	)

359 
	#HDIO_SET_ACOUSTIC
 0x032¯

	)

360 
	#HDIO_SET_BUSSTATE
 0x032d

	)

361 
	#HDIO_SET_QDMA
 0x032ê

	)

362 
	#HDIO_SET_ADDRESS
 0x032‡

	)

366 
	mBUSSTATE_OFF
 = 0,

367 
	mBUSSTATE_ON
,

368 
	mBUSSTATE_TRISTATE


377 
	#__NEW_HD_DRIVE_ID


	)

385 
	shd_driveid
 {

386 
	mc⁄fig
;

387 
	mcyls
;

388 
	mª£rved2
;

389 
	mhóds
;

390 
	måack_byãs
;

391 
	m£˘‹_byãs
;

392 
	m£˘‹s
;

393 
	mvíd‹0
;

394 
	mvíd‹1
;

395 
	mvíd‹2
;

396 
	m£rül_no
[20];

397 
	mbuf_ty≥
;

398 
	mbuf_size
;

401 
	mecc_byãs
;

402 
	mfw_ªv
[8];

403 
	mmodñ
[40];

404 
	mmax_mu…£˘
;

405 
	mvíd‹3
;

406 
	mdw‹d_io
;

407 
	mvíd‹4
;

408 
	mˇ∑bûôy
;

414 
	mª£rved50
;

415 
	mvíd‹5
;

416 
	mtPIO
;

417 
	mvíd‹6
;

418 
	mtDMA
;

419 
	mfõld_vÆid
;

424 
	mcur_cyls
;

425 
	mcur_hóds
;

426 
	mcur_£˘‹s
;

427 
	mcur_ˇ∑côy0
;

428 
	mcur_ˇ∑côy1
;

429 
	mmu…£˘
;

430 
	mmu…£˘_vÆid
;

431 
	mlba_ˇ∑côy
;

432 
	mdma_1w‹d
;

433 
	mdma_mw‹d
;

434 
	meide_pio_modes
;

435 
	meide_dma_mö
;

436 
	meide_dma_time
;

437 
	meide_pio
;

438 
	meide_pio_i‹dy
;

439 
	mw‹ds69_70
[2];

442 
	mw‹ds71_74
[4];

445 
	mqueue_dïth
;

449 
	mw‹ds76_79
[4];

450 
	mmaj‹_ªv_num
;

451 
	mmö‹_ªv_num
;

452 
	mcomm™d_£t_1
;

470 
	mcomm™d_£t_2
;

488 
	mcfs£
;

500 
	mcfs_íabÀ_1
;

519 
	mcfs_íabÀ_2
;

538 
	mcsf_deÁu…
;

550 
	mdma_u…ø
;

551 
	må£uc
;

552 
	måsEuc
;

553 
	mCurAPMvÆues
;

554 
	mm¥c
;

555 
	mhw_c⁄fig
;

573 
	macou°ic
;

577 
	mm§qs
;

578 
	msx„π
;

579 
	mßl
;

580 
	m•g
;

581 
	mlba_ˇ∑côy_2
;

582 
	mw‹ds104_125
[22];

583 
	mœ°_lun
;

584 
	mw‹d127
;

592 
	mdlf
;

604 
	mcsfo
;

612 
	mw‹ds130_155
[26];

613 
	mw‹d156
;

614 
	mw‹ds157_159
[3];

615 
	mcÁ_powî
;

622 
	mw‹ds161_175
[15];

623 
	mw‹ds176_205
[30];

624 
	mw‹ds206_254
[49];

625 
	möãgrôy_w‹d
;

636 
	#IDE_NICE_DSC_OVERLAP
 (0Ë

	)

637 
	#IDE_NICE_ATAPI_OVERLAP
 (1Ë

	)

638 
	#IDE_NICE_1
 (3Ë

	)

639 
	#IDE_NICE_0
 (2Ë

	)

640 
	#IDE_NICE_2
 (4Ë

	)

	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

7 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

8 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

12 
	#SI_LOAD_SHIFT
 16

	)

13 
	ssysöfo
 {

14 
	mu±ime
;

15 
	mlﬂds
[3];

16 
	mtŸÆøm
;

17 
	m‰ìøm
;

18 
	msh¨edøm
;

19 
	mbuf„ºam
;

20 
	mtŸÆsw≠
;

21 
	m‰ìsw≠
;

22 
	m¥ocs
;

23 
	m∑d
;

24 
	mtŸÆhigh
;

25 
	m‰ìhigh
;

26 
	mmem_unô
;

27 
	m_f
[20-2*()-()];

31 
	#BUILD_BUG_ON
(
c⁄dôi⁄
Ë(()
	`BUILD_BUG_ON_ZERO
(c⁄dôi⁄))

	)

34 
	#MAYBE_BUILD_BUG_ON
(
c⁄d
Ë(()([1 - 2 * !!(c⁄d)]))

	)

37 
	#BUILD_BUG_ON_NOT_POWER_OF_2
(
n
) \

38 
	`BUILD_BUG_ON
((
n
Ë=0 || ((“Ë& (“Ë- 1)Ë!0))

	)

44 
	#BUILD_BUG_ON_ZERO
(
e
Ë((°ru˘ { :-!!”); }))

	)

45 
	#BUILD_BUG_ON_NULL
(
e
Ë((*)(°ru˘ { :-!!”); }))

	)

48 
	#__FUNCTION__
 (
__func__
)

	)

51 #ifde‡
CONFIG_NUMA


52 
	#NUMA_BUILD
 1

	)

54 
	#NUMA_BUILD
 0

	)

58 #ifde‡
CONFIG_FTRACE_MCOUNT_RECORD


59 
	#REBUILD_DUE_TO_FTRACE_MCOUNT_RECORD


	)

	@/usr/include/linux/sched.h

1 #i‚de‡
_LINUX_SCHED_H


2 
	#_LINUX_SCHED_H


	)

7 
	#CSIGNAL
 0x000000f‡

	)

8 
	#CLONE_VM
 0x00000100

	)

9 
	#CLONE_FS
 0x00000200

	)

10 
	#CLONE_FILES
 0x00000400

	)

11 
	#CLONE_SIGHAND
 0x00000800

	)

12 
	#CLONE_PTRACE
 0x00002000

	)

13 
	#CLONE_VFORK
 0x00004000

	)

14 
	#CLONE_PARENT
 0x00008000

	)

15 
	#CLONE_THREAD
 0x00010000

	)

16 
	#CLONE_NEWNS
 0x00020000

	)

17 
	#CLONE_SYSVSEM
 0x00040000

	)

18 
	#CLONE_SETTLS
 0x00080000

	)

19 
	#CLONE_PARENT_SETTID
 0x00100000

	)

20 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

21 
	#CLONE_DETACHED
 0x00400000

	)

22 
	#CLONE_UNTRACED
 0x00800000

	)

23 
	#CLONE_CHILD_SETTID
 0x01000000

	)

24 
	#CLONE_STOPPED
 0x02000000

	)

25 
	#CLONE_NEWUTS
 0x04000000

	)

26 
	#CLONE_NEWIPC
 0x08000000

	)

27 
	#CLONE_NEWUSER
 0x10000000

	)

28 
	#CLONE_NEWPID
 0x20000000

	)

29 
	#CLONE_NEWNET
 0x40000000

	)

30 
	#CLONE_IO
 0x80000000

	)

35 
	#SCHED_NORMAL
 0

	)

36 
	#SCHED_FIFO
 1

	)

37 
	#SCHED_RR
 2

	)

38 
	#SCHED_BATCH
 3

	)

40 
	#SCHED_IDLE
 5

	)

42 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

	@/usr/include/linux/tty.h

1 #i‚de‡
_LINUX_TTY_H


2 
	#_LINUX_TTY_H


	)

	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/times.h

23 #i‚def 
_SYS_TIMES_H


24 
	#_SYS_TIMES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	#__√ed_˛ock_t


	)

29 
	~<time.h
>

32 
__BEGIN_DECLS


35 
	stms


37 
˛ock_t
 
	mtms_utime
;

38 
˛ock_t
 
	mtms_°ime
;

40 
˛ock_t
 
	mtms_cutime
;

41 
˛ock_t
 
	mtms_c°ime
;

49 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

51 
__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/sys/utsname.h

23 #i‚def 
_SYS_UTSNAME_H


24 
	#_SYS_UTSNAME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ut¢ame.h
>

32 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


33 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

35 #i‚de‡
_UTSNAME_NODENAME_LENGTH


36 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

38 #i‚de‡
_UTSNAME_RELEASE_LENGTH


39 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

41 #i‚de‡
_UTSNAME_VERSION_LENGTH


42 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

44 #i‚de‡
_UTSNAME_MACHINE_LENGTH


45 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

49 
	sut¢ame


52 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

55 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

58 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

60 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

63 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

65 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

67 #ifde‡
__USE_GNU


68 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

70 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

75 #ifde‡
__USE_SVID


77 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

82 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

85 
__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROW
;

173 #ifde‡
__USE_BSD


175 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

176 
rußge
 *
__ußge
Ë
__THROW
;

180 
__END_DECLS


	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

444 || 
deföed
 
__USE_BSD


449 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

450 
__THROW
;

457 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

466 
	`∑u£
 ();

470 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

471 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

473 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


475 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

480 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #ifde‡
__USE_ATFILE


488 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

489 
__gid_t
 
__group
, 
__Êag
)

490 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

494 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

508 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

510 #ifdef 
__USE_GNU


514 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

517 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

518 || 
deföed
 
__USE_BSD


522 *
	$gëwd
 (*
__buf
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

528 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

531 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

533 #ifde‡
__USE_GNU


536 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

540 **
__ívú⁄
;

541 #ifde‡
__USE_GNU


542 **
ívú⁄
;

548 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

549 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 #ifde‡
__USE_XOPEN2K8


554 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

555 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

570 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifde‡
__USE_GNU


587 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

588 *
__c⁄°
 
__ívp
[])

589 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

593 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


595 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

600 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

606 
	~<bôs/c⁄‚ame.h
>

609 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

610 
__THROW
 
	`__n⁄nuŒ
 ((1));

613 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

616 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

618 #ifdef 
__USE_POSIX2


620 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

625 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

628 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

632 #i‚de‡
__FAVOR_BSD


633 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

635 #ifde‡
__REDIRECT_NTH


636 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

638 
	#gëpgΩ
 
__gëpgid


	)

643 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

644 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


645 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

652 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

654 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 #i‚de‡
__FAVOR_BSD


669 
	$£çgΩ
 (Ë
__THROW
;

674 #ifde‡
__REDIRECT_NTH


675 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

677 
	#£çgΩ
 
£çgid


	)

686 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


690 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

694 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

697 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

700 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

708 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

710 #ifdef 
__USE_GNU


712 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

719 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

721 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


724 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


729 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

736 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


741 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

744 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


746 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

749 #ifde‡
__USE_GNU


752 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

753 
__THROW
;

757 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

758 
__THROW
;

762 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

763 
__THROW
;

767 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

768 
__THROW
;

775 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

777 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

778 || 
deföed
 
__USE_BSD


783 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 *
	$ây«me
 (
__fd
Ë
__THROW
;

793 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

798 
	$ißây
 (
__fd
Ë
__THROW
;

800 #i‡
deföed
 
__USE_BSD
 \

801 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

804 
	$ây¶Ÿ
 (Ë
__THROW
;

809 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 #ifde‡
__USE_ATFILE


815 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

816 
__c⁄°
 *
__to
, 
__Êags
)

817 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

820 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


822 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

828 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

829 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

833 #ifde‡
__USE_ATFILE


835 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

836 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

839 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

840 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

841 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

845 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #ifde‡
__USE_ATFILE


849 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

850 
__THROW
 
	`__n⁄nuŒ
 ((2));

854 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

861 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

868 *
	`gëlogö
 ();

869 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


876 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_BSD


881 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #ifdef 
__USE_POSIX2


889 
	#__√ed_gë›t


	)

890 
	~<gë›t.h
>

894 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


898 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

905 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

906 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

910 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

916 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

925 
	$vh™gup
 (Ë
__THROW
;

928 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

936 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

937 
size_t
 
__off£t
, 
__sˇÀ
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

948 *
	$gëu£rshñl
 (Ë
__THROW
;

949 
	$ídu£rshñl
 (Ë
__THROW
;

950 
	$£tu£rshñl
 (Ë
__THROW
;

956 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

960 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

963 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

967 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

971 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


976 
	`fsync
 (
__fd
);

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


983 
	`gëho°id
 ();

986 
	$sync
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


992 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

997 
	$gëdèbÀsize
 (Ë
__THROW
;

1003 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1006 #i‚de‡
__USE_FILE_OFFSET64


1007 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1010 #ifde‡
__REDIRECT_NTH


1011 
	`__REDIRECT_NTH
 (
åunˇã
,

1012 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1013 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1015 
	#åunˇã
 
åunˇã64


	)

1018 #ifde‡
__USE_LARGEFILE64


1019 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1025 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1028 #i‚de‡
__USE_FILE_OFFSET64


1029 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1031 #ifde‡
__REDIRECT_NTH


1032 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1033 
·runˇã64
Ë
__wur
;

1035 
	#·runˇã
 
·runˇã64


	)

1038 #ifde‡
__USE_LARGEFILE64


1039 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1045 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1046 || 
deföed
 
__USE_MISC


1050 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1056 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1060 #ifde‡
__USE_MISC


1071 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1076 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1088 
	#F_ULOCK
 0

	)

1089 
	#F_LOCK
 1

	)

1090 
	#F_TLOCK
 2

	)

1091 
	#F_TEST
 3

	)

1093 #i‚de‡
__USE_FILE_OFFSET64


1094 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__REDIRECT


1097 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1098 
lockf64
Ë
__wur
;

1100 
	#lockf
 
lockf64


	)

1103 #ifde‡
__USE_LARGEFILE64


1104 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1109 #ifde‡
__USE_GNU


1114 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1115 (
__exãnsi⁄__
 \

1116 ({ 
__ªsu…
; \

1117 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1118 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1119 
__ªsu…
; 
	}
}))

	)

1122 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1125 
fd©async
 (
__fûdes
);

1131 #ifdef 
__USE_XOPEN


1133 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1138 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1145 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1146 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1152 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1154 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1159 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1160 
	~<bôs/uni°d.h
>

1163 
__END_DECLS


	@/usr/include/utime.h

23 #i‚def 
_UTIME_H


24 
	#_UTIME_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


33 
	#__√ed_time_t


	)

34 
	~<time.h
>

38 
	sutimbuf


40 
__time_t
 
	ma˘ime
;

41 
__time_t
 
	mmodtime
;

46 
	$utime
 (
__c⁄°
 *
__fûe
,

47 
__c⁄°
 
utimbuf
 *
__fûe_times
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1));

50 
__END_DECLS


	@/usr/include/bits/a.out.h

1 #i‚de‡
__A_OUT_GNU_H__


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


43 
	#_POSIX_V7_ILP32_OFF32
 1

	)

44 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

45 
	#_POSIX_V6_ILP32_OFF32
 1

	)

46 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

47 
	#_XBS5_ILP32_OFF32
 1

	)

48 
	#_XBS5_ILP32_OFFBIG
 1

	)

63 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

64 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

65 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

66 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

67 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

68 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 04010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_XOPEN2K8


49 
	#O_DIRECTORY
 0200000

	)

50 
	#O_NOFOLLOW
 0400000

	)

51 
	#O_CLOEXEC
 02000000

	)

53 #ifde‡
__USE_GNU


54 
	#O_DIRECT
 040000

	)

55 
	#O_NOATIME
 01000000

	)

61 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


62 
	#O_DSYNC
 010000

	)

63 
	#O_RSYNC
 
O_SYNC


	)

66 #ifde‡
__USE_LARGEFILE64


67 
	#O_LARGEFILE
 0100000

	)

71 
	#F_DUPFD
 0

	)

72 
	#F_GETFD
 1

	)

73 
	#F_SETFD
 2

	)

74 
	#F_GETFL
 3

	)

75 
	#F_SETFL
 4

	)

76 #i‚de‡
__USE_FILE_OFFSET64


77 
	#F_GETLK
 5

	)

78 
	#F_SETLK
 6

	)

79 
	#F_SETLKW
 7

	)

81 
	#F_GETLK
 
F_GETLK64


	)

82 
	#F_SETLK
 
F_SETLK64


	)

83 
	#F_SETLKW
 
F_SETLKW64


	)

85 
	#F_GETLK64
 12

	)

86 
	#F_SETLK64
 13

	)

87 
	#F_SETLKW64
 14

	)

89 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


90 
	#F_SETOWN
 8

	)

91 
	#F_GETOWN
 9

	)

94 #ifde‡
__USE_GNU


95 
	#F_SETSIG
 10

	)

96 
	#F_GETSIG
 11

	)

97 
	#F_SETOWN_EX
 15

	)

98 
	#F_GETOWN_EX
 16

	)

101 #ifde‡
__USE_GNU


102 
	#F_SETLEASE
 1024

	)

103 
	#F_GETLEASE
 1025

	)

104 
	#F_NOTIFY
 1026

	)

105 
	#F_SETPIPE_SZ
 1031

	)

106 
	#F_GETPIPE_SZ
 1032

	)

108 #ifde‡
__USE_XOPEN2K8


109 
	#F_DUPFD_CLOEXEC
 1030

	)

114 
	#FD_CLOEXEC
 1

	)

117 
	#F_RDLCK
 0

	)

118 
	#F_WRLCK
 1

	)

119 
	#F_UNLCK
 2

	)

122 
	#F_EXLCK
 4

	)

123 
	#F_SHLCK
 8

	)

125 #ifde‡
__USE_BSD


127 
	#LOCK_SH
 1

	)

128 
	#LOCK_EX
 2

	)

129 
	#LOCK_NB
 4

	)

131 
	#LOCK_UN
 8

	)

134 #ifde‡
__USE_GNU


135 
	#LOCK_MAND
 32

	)

136 
	#LOCK_READ
 64

	)

137 
	#LOCK_WRITE
 128

	)

138 
	#LOCK_RW
 192

	)

141 #ifde‡
__USE_GNU


143 
	#DN_ACCESS
 0x00000001

	)

144 
	#DN_MODIFY
 0x00000002

	)

145 
	#DN_CREATE
 0x00000004

	)

146 
	#DN_DELETE
 0x00000008

	)

147 
	#DN_RENAME
 0x00000010

	)

148 
	#DN_ATTRIB
 0x00000020

	)

149 
	#DN_MULTISHOT
 0x80000000

	)

152 
	sÊock


154 
	ml_ty≥
;

155 
	ml_whí˚
;

156 #i‚de‡
__USE_FILE_OFFSET64


157 
__off_t
 
	ml_°¨t
;

158 
__off_t
 
	ml_Àn
;

160 
__off64_t
 
	ml_°¨t
;

161 
__off64_t
 
	ml_Àn
;

163 
__pid_t
 
	ml_pid
;

166 #ifde‡
__USE_LARGEFILE64


167 
	sÊock64


169 
	ml_ty≥
;

170 
	ml_whí˚
;

171 
__off64_t
 
	ml_°¨t
;

172 
__off64_t
 
	ml_Àn
;

173 
__pid_t
 
	ml_pid
;

177 #ifde‡
__USE_GNU


179 
	e__pid_ty≥


181 
	mF_OWNER_TID
 = 0,

182 
	mF_OWNER_PID
,

183 
	mF_OWNER_PGRP
,

184 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


188 
	sf_ow√r_ex


190 
__pid_ty≥
 
	mty≥
;

191 
__pid_t
 
	mpid
;

197 #ifdef 
__USE_BSD


198 
	#FAPPEND
 
O_APPEND


	)

199 
	#FFSYNC
 
O_FSYNC


	)

200 
	#FASYNC
 
O_ASYNC


	)

201 
	#FNONBLOCK
 
O_NONBLOCK


	)

202 
	#FNDELAY
 
O_NDELAY


	)

206 #ifde‡
__USE_XOPEN2K


207 
	#POSIX_FADV_NORMAL
 0

	)

208 
	#POSIX_FADV_RANDOM
 1

	)

209 
	#POSIX_FADV_SEQUENTIAL
 2

	)

210 
	#POSIX_FADV_WILLNEED
 3

	)

211 
	#POSIX_FADV_DONTNEED
 4

	)

212 
	#POSIX_FADV_NOREUSE
 5

	)

216 #ifde‡
__USE_GNU


218 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

221 
	#SYNC_FILE_RANGE_WRITE
 2

	)

224 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

229 
	#SPLICE_F_MOVE
 1

	)

230 
	#SPLICE_F_NONBLOCK
 2

	)

233 
	#SPLICE_F_MORE
 4

	)

234 
	#SPLICE_F_GIFT
 8

	)

237 
	g__BEGIN_DECLS


239 #ifde‡
__USE_GNU


242 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

243 
__THROW
;

247 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

248 
__Êags
);

252 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

253 
size_t
 
__cou¡
, 
__Êags
);

256 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

257 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

258 
__Êags
);

261 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

262 
__Êags
);

265 #i‚de‡
__USE_FILE_OFFSET64


266 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

268 #ifde‡
__REDIRECT


269 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

270 
__off64_t
 
__Àn
),

271 
ÁŒoˇã64
);

273 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

276 #ifde‡
__USE_LARGEFILE64


277 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

278 
__off64_t
 
__Àn
);

283 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

193 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

23 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

24 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

25 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

26 
	#__SIZEOF_PTHREAD_COND_COMPAT_T
 12

	)

27 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

29 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

30 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

31 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	t±hªad_t
;

41 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

42 
	m__Æign
;

43 } 
	t±hªad_©å_t
;

46 
	s__±hªad_öã∫Æ_¶i°


48 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

49 } 
	t__±hªad_¶i°_t
;

56 
	s__±hªad_muãx_s


58 
	m__lock
;

59 
	m__cou¡
;

60 
	m__ow√r
;

63 
	m__köd
;

64 
	m__nu£rs
;

65 
__exãnsi⁄__
 union

67 
	m__•ös
;

68 
__±hªad_¶i°_t
 
	m__li°
;

70 } 
	m__d©a
;

71 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

72 
	m__Æign
;

73 } 
	t±hªad_muãx_t
;

77 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

78 
	m__Æign
;

79 } 
	t±hªad_muãx©å_t
;

88 
	m__lock
;

89 
	m__fuãx
;

90 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

91 
__exãnsi⁄__
 
	m__wakeup_£q
;

92 
__exãnsi⁄__
 
	m__wokí_£q
;

93 *
	m__muãx
;

94 
	m__nwaôîs
;

95 
	m__brﬂdˇ°_£q
;

96 } 
	m__d©a
;

97 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

98 
__exãnsi⁄__
 
	m__Æign
;

99 } 
	t±hªad_c⁄d_t
;

103 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

104 
	m__Æign
;

105 } 
	t±hªad_c⁄d©å_t
;

109 
	t±hªad_key_t
;

113 
	t±hªad_⁄˚_t
;

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


123 
	m__lock
;

124 
	m__ƒ_ªadîs
;

125 
	m__ªadîs_wakeup
;

126 
	m__wrôî_wakeup
;

127 
	m__ƒ_ªadîs_queued
;

128 
	m__ƒ_wrôîs_queued
;

131 
	m__Êags
;

132 
	m__sh¨ed
;

133 
	m__∑d1
;

134 
	m__∑d2
;

135 
	m__wrôî
;

136 } 
	m__d©a
;

137 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

138 
	m__Æign
;

139 } 
	t±hªad_rwlock_t
;

143 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

144 
	m__Æign
;

145 } 
	t±hªad_rwlock©å_t
;

149 #ifde‡
__USE_XOPEN2K


151 vﬁ©ûê
	t±hªad_•ölock_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

159 
	m__Æign
;

160 } 
	t±hªad_b¨rõr_t
;

164 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

165 
	m__Æign
;

166 } 
	t±hªad_b¨rõøâr_t
;

171 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


62 
	#SA_RESTART
 0x10000000

	)

63 
	#SA_NODEFER
 0x40000000

	)

65 
	#SA_RESETHAND
 0x80000000

	)

67 #ifde‡
__USE_MISC


68 
	#SA_INTERRUPT
 0x20000000

	)

71 
	#SA_NOMASK
 
SA_NODEFER


	)

72 
	#SA_ONESHOT
 
SA_RESETHAND


	)

73 
	#SA_STACK
 
SA_ONSTACK


	)

77 
	#SIG_BLOCK
 0

	)

78 
	#SIG_UNBLOCK
 1

	)

79 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

31 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

39 
	s°©


41 
__dev_t
 
	m°_dev
;

42 
	m__∑d1
;

43 #i‚de‡
__USE_FILE_OFFSET64


44 
__öo_t
 
	m°_öo
;

46 
__öo_t
 
	m__°_öo
;

48 
__mode_t
 
	m°_mode
;

49 
__∆ök_t
 
	m°_∆ök
;

50 
__uid_t
 
	m°_uid
;

51 
__gid_t
 
	m°_gid
;

52 
__dev_t
 
	m°_rdev
;

53 
	m__∑d2
;

54 #i‚de‡
__USE_FILE_OFFSET64


55 
__off_t
 
	m°_size
;

57 
__off64_t
 
	m°_size
;

59 
__blksize_t
 
	m°_blksize
;

61 #i‚de‡
__USE_FILE_OFFSET64


62 
__blk˙t_t
 
	m°_blocks
;

64 
__blk˙t64_t
 
	m°_blocks
;

66 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


73 
time•ec
 
	m°_©im
;

74 
time•ec
 
	m°_mtim
;

75 
time•ec
 
	m°_˘im
;

76 
	#°_©ime
 
°_©im
.
tv_£c


	)

77 
	#°_mtime
 
°_mtim
.
tv_£c


	)

78 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

80 
__time_t
 
	m°_©ime
;

81 
	m°_©imí£c
;

82 
__time_t
 
	m°_mtime
;

83 
	m°_mtimí£c
;

84 
__time_t
 
	m°_˘ime
;

85 
	m°_˘imí£c
;

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	m__unu£d4
;

89 
	m__unu£d5
;

91 
__öo64_t
 
	m°_öo
;

95 #ifde‡
__USE_LARGEFILE64


96 
	s°©64


98 
__dev_t
 
	m°_dev
;

99 
	m__∑d1
;

101 
__öo_t
 
	m__°_öo
;

102 
__mode_t
 
	m°_mode
;

103 
__∆ök_t
 
	m°_∆ök
;

104 
__uid_t
 
	m°_uid
;

105 
__gid_t
 
	m°_gid
;

106 
__dev_t
 
	m°_rdev
;

107 
	m__∑d2
;

108 
__off64_t
 
	m°_size
;

109 
__blksize_t
 
	m°_blksize
;

111 
__blk˙t64_t
 
	m°_blocks
;

112 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


119 
time•ec
 
	m°_©im
;

120 
time•ec
 
	m°_mtim
;

121 
time•ec
 
	m°_˘im
;

123 
__time_t
 
	m°_©ime
;

124 
	m°_©imí£c
;

125 
__time_t
 
	m°_mtime
;

126 
	m°_mtimí£c
;

127 
__time_t
 
	m°_˘ime
;

128 
	m°_˘imí£c
;

130 
__öo64_t
 
	m°_öo
;

135 
	#_STATBUF_ST_BLKSIZE


	)

136 
	#_STATBUF_ST_RDEV


	)

138 
	#_STATBUF_ST_NSEC


	)

142 
	#__S_IFMT
 0170000

	)

145 
	#__S_IFDIR
 0040000

	)

146 
	#__S_IFCHR
 0020000

	)

147 
	#__S_IFBLK
 0060000

	)

148 
	#__S_IFREG
 0100000

	)

149 
	#__S_IFIFO
 0010000

	)

150 
	#__S_IFLNK
 0120000

	)

151 
	#__S_IFSOCK
 0140000

	)

155 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

156 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

157 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

161 
	#__S_ISUID
 04000

	)

162 
	#__S_ISGID
 02000

	)

163 
	#__S_ISVTX
 01000

	)

164 
	#__S_IREAD
 0400

	)

165 
	#__S_IWRITE
 0200

	)

166 
	#__S_IEXEC
 0100

	)

168 #ifde‡
__USE_ATFILE


169 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

170 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/string.h

21 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

31 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

32 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


34 #i‚de‡
__STRING_INLINE


35 #i‚de‡
__exã∫_ölöe


36 
	#__STRING_INLINE
 
ölöe


	)

38 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

43 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

44 ((((
__c⁄°
 *Ë(
§c
))[
idx
 + 1] << 8) \

45 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

46 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

47 (((((
__c⁄°
 *Ë(
§c
))[
idx
 + 3] << 8 \

48 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 2]) << 8 \

49 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 1]) << 8 \

50 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

54 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

55 
	#mem˝y
(
de°
, 
§c
, 
n
) \

56 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

57 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

58 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

59 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

60 ((
n
) == 0 \

61 ? (
de°
) \

62 : (((
n
) % 4 == 0) \

63 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

64 : (((
n
) % 2 == 0) \

65 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

66 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

68 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

69 
size_t
 
__n
);

71 
__STRING_INLINE
 *

72 
	$__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

74 
__d0
, 
__d1
;

75 *
__tmp
 = 
__de°
;

76 
__asm__
 
__vﬁ©ûe__


84 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

85 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

87  
__de°
;

88 
	}
}

90 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

91 
size_t
 
__n
);

93 
__STRING_INLINE
 *

94 
	$__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

96 
__d0
, 
__d1
;

97 *
__tmp
 = 
__de°
;

98 
__asm__
 
__vﬁ©ûe__


111 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

112 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

114  
__de°
;

115 
	}
}

117 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
,

118 
size_t
 
__n
);

120 
__STRING_INLINE
 *

121 
	$__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

123 
__d0
, 
__d1
, 
__d2
;

124 *
__tmp
 = 
__de°
;

125 
__asm__
 
__vﬁ©ûe__


136 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

137 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

138 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

139 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

141  
__de°
;

142 
	}
}

144 
	#_HAVE_STRING_ARCH_memmove
 1

	)

145 #i‚de‡
_FORCE_INLINES


148 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

150 
__STRING_INLINE
 *
	$__memmove_g
 (*, 
__c⁄°
 *, 
size_t
)

151 
	`__asm__
 ("memmove");

153 
__STRING_INLINE
 *

154 
	$__memmove_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

156 
__d0
, 
__d1
, 
__d2
;

157 *
__tmp
 = 
__de°
;

158 i‡(
__de°
 < 
__§c
)

159 
__asm__
 
__vﬁ©ûe__


162 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

163 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

164 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

165 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

167 
__asm__
 
__vﬁ©ûe__


171 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

172 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

173 : "0" (
__n
), "1" (__¿- 1 + (
__c⁄°
 *Ë
__§c
),

174 "2" (
__n
 - 1 + (*Ë
__tmp
),

175 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

176  
__de°
;

177 
	}
}

181 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

182 #i‚de‡
_FORCE_INLINES


183 #i‚de‡
__PIC__


185 
__STRING_INLINE
 

186 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

188 
__d0
, 
__d1
, 
__d2
;

189 
__ªs
;

190 
__asm__
 
__vﬁ©ûe__


198 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

199 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

200 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

201 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

203  
__ªs
;

204 
	}
}

209 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

210 
	#_USE_STRING_ARCH_mem£t
 1

	)

211 
	#mem£t
(
s
, 
c
, 
n
) \

212 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

213 ? ((
n
) == 1 \

214 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

215 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

216 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

217 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

218 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

219 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

220 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

221 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

222 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

224 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

225 *((*Ë
__s
Ë(Ë(
c
); \

226 
__s
; })

	)

228 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

229 ({ *
__s
 = (
s
); \

231 
__ui
; \

232 
__usi
; \

233 
__uc
; \

234 } *
__u
 = 
__s
; \

235 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

241 i‡((
n
) == 3 || (n) >= 5) \

242 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

245 
n
) \

248 
__u
->
__ui
 = 
__c
; \

249 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

251 
__u
->
__ui
 = 
__c
; \

252 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__usi
 = (Ë
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

259 
__u
->
__uc
 = (Ë
__c
; \

263 
__u
->
__ui
 = 
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

266 
__u
->
__ui
 = 
__c
; \

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__usi
 = (Ë
__c
; \

276 
__u
->
__ui
 = 
__c
; \

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

279 
__u
->
__ui
 = 
__c
; \

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__uc
 = (Ë
__c
; \

289 
__u
->
__ui
 = 
__c
; \

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

292 
__u
->
__ui
 = 
__c
; \

293 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

303 
__s
; })

	)

305 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

306 (((
n
) % 4 == 0) \

307 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

308 
n
) \

309 : (((
n
) % 2 == 0) \

310 ? 
	`__mem£t_c˙_by2
 (
s
, \

311 ((Ë((Ë(
c
))) * 0x01010101,\

312 
n
) \

313 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

315 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

316 
size_t
 
__n
);

318 
__STRING_INLINE
 *

319 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

321 *
__tmp
 = 
__s
;

322 
__d0
;

323 #ifde‡
__i686__


324 
__asm__
 
__vﬁ©ûe__


327 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

328 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

329 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

332 
__asm__
 
__vﬁ©ûe__


338 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

339 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

340 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

343  
__s
;

344 
	}
}

346 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

347 
size_t
 
__n
);

349 
__STRING_INLINE
 *

350 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

352 
__d0
, 
__d1
;

353 *
__tmp
 = 
__s
;

354 #ifde‡
__i686__


355 
__asm__
 
__vﬁ©ûe__


359 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

360 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

361 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

364 
__asm__
 
__vﬁ©ûe__


370 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

371 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

372 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

375  
__s
;

376 
	}
}

378 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

379 (((
n
) % 4 == 0) \

380 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

381 : (((
n
) % 2 == 0) \

382 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

383 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

385 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

387 
__STRING_INLINE
 *

388 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

390 *
__tmp
 = 
__s
;

391 
__d0
;

392 
__asm__
 
__vﬁ©ûe__


402 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

403 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

404 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

406  
__s
;

407 
	}
}

409 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

411 
__STRING_INLINE
 *

412 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

414 
__d0
, 
__d1
;

415 *
__tmp
 = 
__s
;

416 
__asm__
 
__vﬁ©ûe__


427 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

428 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

429 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

431  
__s
;

432 
	}
}

436 
	#_HAVE_STRING_ARCH_memchr
 1

	)

437 #i‚de‡
_FORCE_INLINES


438 
__STRING_INLINE
 *

439 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

441 
__d0
;

442 #ifde‡
__i686__


443 
__d1
;

445 *
__ªs
;

446 i‡(
__n
 == 0)

447  
NULL
;

448 #ifde‡
__i686__


449 
__asm__
 
__vﬁ©ûe__


453 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

454 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

455 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

458 
__asm__
 
__vﬁ©ûe__


464 : "=D" (
__ªs
), "=&c" (
__d0
)

465 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

466 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

469  
__ªs
 - 1;

470 
	}
}

473 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

474 #i‚de‡
_FORCE_INLINES


475 
__STRING_INLINE
 *
__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
);

477 
__STRING_INLINE
 *

478 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

480 
__d0
;

481 #ifde‡
__i686__


482 
__d1
;

484 *
__ªs
;

485 i‡(
__n
 == 0)

486  
NULL
;

487 #ifde‡
__i686__


488 
__asm__
 
__vﬁ©ûe__


494 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

495 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

496 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

499 
__asm__
 
__vﬁ©ûe__


506 : "=D" (
__ªs
), "=&c" (
__d0
)

507 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

508 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

511  
__ªs
;

512 
	}
}

513 #ifde‡
__USE_GNU


514 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

519 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

520 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

522 #i‚de‡
_FORCE_INLINES


523 
__STRING_INLINE
 *

524 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

526 
__d0
;

527 *
__ªs
;

528 
__asm__
 
__vﬁ©ûe__


531 : "=D" (
__ªs
), "=&c" (
__d0
)

532 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

533 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

535  
__ªs
 - 1;

536 
	}
}

537 #ifde‡
__USE_GNU


538 
__STRING_INLINE
 *

539 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

541  
	`__øwmemchr
 (
__s
, 
__c
);

542 
	}
}

548 
	#_HAVE_STRING_ARCH_°æí
 1

	)

549 
	#°æí
(
°r
) \

550 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

551 ? 
	`__buûtö_°æí
 (
°r
) \

552 : 
	`__°æí_g
 (
°r
)))

	)

553 
__STRING_INLINE
 
size_t
 
__°æí_g
 (
__c⁄°
 *
__°r
);

555 
__STRING_INLINE
 
size_t


556 
	$__°æí_g
 (
__c⁄°
 *
__°r
)

558 
__dummy
;

559 
__c⁄°
 *
__tmp
 = 
__°r
;

560 
__asm__
 
__vﬁ©ûe__


566 : "Ù" (
__tmp
), "=&q" (
__dummy
)

567 : "0" (
__°r
),

568 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

570  
__tmp
 - 
__°r
 - 1;

571 
	}
}

575 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

576 
	#°r˝y
(
de°
, 
§c
) \

577 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

578 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

579 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

580 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

581 (
__c⁄°
 *Ë(
§c
), \

582 
	`°æí
 (
§c
) + 1)) \

583 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

585 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

586 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

588 
__ui
; \

589 
__usi
; \

590 
__uc
; \

591 
__c
; \

592 } *
__u
 = (*Ë
__de°
; \

593 
§˛í
) \

596 
__u
->
__uc
 = '\0'; \

599 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

602 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

603 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

604 
__u
->
__uc
 = '\0'; \

607 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

610 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

611 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

612 
__u
->
__uc
 = '\0'; \

615 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

617 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

620 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

621 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

622 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

623 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

624 
__u
->
__uc
 = '\0'; \

627 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

628 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

629 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

632 (*Ë
__de°
; }))

	)

634 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

636 
__STRING_INLINE
 *

637 
	$__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

639 *
__tmp
 = 
__de°
;

640 
__dummy
;

641 
__asm__
 
__vﬁ©ûe__


650 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

651 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

652 : "0" (
__§c
), "1" (
__tmp
),

653 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

655  
__de°
;

656 
	}
}

659 #ifde‡
__USE_GNU


660 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

662 
	#__°p˝y
(
de°
, 
§c
) \

663 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

664 ? (
	`°æí
 (
§c
) + 1 <= 8 \

665 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

666 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

667 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

668 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

669 ((
§˛í
) % 4 == 0 \

670 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

671 : ((
§˛í
) % 2 == 0 \

672 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

673 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

676 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

678 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

679 (
	`__exãnsi⁄__
 ({ union { \

680 
__ui
; \

681 
__usi
; \

682 
__uc
; \

683 
__c
; \

684 } *
__u
 = (*Ë(
de°
); \

685 
§˛í
) \

688 
__u
->
__uc
 = '\0'; \

691 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

692 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

695 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

696 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

697 
__u
->
__uc
 = '\0'; \

700 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

701 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

704 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

705 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

706 
__u
->
__uc
 = '\0'; \

709 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

710 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

711 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

719 
__u
->
__uc
 = '\0'; \

722 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

723 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

724 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

725 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

728 (*Ë
__u
; }))

	)

730 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

731 
size_t
 
__§˛í
);

733 
__STRING_INLINE
 *

734 
	$__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

736 *
__tmp
 = 
__de°
;

737 
__d0
, 
__d1
;

738 
__asm__
 
__vﬁ©ûe__


746 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

747 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

749  
__tmp
;

750 
	}
}

752 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

753 
size_t
 
__§˛í
);

755 
__STRING_INLINE
 *

756 
	$__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

758 *
__tmp
 = 
__de°
;

759 
__d0
, 
__d1
;

760 
__asm__
 
__vﬁ©ûe__


773 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

774 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

775 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

776 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

778  
__tmp
 + 2;

779 
	}
}

781 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
,

782 
size_t
 
__§˛í
);

784 
__STRING_INLINE
 *

785 
	$__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

787 
__d0
, 
__d1
;

788 *
__tmp
 = 
__de°
;

789 
__asm__
 
__vﬁ©ûe__


800 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

801 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

802 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

803 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

805  
__tmp
;

806 
	}
}

808 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

810 
__STRING_INLINE
 *

811 
	$__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

813 *
__tmp
 = 
__de°
;

814 
__dummy
;

815 
__asm__
 
__vﬁ©ûe__


824 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

825 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

826 : "0" (
__§c
), "1" (
__tmp
),

827 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

829  
__tmp
 - 1;

830 
	}
}

835 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

836 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

837 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

838 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

839 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

840 (
__c⁄°
 *Ë(
§c
), 
n
) \

841 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

842 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

843 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

844 (((
§˛í
) % 4 == 0) \

845 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

846 : (((
§˛í
) % 2 == 0) \

847 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

848 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

850 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[],

851 
size_t
 
__§˛í
, size_à
__n
);

853 
__STRING_INLINE
 *

854 
	$__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

856 *
__tmp
 = 
__de°
;

857 
__dummy1
, 
__dummy2
;

858 
__asm__
 
__vﬁ©ûe__


866 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

867 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

868 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

869 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

871 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

872  
__de°
;

873 
	}
}

875 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[],

876 
size_t
 
__§˛í
, size_à
__n
);

878 
__STRING_INLINE
 *

879 
	$__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

881 *
__tmp
 = 
__de°
;

882 
__dummy1
, 
__dummy2
;

883 
__asm__
 
__vﬁ©ûe__


896 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

897 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

898 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

899 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

901 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

902  
__de°
;

903 
	}
}

905 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[],

906 
size_t
 
__§˛í
, size_à
__n
);

908 
__STRING_INLINE
 *

909 
	$__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

911 
__d0
, 
__d1
;

912 *
__tmp
 = 
__de°
;

913 
__asm__
 
__vﬁ©ûe__


924 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

925 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

926 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

927 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

929 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

930  
__de°
;

931 
	}
}

933 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
,

934 
size_t
 
__n
);

936 
__STRING_INLINE
 *

937 
	$__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

939 *
__tmp
 = 
__de°
;

940 
__dummy
;

941 i‡(
__n
 > 0)

942 
__asm__
 
__vﬁ©ûe__


958 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

959 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

962  
__de°
;

963 
	}
}

967 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

968 
	#°rˇt
(
de°
, 
§c
) \

969 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

970 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

971 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

973 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[],

974 
size_t
 
__§˛í
);

976 
__STRING_INLINE
 *

977 
	$__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
)

979 #ifde‡
__i686__


980 
__d0
;

981 *
__tmp
;

982 
__asm__
 
__vﬁ©ûe__


984 : "=D" (
__tmp
), "=&c" (
__d0
),

985 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

986 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

987 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

989 --
__tmp
;

991 *
__tmp
 = 
__de°
 - 1;

992 
__asm__
 
__vﬁ©ûe__


997 : "Ù" (
__tmp
),

998 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

999 : "0" (
__tmp
),

1000 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1003 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1004  
__de°
;

1005 
	}
}

1007 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

1009 
__STRING_INLINE
 *

1010 
	$__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

1012 *
__tmp
 = 
__de°
 - 1;

1013 
__dummy
;

1014 
__asm__
 
__vﬁ©ûe__


1026 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1027 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1028 : "1" (
__tmp
), "2" (
__§c
),

1029 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1031  
__de°
;

1032 
	}
}

1036 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1037 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1038 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1039 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1040 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1041 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1042 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1043 (
__c⁄°
 *Ë(
§c
), \

1044 (
n
)Ë0, 
__de°
)) \

1045 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1047 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[],

1048 
size_t
 
__n
);

1050 
__STRING_INLINE
 *

1051 
	$__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__n
)

1053 *
__tmp
 = 
__de°
;

1054 
__dummy
;

1055 #ifde‡
__i686__


1056 
__asm__
 
__vﬁ©ûe__


1070 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1071 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1074 --
__tmp
;

1075 
__asm__
 
__vﬁ©ûe__


1092 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1093 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1096  
__de°
;

1097 
	}
}

1101 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1102 
	#°rcmp
(
s1
, 
s2
) \

1103 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1104 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1105 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1106 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

1107 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1108 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1109 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1110 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1111 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1112 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1113 (
__c⁄°
 *Ë(
s2
), \

1114 
	`°æí
 (
s1
)) \

1115 : 
	`__°rcmp_cg
 ((
__c⁄°
 *Ë(
s1
), \

1116 (
__c⁄°
 *Ë(
s2
), \

1117 
	`°æí
 (
s1
))) \

1118 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1119 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1120 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1121 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1122 (
__c⁄°
 *Ë(
s2
), \

1123 
	`°æí
 (
s2
)) \

1124 : 
	`__°rcmp_gc
 ((
__c⁄°
 *Ë(
s1
), \

1125 (
__c⁄°
 *Ë(
s2
), \

1126 
	`°æí
 (
s2
))) \

1127 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1129 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1130 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1131 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1133 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1134 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1136 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1137 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1138 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1141 
__ªsu…
; }))

	)

1143 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1144 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = (
s2
); \

1145 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1146 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1148 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1149 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1151 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1152 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1153 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1156 
__ªsu…
; }))

	)

1158 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1159 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = (
s1
); \

1160 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1161 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1163 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1164 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1166 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1167 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1168 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1171 
__ªsu…
; }))

	)

1173 
__STRING_INLINE
 
__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
);

1175 
__STRING_INLINE
 

1176 
	$__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

1178 
__ªs
;

1179 
__asm__
 
__vﬁ©ûe__


1195 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1196 : "1" (
__s1
), "2" (
__s2
),

1197 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1198 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1200  
__ªs
;

1201 
	}
}

1205 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1206 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1207 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1208 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1209 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1210 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1211 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1213 
__STRING_INLINE
 
__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

1214 
size_t
 
__n
);

1216 
__STRING_INLINE
 

1217 
	$__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

1219 
__ªs
;

1220 
__asm__
 
__vﬁ©ûe__


1239 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1240 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1241 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1242 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1244  
__ªs
;

1245 
	}
}

1249 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1250 
	#_USE_STRING_ARCH_°rchr
 1

	)

1251 
	#°rchr
(
s
, 
c
) \

1252 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1253 ? ((
c
) == '\0' \

1254 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1255 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1256 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1258 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1260 
__STRING_INLINE
 *

1261 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1263 
__d0
;

1264 *
__ªs
;

1265 
__asm__
 
__vﬁ©ûe__


1275 : "Ù" (
__ªs
), "=&a" (
__d0
)

1276 : "0" (
__s
), "1" (
__c
),

1277 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1279  
__ªs
;

1280 
	}
}

1282 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1284 
__STRING_INLINE
 *

1285 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1287 
__d0
;

1288 *
__ªs
;

1289 
__asm__
 
__vﬁ©ûe__


1300 : "Ù" (
__ªs
), "=&a" (
__d0
)

1301 : "0" (
__s
), "1" (
__c
),

1302 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1304  
__ªs
;

1305 
	}
}

1309 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1310 
	#__°rch∫ul
(
s
, 
c
) \

1311 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1312 ? ((
c
) == '\0' \

1313 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1314 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1315 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1317 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

1319 
__STRING_INLINE
 *

1320 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

1322 
__d0
;

1323 *
__ªs
;

1324 
__asm__
 
__vﬁ©ûe__


1334 : "Ù" (
__ªs
), "=&a" (
__d0
)

1335 : "0" (
__s
), "1" (
__c
),

1336 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1338  
__ªs
;

1339 
	}
}

1341 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

1343 
__STRING_INLINE
 *

1344 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

1346 
__d0
;

1347 *
__ªs
;

1348 
__asm__
 
__vﬁ©ûe__


1359 : "Ù" (
__ªs
), "=&a" (
__d0
)

1360 : "0" (
__s
), "1" (
__c
),

1361 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1363  
__ªs
;

1364 
	}
}

1365 #ifde‡
__USE_GNU


1366 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1370 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1372 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1373 
	#ödex
(
s
, 
c
) \

1374 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1375 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1376 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1381 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1382 
	#°ºchr
(
s
, 
c
) \

1383 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1384 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1385 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1387 #ifde‡
__i686__


1388 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1390 
__STRING_INLINE
 *

1391 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1393 
__d0
, 
__d1
;

1394 *
__ªs
;

1395 
__asm__
 
__vﬁ©ûe__


1403 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1404 : "0" (1), "1" (
__s
), "2" (
__c
),

1405 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1407  
__ªs
 - 1;

1408 
	}
}

1410 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1412 
__STRING_INLINE
 *

1413 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1415 
__d0
, 
__d1
;

1416 *
__ªs
;

1417 
__asm__
 
__vﬁ©ûe__


1426 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1427 : "0" (1), "1" (
__s
), "2" (
__c
),

1428 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1430  
__ªs
 - 1;

1431 
	}
}

1433 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1435 
__STRING_INLINE
 *

1436 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1438 
__d0
, 
__d1
;

1439 *
__ªs
;

1440 
__asm__
 
__vﬁ©ûe__


1450 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1451 : "0" (0), "1" (
__s
), "2" (
__c
),

1452 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1454  
__ªs
;

1455 
	}
}

1457 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1459 
__STRING_INLINE
 *

1460 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1462 
__d0
, 
__d1
;

1463 *
__ªs
;

1464 
__asm__
 
__vﬁ©ûe__


1475 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1476 : "0" (0), "1" (
__s
), "2" (
__c
),

1477 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1479  
__ªs
;

1480 
	}
}

1484 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1486 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1487 
	#rödex
(
s
, 
c
) \

1488 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1489 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1490 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1496 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1497 
	#°rc•n
(
s
, 
ªje˘
) \

1498 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1499 ? ((
ªje˘
)[0] == '\0' \

1500 ? 
	`°æí
 (
s
) \

1501 : ((
ªje˘
)[1] == '\0' \

1502 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1503 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1504 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1506 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

1508 #i‚de‡
_FORCE_INLINES


1509 
__STRING_INLINE
 
size_t


1510 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

1512 
__d0
;

1513 *
__ªs
;

1514 
__asm__
 
__vﬁ©ûe__


1523 : "Ù" (
__ªs
), "=&a" (
__d0
)

1524 : "0" (
__s
), "1" (
__ªje˘
),

1525 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1527  (
__ªs
 - 1Ë- 
__s
;

1528 
	}
}

1531 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[],

1532 
size_t
 
__ªje˘_Àn
);

1534 
__STRING_INLINE
 
size_t


1535 
	$__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1537 
__d0
, 
__d1
, 
__d2
;

1538 
__c⁄°
 *
__ªs
;

1539 
__asm__
 
__vﬁ©ûe__


1550 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1551 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1553  (
__ªs
 - 1Ë- 
__s
;

1554 
	}
}

1556 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
);

1557 #ifde‡
__PIC__


1559 
__STRING_INLINE
 
size_t


1560 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1562 
__d0
, 
__d1
, 
__d2
;

1563 
__c⁄°
 *
__ªs
;

1564 
__asm__
 
__vﬁ©ûe__


1581 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1582 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1584  (
__ªs
 - 1Ë- 
__s
;

1585 
	}
}

1587 
__STRING_INLINE
 
size_t


1588 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1590 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1591 
__c⁄°
 *
__ªs
;

1592 
__asm__
 
__vﬁ©ûe__


1606 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1607 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1610  (
__ªs
 - 1Ë- 
__s
;

1611 
	}
}

1617 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1618 
	#°r•n
(
s
, 
ac˚±
) \

1619 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1620 ? ((
ac˚±
)[0] == '\0' \

1621 ? ((Ë(
s
), 0) \

1622 : ((
ac˚±
)[1] == '\0' \

1623 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1624 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1625 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1627 #i‚de‡
_FORCE_INLINES


1628 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1630 
__STRING_INLINE
 
size_t


1631 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1633 
__d0
;

1634 *
__ªs
;

1636 
__asm__
 
__vﬁ©ûe__


1642 : "Ù" (
__ªs
), "=&q" (
__d0
)

1643 : "0" (
__s
), "1" (
__ac˚±
),

1644 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1646  (
__ªs
 - 1Ë- 
__s
;

1647 
	}
}

1650 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1651 
size_t
 
__ac˚±_Àn
);

1653 
__STRING_INLINE
 
size_t


1654 
	$__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1656 
__d0
, 
__d1
, 
__d2
;

1657 
__c⁄°
 *
__ªs
;

1658 
__asm__
 
__vﬁ©ûe__


1669 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1670 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1673 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1674 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1676  (
__ªs
 - 1Ë- 
__s
;

1677 
	}
}

1679 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1680 #ifde‡
__PIC__


1682 
__STRING_INLINE
 
size_t


1683 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1685 
__d0
, 
__d1
, 
__d2
;

1686 
__c⁄°
 *
__ªs
;

1687 
__asm__
 
__vﬁ©ûe__


1703 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1704 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1706  (
__ªs
 - 1Ë- 
__s
;

1707 
	}
}

1709 
__STRING_INLINE
 
size_t


1710 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1712 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1713 
__c⁄°
 *
__ªs
;

1714 
__asm__
 
__vﬁ©ûe__


1728 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1729 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1731  (
__ªs
 - 1Ë- 
__s
;

1732 
	}
}

1737 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1738 
	#°Ωbrk
(
s
, 
ac˚±
) \

1739 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1740 ? ((
ac˚±
)[0] == '\0' \

1741 ? ((Ë(
s
), (*) 0) \

1742 : ((
ac˚±
)[1] == '\0' \

1743 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1744 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1745 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1747 
__STRING_INLINE
 *
__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1748 
size_t
 
__ac˚±_Àn
);

1750 
__STRING_INLINE
 *

1751 
	$__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1753 
__d0
, 
__d1
, 
__d2
;

1754 *
__ªs
;

1755 
__asm__
 
__vﬁ©ûe__


1770 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1771 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1773  
__ªs
;

1774 
	}
}

1776 
__STRING_INLINE
 *
__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1777 #ifde‡
__PIC__


1779 
__STRING_INLINE
 *

1780 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1782 
__d0
, 
__d1
, 
__d2
;

1783 *
__ªs
;

1784 
__asm__
 
__vﬁ©ûe__


1805 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1806 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1808  
__ªs
;

1809 
	}
}

1811 
__STRING_INLINE
 *

1812 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1814 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1815 *
__ªs
;

1816 
__asm__
 
__vﬁ©ûe__


1835 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1836 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1838  
__ªs
;

1839 
	}
}

1844 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1845 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1846 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1847 ? ((
√edÀ
)[0] == '\0' \

1848 ? (
hay°ack
) \

1849 : ((
√edÀ
)[1] == '\0' \

1850 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1851 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1852 
	`°æí
 (
√edÀ
)))) \

1853 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1857 
__STRING_INLINE
 *
__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1858 
size_t
 
__√edÀ_Àn
);

1860 
__STRING_INLINE
 *

1861 
	$__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1862 
size_t
 
__√edÀ_Àn
)

1864 
__d0
, 
__d1
, 
__d2
;

1865 *
__ªs
;

1866 
__asm__
 
__vﬁ©ûe__


1879 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1880 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1882  
__ªs
;

1883 
	}
}

1885 
__STRING_INLINE
 *
__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
);

1886 #ifde‡
__PIC__


1888 
__STRING_INLINE
 *

1889 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1891 
__d0
, 
__d1
, 
__d2
;

1892 *
__ªs
;

1893 
__asm__
 
__vﬁ©ûe__


1912 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1913 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1914 "d" (
__√edÀ
)

1916  
__ªs
;

1917 
	}
}

1919 
__STRING_INLINE
 *

1920 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1922 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1923 *
__ªs
;

1924 
__asm__
 
__vﬁ©ûe__


1941 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1942 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1943 "b" (
__√edÀ
)

1945  
__ªs
;

1946 
	}
}

1952 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1953 #ifde‡
__i686__


1954 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1955 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1956 ? 
	`__buûtö_ffs
 (
w‹d
) \

1957 : ({ 
__˙t
, 
__tmp
; \

1958 
__asm__
 
__vﬁ©ûe__
 \

1961 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1962 : "rm" (
w‹d
), "1" (-1)); \

1963 
__˙t
 + 1; }))

	)

1965 #i‚de‡
ff¶


1966 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1971 #i‚de‡
_FORCE_INLINES


1972 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/termios.h

20 #i‚de‡
_TERMIOS_H


24 
	tcc_t
;

25 
	t•ìd_t
;

26 
	ttcÊag_t
;

28 
	#NCCS
 32

	)

29 
	sãrmios


31 
tcÊag_t
 
	mc_iÊag
;

32 
tcÊag_t
 
	mc_oÊag
;

33 
tcÊag_t
 
	mc_cÊag
;

34 
tcÊag_t
 
	mc_lÊag
;

35 
cc_t
 
	mc_löe
;

36 
cc_t
 
	mc_cc
[
NCCS
];

37 
•ìd_t
 
	mc_i•ìd
;

38 
•ìd_t
 
	mc_o•ìd
;

39 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

40 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

44 
	#VINTR
 0

	)

45 
	#VQUIT
 1

	)

46 
	#VERASE
 2

	)

47 
	#VKILL
 3

	)

48 
	#VEOF
 4

	)

49 
	#VTIME
 5

	)

50 
	#VMIN
 6

	)

51 
	#VSWTC
 7

	)

52 
	#VSTART
 8

	)

53 
	#VSTOP
 9

	)

54 
	#VSUSP
 10

	)

55 
	#VEOL
 11

	)

56 
	#VREPRINT
 12

	)

57 
	#VDISCARD
 13

	)

58 
	#VWERASE
 14

	)

59 
	#VLNEXT
 15

	)

60 
	#VEOL2
 16

	)

63 
	#IGNBRK
 0000001

	)

64 
	#BRKINT
 0000002

	)

65 
	#IGNPAR
 0000004

	)

66 
	#PARMRK
 0000010

	)

67 
	#INPCK
 0000020

	)

68 
	#ISTRIP
 0000040

	)

69 
	#INLCR
 0000100

	)

70 
	#IGNCR
 0000200

	)

71 
	#ICRNL
 0000400

	)

72 
	#IUCLC
 0001000

	)

73 
	#IXON
 0002000

	)

74 
	#IXANY
 0004000

	)

75 
	#IXOFF
 0010000

	)

76 
	#IMAXBEL
 0020000

	)

77 
	#IUTF8
 0040000

	)

80 
	#OPOST
 0000001

	)

81 
	#OLCUC
 0000002

	)

82 
	#ONLCR
 0000004

	)

83 
	#OCRNL
 0000010

	)

84 
	#ONOCR
 0000020

	)

85 
	#ONLRET
 0000040

	)

86 
	#OFILL
 0000100

	)

87 
	#OFDEL
 0000200

	)

88 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


89 
	#NLDLY
 0000400

	)

90 
	#NL0
 0000000

	)

91 
	#NL1
 0000400

	)

92 
	#CRDLY
 0003000

	)

93 
	#CR0
 0000000

	)

94 
	#CR1
 0001000

	)

95 
	#CR2
 0002000

	)

96 
	#CR3
 0003000

	)

97 
	#TABDLY
 0014000

	)

98 
	#TAB0
 0000000

	)

99 
	#TAB1
 0004000

	)

100 
	#TAB2
 0010000

	)

101 
	#TAB3
 0014000

	)

102 
	#BSDLY
 0020000

	)

103 
	#BS0
 0000000

	)

104 
	#BS1
 0020000

	)

105 
	#FFDLY
 0100000

	)

106 
	#FF0
 0000000

	)

107 
	#FF1
 0100000

	)

110 
	#VTDLY
 0040000

	)

111 
	#VT0
 0000000

	)

112 
	#VT1
 0040000

	)

114 #ifde‡
__USE_MISC


115 
	#XTABS
 0014000

	)

119 #ifde‡
__USE_MISC


120 
	#CBAUD
 0010017

	)

122 
	#B0
 0000000

	)

123 
	#B50
 0000001

	)

124 
	#B75
 0000002

	)

125 
	#B110
 0000003

	)

126 
	#B134
 0000004

	)

127 
	#B150
 0000005

	)

128 
	#B200
 0000006

	)

129 
	#B300
 0000007

	)

130 
	#B600
 0000010

	)

131 
	#B1200
 0000011

	)

132 
	#B1800
 0000012

	)

133 
	#B2400
 0000013

	)

134 
	#B4800
 0000014

	)

135 
	#B9600
 0000015

	)

136 
	#B19200
 0000016

	)

137 
	#B38400
 0000017

	)

138 #ifde‡
__USE_MISC


139 
	#EXTA
 
B19200


	)

140 
	#EXTB
 
B38400


	)

142 
	#CSIZE
 0000060

	)

143 
	#CS5
 0000000

	)

144 
	#CS6
 0000020

	)

145 
	#CS7
 0000040

	)

146 
	#CS8
 0000060

	)

147 
	#CSTOPB
 0000100

	)

148 
	#CREAD
 0000200

	)

149 
	#PARENB
 0000400

	)

150 
	#PARODD
 0001000

	)

151 
	#HUPCL
 0002000

	)

152 
	#CLOCAL
 0004000

	)

153 #ifde‡
__USE_MISC


154 
	#CBAUDEX
 0010000

	)

156 
	#B57600
 0010001

	)

157 
	#B115200
 0010002

	)

158 
	#B230400
 0010003

	)

159 
	#B460800
 0010004

	)

160 
	#B500000
 0010005

	)

161 
	#B576000
 0010006

	)

162 
	#B921600
 0010007

	)

163 
	#B1000000
 0010010

	)

164 
	#B1152000
 0010011

	)

165 
	#B1500000
 0010012

	)

166 
	#B2000000
 0010013

	)

167 
	#B2500000
 0010014

	)

168 
	#B3000000
 0010015

	)

169 
	#B3500000
 0010016

	)

170 
	#B4000000
 0010017

	)

171 
	#__MAX_BAUD
 
B4000000


	)

172 #ifde‡
__USE_MISC


173 
	#CIBAUD
 002003600000

	)

174 
	#CMSPAR
 010000000000

	)

175 
	#CRTSCTS
 020000000000

	)

179 
	#ISIG
 0000001

	)

180 
	#ICANON
 0000002

	)

181 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


182 
	#XCASE
 0000004

	)

184 
	#ECHO
 0000010

	)

185 
	#ECHOE
 0000020

	)

186 
	#ECHOK
 0000040

	)

187 
	#ECHONL
 0000100

	)

188 
	#NOFLSH
 0000200

	)

189 
	#TOSTOP
 0000400

	)

190 #ifde‡
__USE_MISC


191 
	#ECHOCTL
 0001000

	)

192 
	#ECHOPRT
 0002000

	)

193 
	#ECHOKE
 0004000

	)

194 
	#FLUSHO
 0010000

	)

195 
	#PENDIN
 0040000

	)

197 
	#IEXTEN
 0100000

	)

198 #ifde‡
__USE_BSD


199 
	#EXTPROC
 0200000

	)

203 
	#TCOOFF
 0

	)

204 
	#TCOON
 1

	)

205 
	#TCIOFF
 2

	)

206 
	#TCION
 3

	)

209 
	#TCIFLUSH
 0

	)

210 
	#TCOFLUSH
 1

	)

211 
	#TCIOFLUSH
 2

	)

214 
	#TCSANOW
 0

	)

215 
	#TCSADRAIN
 1

	)

216 
	#TCSAFLUSH
 2

	)

219 
	#_IOT_ãrmios
 \

220 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/time.h

24 #i‚de‡
__√ed_timevÆ


25 #i‚de‡
_BITS_TIME_H


26 
	#_BITS_TIME_H
 1

	)

34 
	#CLOCKS_PER_SEC
 1000000l

	)

36 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


39 
	~<bôs/ty≥s.h
>

40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

61 
	#TIMER_ABSTIME
 1

	)

67 #ifde‡
__√ed_timevÆ


68 #unde‡
__√ed_timevÆ


69 #i‚de‡
_STRUCT_TIMEVAL


70 
	#_STRUCT_TIMEVAL
 1

	)

71 
	~<bôs/ty≥s.h
>

75 
	stimevÆ


77 
__time_t
 
	mtv_£c
;

78 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/utsname.h

19 #i‚de‡
_SYS_UTSNAME_H


24 
	#_UTSNAME_LENGTH
 65

	)

29 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC99


98 #unde‡
__USE_ISOC95


99 #unde‡
__USE_POSIX


100 #unde‡
__USE_POSIX2


101 #unde‡
__USE_POSIX199309


102 #unde‡
__USE_POSIX199506


103 #unde‡
__USE_XOPEN


104 #unde‡
__USE_XOPEN_EXTENDED


105 #unde‡
__USE_UNIX98


106 #unde‡
__USE_XOPEN2K


107 #unde‡
__USE_XOPEN2KXSI


108 #unde‡
__USE_XOPEN2K8


109 #unde‡
__USE_XOPEN2K8XSI


110 #unde‡
__USE_LARGEFILE


111 #unde‡
__USE_LARGEFILE64


112 #unde‡
__USE_FILE_OFFSET64


113 #unde‡
__USE_BSD


114 #unde‡
__USE_SVID


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__FAVOR_BSD


121 #unde‡
__KERNEL_STRICT_NAMES


125 #i‚de‡
_LOOSE_KERNEL_NAMES


126 
	#__KERNEL_STRICT_NAMES


	)

130 
	#__USE_ANSI
 1

	)

139 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


140 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

141 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

143 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

148 #i‡
deföed
 
_BSD_SOURCE
 && \

149 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

150 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

151 
	#__FAVOR_BSD
 1

	)

155 #ifde‡
_GNU_SOURCE


156 #unde‡
_ISOC95_SOURCE


157 
	#_ISOC95_SOURCE
 1

	)

158 #unde‡
_ISOC99_SOURCE


159 
	#_ISOC99_SOURCE
 1

	)

160 #unde‡
_POSIX_SOURCE


161 
	#_POSIX_SOURCE
 1

	)

162 #unde‡
_POSIX_C_SOURCE


163 
	#_POSIX_C_SOURCE
 200809L

	)

164 #unde‡
_XOPEN_SOURCE


165 
	#_XOPEN_SOURCE
 700

	)

166 #unde‡
_XOPEN_SOURCE_EXTENDED


167 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

168 #unde‡
_LARGEFILE64_SOURCE


169 
	#_LARGEFILE64_SOURCE
 1

	)

170 #unde‡
_BSD_SOURCE


171 
	#_BSD_SOURCE
 1

	)

172 #unde‡
_SVID_SOURCE


173 
	#_SVID_SOURCE
 1

	)

174 #unde‡
_ATFILE_SOURCE


175 
	#_ATFILE_SOURCE
 1

	)

180 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

181 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

182 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

183 
	#_BSD_SOURCE
 1

	)

184 
	#_SVID_SOURCE
 1

	)

191 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

192 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

193 
	#__USE_ISOC99
 1

	)

197 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

198 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

199 
	#__USE_ISOC95
 1

	)

204 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

205 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

206 
	#_POSIX_SOURCE
 1

	)

207 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

208 
	#_POSIX_C_SOURCE
 2

	)

209 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

210 
	#_POSIX_C_SOURCE
 199506L

	)

211 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

212 
	#_POSIX_C_SOURCE
 200112L

	)

214 
	#_POSIX_C_SOURCE
 200809L

	)

216 
	#__USE_POSIX_IMPLICITLY
 1

	)

219 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX
 1

	)

223 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


224 
	#__USE_POSIX2
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

228 
	#__USE_POSIX199309
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

232 
	#__USE_POSIX199506
 1

	)

235 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

236 
	#__USE_XOPEN2K
 1

	)

237 #unde‡
__USE_ISOC95


238 
	#__USE_ISOC95
 1

	)

239 #unde‡
__USE_ISOC99


240 
	#__USE_ISOC99
 1

	)

243 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

244 
	#__USE_XOPEN2K8
 1

	)

245 #unde‡
_ATFILE_SOURCE


246 
	#_ATFILE_SOURCE
 1

	)

249 #ifdef 
_XOPEN_SOURCE


250 
	#__USE_XOPEN
 1

	)

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

252 
	#__USE_XOPEN_EXTENDED
 1

	)

253 
	#__USE_UNIX98
 1

	)

254 #unde‡
_LARGEFILE_SOURCE


255 
	#_LARGEFILE_SOURCE
 1

	)

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

258 
	#__USE_XOPEN2K8
 1

	)

259 
	#__USE_XOPEN2K8XSI
 1

	)

261 
	#__USE_XOPEN2K
 1

	)

262 
	#__USE_XOPEN2KXSI
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #ifde‡
_XOPEN_SOURCE_EXTENDED


270 
	#__USE_XOPEN_EXTENDED
 1

	)

275 #ifde‡
_LARGEFILE_SOURCE


276 
	#__USE_LARGEFILE
 1

	)

279 #ifde‡
_LARGEFILE64_SOURCE


280 
	#__USE_LARGEFILE64
 1

	)

283 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

284 
	#__USE_FILE_OFFSET64
 1

	)

287 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


288 
	#__USE_MISC
 1

	)

291 #ifdef 
_BSD_SOURCE


292 
	#__USE_BSD
 1

	)

295 #ifdef 
_SVID_SOURCE


296 
	#__USE_SVID
 1

	)

299 #ifdef 
_ATFILE_SOURCE


300 
	#__USE_ATFILE
 1

	)

303 #ifdef 
_GNU_SOURCE


304 
	#__USE_GNU
 1

	)

307 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


308 
	#__USE_REENTRANT
 1

	)

311 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

312 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

313 #i‡!
__GNUC_PREREQ
 (4, 1)

314 #ifde‡
__GNUC_RH_RELEASE__


315 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


317 
	#__USE_FORTIFY_LEVEL
 0

	)

318 #ñi‡
_FORTIFY_SOURCE
 > 1

319 
	#__USE_FORTIFY_LEVEL
 2

	)

321 
	#__USE_FORTIFY_LEVEL
 1

	)

324 
	#__USE_FORTIFY_LEVEL
 0

	)

328 
	#__STDC_IEC_559__
 1

	)

329 
	#__STDC_IEC_559_COMPLEX__
 1

	)

332 
	#__STDC_ISO_10646__
 200009L

	)

340 #unde‡
__GNU_LIBRARY__


341 
	#__GNU_LIBRARY__
 6

	)

345 
	#__GLIBC__
 2

	)

346 
	#__GLIBC_MINOR__
 13

	)

348 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

349 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

352 #i‡
deföed
 
__GNUC__
 \

353 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

354 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

355 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

356 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

360 #i‚de‡
__ASSEMBLER__


361 #i‚de‡
_SYS_CDEFS_H


362 
	~<sys/cdefs.h
>

367 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


368 
	#__USE_LARGEFILE
 1

	)

369 
	#__USE_LARGEFILE64
 1

	)

375 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

376 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

377 && 
deföed
 
	g__exã∫_ölöe


378 
	#__USE_EXTERN_INLINES
 1

	)

386 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


59 #unde‡
__FDELT


60 #unde‡
__FDMASK


62 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

63 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

64 
	#__FDMASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

71 #ifde‡
__USE_XOPEN


72 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

75 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

76 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

78 } 
	tfd_£t
;

81 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

83 #ifde‡
__USE_MISC


85 
__fd_mask
 
	tfd_mask
;

88 
	#NFDBITS
 
__NFDBITS


	)

93 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

94 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

95 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

96 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

99 
__BEGIN_DECLS


109 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
);

114 #ifde‡
__USE_XOPEN2K


121 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

122 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

123 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

124 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

125 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__exãnsi⁄__


31 
	$gnu_dev_maj‹
 (
__dev
)

32 
__THROW
;

33 
__exãnsi⁄__


34 
	$gnu_dev_mö‹
 (
__dev
)

35 
__THROW
;

36 
__exãnsi⁄__


37 
	$gnu_dev_makedev
 (
__maj‹
,

38 
__mö‹
)

39 
__THROW
;

41 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


42 
__exãnsi⁄__
 
__exã∫_ölöe
 

43 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

45  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

46 
	}
}

48 
__exãnsi⁄__
 
__exã∫_ölöe
 

49 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

51  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

52 
	}
}

54 
__exãnsi⁄__
 
__exã∫_ölöe
 

55 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

57  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

58 | (((Ë(
__mö‹
 & ~0xff)) << 12)

59 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

60 
	}
}

65 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

66 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

67 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASM_X86_SIGCONTEXT_H


2 
	#_ASM_X86_SIGCONTEXT_H


	)

5 
	~<löux/ty≥s.h
>

7 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

8 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

9 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

23 
	s_Âx_sw_byãs
 {

24 
__u32
 
	mmagic1
;

25 
__u32
 
	mexãnded_size
;

28 
__u64
 
	mx°©e_bv
;

33 
__u32
 
	mx°©e_size
;

38 
__u32
 
	m∑ddög
[7];

41 #ifde‡
__i386__


56 
	s_Âªg
 {

57 
	msignifiˇnd
[4];

58 
	mexp⁄ít
;

61 
	s_Âxªg
 {

62 
	msignifiˇnd
[4];

63 
	mexp⁄ít
;

64 
	m∑ddög
[3];

67 
	s_xmmªg
 {

68 
	mñemít
[4];

71 
	s_Â°©e
 {

73 
	mcw
;

74 
	msw
;

75 
	mèg
;

76 
	mùoff
;

77 
	mcs£l
;

78 
	md©aoff
;

79 
	md©a£l
;

80 
_Âªg
 
	m_°
[8];

81 
	m°©us
;

82 
	mmagic
;

85 
	m_fx§_ív
[6];

86 
	mmxc§
;

87 
	mª£rved
;

88 
_Âxªg
 
	m_fx§_°
[8];

89 
_xmmªg
 
	m_xmm
[8];

90 
	m∑ddög1
[44];

93 
	m∑ddög2
[12];

94 
_Âx_sw_byãs
 
	msw_ª£rved
;

99 
	#X86_FXSR_MAGIC
 0x0000

	)

104 
	ssigc⁄ãxt
 {

105 
	mgs
, 
	m__gsh
;

106 
	mfs
, 
	m__fsh
;

107 
	mes
, 
	m__esh
;

108 
	mds
, 
	m__dsh
;

109 
	medi
;

110 
	mesi
;

111 
	mebp
;

112 
	me•
;

113 
	mebx
;

114 
	medx
;

115 
	mecx
;

116 
	móx
;

117 
	må≠no
;

118 
	mîr
;

119 
	meù
;

120 
	mcs
, 
	m__csh
;

121 
	meÊags
;

122 
	me•_©_sig«l
;

123 
	mss
, 
	m__ssh
;

124 
_Â°©e
 *
	mÂ°©e
;

125 
	mﬁdmask
;

126 
	m¸2
;

134 
	s_Â°©e
 {

135 
__u16
 
	mcwd
;

136 
__u16
 
	mswd
;

137 
__u16
 
	mtwd
;

139 
__u16
 
	mf›
;

140 
__u64
 
	mrù
;

141 
__u64
 
	mrdp
;

142 
__u32
 
	mmxc§
;

143 
__u32
 
	mmxc§_mask
;

144 
__u32
 
	m°_•a˚
[32];

145 
__u32
 
	mxmm_•a˚
[64];

146 
__u32
 
	mª£rved2
[12];

148 
__u32
 
	mª£rved3
[12];

149 
_Âx_sw_byãs
 
	msw_ª£rved
;

157 
	ssigc⁄ãxt
 {

158 
	mr8
;

159 
	mr9
;

160 
	mr10
;

161 
	mr11
;

162 
	mr12
;

163 
	mr13
;

164 
	mr14
;

165 
	mr15
;

166 
	mrdi
;

167 
	mrsi
;

168 
	mrbp
;

169 
	mrbx
;

170 
	mrdx
;

171 
	møx
;

172 
	mrcx
;

173 
	mr•
;

174 
	mrù
;

175 
	meÊags
;

176 
	mcs
;

177 
	mgs
;

178 
	mfs
;

179 
	m__∑d0
;

180 
	mîr
;

181 
	må≠no
;

182 
	mﬁdmask
;

183 
	m¸2
;

184 
_Â°©e
 *
	mÂ°©e
;

185 
	mª£rved1
[8];

190 
	s_xßve_hdr
 {

191 
__u64
 
	mx°©e_bv
;

192 
__u64
 
	mª£rved1
[2];

193 
__u64
 
	mª£rved2
[5];

196 
	s_ymmh_°©e
 {

198 
__u32
 
	mymmh_•a˚
[64];

207 
	s_x°©e
 {

208 
_Â°©e
 
	mÂ°©e
;

209 
_xßve_hdr
 
	mx°©e_hdr
;

210 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	#dma_addr_t
 
dma_addr_t


	)

6 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

29 
	#__bsw≠_c⁄°™t_16
(
x
) \

30 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

32 #ifde‡
__GNUC__


33 #i‡
__GNUC__
 >= 2

34 
	#__bsw≠_16
(
x
) \

35 (
__exãnsi⁄__
 \

36 ({ 
__v
, 
__x
 = (Ë(
x
); \

37 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

38 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

40 
	`__asm__
 ("rorw $8, %w0" \

41 : "Ù" (
__v
) \

42 : "0" (
__x
) \

44 
__v
; }))

	)

47 
	#__bsw≠_16
(
x
) \

48 (
__exãnsi⁄__
 \

49 ({ 
__x
 = (Ë(
x
); \

50 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

53 
__ölöe
 

54 
	$__bsw≠_16
 (
__bsx
)

56  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

57 
	}
}

61 
	#__bsw≠_c⁄°™t_32
(
x
) \

62 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

63 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

65 #ifde‡
__GNUC__


66 #i‡
__GNUC__
 >= 2

69 #i‡!
deföed
 
__i486__
 && !deföed 
__≥¡ium__
 && !deföed 
__≥¡ium¥o__
 \

70 && !
deföed
 
	g__≥¡ium4__
 && !deföed 
	g__k8__
 && !deföed 
	g__©hl⁄__
 \

71 && !
deföed
 
	g__k6__
 && !deföed 
	g__noc⁄a__
 && !deföed 
	g__c‹e2__
 \

72 && !
deföed
 
	g__geode__
 && !deföed 
	g__amdÁm10__


73 
	#__bsw≠_32
(
x
) \

74 (
__exãnsi⁄__
 \

75 ({ 
__v
, 
__x
 = (
x
); \

76 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

77 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

79 
	`__asm__
 ("rorw $8, %w0;" \

82 : "Ù" (
__v
) \

83 : "0" (
__x
) \

85 
__v
; }))

	)

87 
	#__bsw≠_32
(
x
) \

88 (
__exãnsi⁄__
 \

89 ({ 
__v
, 
__x
 = (
x
); \

90 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

91 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

93 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

94 
__v
; }))

	)

97 
	#__bsw≠_32
(
x
) \

98 (
__exãnsi⁄__
 \

99 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

102 
__ölöe
 

103 
	$__bsw≠_32
 (
__bsx
)

105  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

106 
	}
}

110 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

112 
	#__bsw≠_c⁄°™t_64
(
x
) \

113 ((((
x
) & 0xff00000000000000ull) >> 56) \

114 | (((
x
) & 0x00ff000000000000ull) >> 40) \

115 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

116 | (((
x
) & 0x000000ff00000000ull) >> 8) \

117 | (((
x
) & 0x00000000ff000000ull) << 8) \

118 | (((
x
) & 0x0000000000ff0000ull) << 24) \

119 | (((
x
) & 0x000000000000ff00ull) << 40) \

120 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

122 
	#__bsw≠_64
(
x
) \

123 (
__exãnsi⁄__
 \

124 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

125 
__l
[2]; } 
__w
, 
__r
; \

126 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

127 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

130 
__w
.
__Œ
 = (
x
); \

131 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

132 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

134 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

103 
	m__RLIMIT_NLIMITS
 = 15,

104 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


105 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

106 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

110 #i‚de‡
__USE_FILE_OFFSET64


111 
	#RLIM_INFINITY
 (()(~0UL))

	)

113 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

116 #ifde‡
__USE_LARGEFILE64


117 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

121 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

122 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

126 #i‚de‡
__USE_FILE_OFFSET64


127 
__æim_t
 
	tæim_t
;

129 
__æim64_t
 
	tæim_t
;

131 #ifde‡
__USE_LARGEFILE64


132 
__æim64_t
 
	tæim64_t
;

135 
	sæimô


138 
æim_t
 
	mæim_cur
;

140 
æim_t
 
	mæim_max
;

143 #ifde‡
__USE_LARGEFILE64


144 
	sæimô64


147 
æim64_t
 
	mæim_cur
;

149 
æim64_t
 
	mæim_max
;

154 
	e__rußge_who


157 
	mRUSAGE_SELF
 = 0,

158 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

161 
	mRUSAGE_CHILDREN
 = -1

162 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

164 #ifde‡
__USE_GNU


167 
	mRUSAGE_THREAD
 = 1

168 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

170 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

174 
	#__√ed_timevÆ


	)

175 
	~<bôs/time.h
>

178 
	srußge


181 
timevÆ
 
	mru_utime
;

183 
timevÆ
 
	mru_°ime
;

185 
	mru_maxrss
;

188 
	mru_ixrss
;

190 
	mru_idrss
;

192 
	mru_i§ss
;

195 
	mru_möÊt
;

197 
	mru_majÊt
;

199 
	mru_nsw≠
;

202 
	mru_öblock
;

204 
	mru_oublock
;

206 
	mru_msg¢d
;

208 
	mru_msgrcv
;

210 
	mru_nsig«ls
;

214 
	mru_nvcsw
;

217 
	mru_nivcsw
;

221 
	#PRIO_MIN
 -20

	)

222 
	#PRIO_MAX
 20

	)

226 
	e__¥i‹ôy_which


228 
	mPRIO_PROCESS
 = 0,

229 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

230 
	mPRIO_PGRP
 = 1,

231 
	#PRIO_PGRP
 
PRIO_PGRP


	)

232 
	mPRIO_USER
 = 2

233 
	#PRIO_USER
 
PRIO_USER


	)

237 
	g__BEGIN_DECLS


239 #ifde‡
__USE_GNU


241 #i‚de‡
__USE_FILE_OFFSET64


242 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

243 
__c⁄°
 
æimô
 *
__√w_limô
,

244 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

246 #ifde‡
__REDIRECT_NTH


247 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

248 
__æimô_ªsour˚
 
__ªsour˚
,

249 
__c⁄°
 
æimô
 *
__√w_limô
,

250 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

252 
	#¥limô
 
¥limô64


	)

255 #ifde‡
__USE_LARGEFILE64


256 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

257 
__c⁄°
 
æimô64
 *
__√w_limô
,

258 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

262 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

25 
	#__FD_ZERO
(
fd•
) \

27 
__d0
, 
__d1
; \

28 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

29 : "=c" (
__d0
), "=D" (
__d1
) \

30 : "a" (0), "0" ( (
fd_£t
) \

31 /  (
__fd_mask
)), \

32 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

34 } 0)

	)

40 
	#__FD_ZERO
(
£t
) \

42 
__i
; \

43 
fd_£t
 *
__¨r
 = (
£t
); \

44 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

45 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

46 } 0)

	)

50 
	#__FD_SET
(
d
, 
£t
) \

51 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] |
	`__FDMASK
 (d)))

	)

52 
	#__FD_CLR
(
d
, 
£t
) \

53 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] &~
	`__FDMASK
 (d)))

	)

54 
	#__FD_ISSET
(
d
, 
£t
) \

55 ((
	`__FDS_BITS
 (
£t
)[
	`__FDELT
 (
d
)] & 
	`__FDMASK
 (d)Ë!0)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (3,1)

228 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

229 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

231 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

232 
	#__©åibuã_noölöe__


	)

236 #i‡
__GNUC_PREREQ
 (3,2)

237 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

239 
	#__©åibuã_dïªˇãd__


	)

248 #i‡
__GNUC_PREREQ
 (2,8)

249 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

251 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

258 #i‡
__GNUC_PREREQ
 (2,97)

259 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

260 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

262 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

267 #i‡
__GNUC_PREREQ
 (3,3)

268 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

270 
	#__n⁄nuŒ
(
∑øms
)

	)

275 #i‡
__GNUC_PREREQ
 (3,4)

276 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

277 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

278 #i‡
__USE_FORTIFY_LEVEL
 > 0

279 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

282 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

284 #i‚de‡
__wur


285 
	#__wur


	)

289 #i‡
__GNUC_PREREQ
 (3,2)

290 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

292 
	#__Æways_ölöe
 
__ölöe


	)

297 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

298 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

299 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

300 && 
__GNUC_RH_RELEASE__
 >= 31)

301 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


302 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

303 #i‡
__GNUC_PREREQ
 (4,3) \

304 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

305 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

306 && 
__GNUC_RH_RELEASE__
 >= 31)

307 
	#__exã∫_Æways_ölöe
 \

308 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

310 
	#__exã∫_Æways_ölöe
 \

311 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

314 
	#__exã∫_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__exã∫_Æways_ölöe
 \

317 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

319 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

326 #i‡
__GNUC_PREREQ
 (4,3) \

327 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

328 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

329 && 
__GNUC_RH_RELEASE__
 >= 31)

330 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

331 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

338 #i‡!
__GNUC_PREREQ
 (2,8)

339 
	#__exãnsi⁄__


	)

343 #i‡!
__GNUC_PREREQ
 (2,92)

344 
	#__ª°ri˘


	)

350 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


351 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

353 #ifde‡
__GNUC__


354 
	#__ª°ri˘_¨r


	)

356 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

357 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

360 
	#__ª°ri˘_¨r


	)

365 
	~<bôs/w‹dsize.h
>

367 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


368 
	#__LDBL_COMPAT
 1

	)

369 #ifde‡
__REDIRECT


370 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

371 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

372 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

373 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

374 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

375 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

376 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

377 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

378 
	#__LDBL_REDIR_DECL
(
«me
) \

379 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

380 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

381 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

382 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

383 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

386 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


387 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

388 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

389 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

390 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

391 
	#__LDBL_REDIR_DECL
(
«me
)

	)

392 #ifde‡
__REDIRECT


393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

394 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

395 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

9 #i‚de‡
__ASSEMBLY__


11 
	tumode_t
;

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_ÁnŸify_öô


	)

15 
	#__°ub_ÁnŸify_m¨k


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_gây


	)

20 
	#__°ub_lchmod


	)

21 
	#__°ub_¥limô


	)

22 
	#__°ub_¥limô64


	)

23 
	#__°ub_ªvoke


	)

24 
	#__°ub_£éogö


	)

25 
	#__°ub_sigªtu∫


	)

26 
	#__°ub_s°k


	)

27 
	#__°ub_°ty


	)

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
172
4718
linux-0.11/fs/bitmap.c
linux-0.11/fs/block_dev.c
linux-0.11/fs/buffer.c
linux-0.11/fs/char_dev.c
linux-0.11/fs/exec.c
linux-0.11/fs/fcntl.c
linux-0.11/fs/file_dev.c
linux-0.11/fs/file_table.c
linux-0.11/fs/inode.c
linux-0.11/fs/ioctl.c
linux-0.11/fs/namei.c
linux-0.11/fs/open.c
linux-0.11/fs/pipe.c
linux-0.11/fs/read_write.c
linux-0.11/fs/stat.c
linux-0.11/fs/super.c
linux-0.11/fs/truncate.c
linux-0.11/include/a.out.h
linux-0.11/include/asm/io.h
linux-0.11/include/asm/memory.h
linux-0.11/include/asm/segment.h
linux-0.11/include/asm/system.h
linux-0.11/include/const.h
linux-0.11/include/ctype.h
linux-0.11/include/errno.h
linux-0.11/include/fcntl.h
linux-0.11/include/linux/config.h
linux-0.11/include/linux/fdreg.h
linux-0.11/include/linux/fs.h
linux-0.11/include/linux/hdreg.h
linux-0.11/include/linux/head.h
linux-0.11/include/linux/kernel.h
linux-0.11/include/linux/mm.h
linux-0.11/include/linux/sched.h
linux-0.11/include/linux/sys.h
linux-0.11/include/linux/tty.h
linux-0.11/include/signal.h
linux-0.11/include/stdarg.h
linux-0.11/include/stddef.h
linux-0.11/include/string.h
linux-0.11/include/sys/stat.h
linux-0.11/include/sys/times.h
linux-0.11/include/sys/types.h
linux-0.11/include/sys/utsname.h
linux-0.11/include/sys/wait.h
linux-0.11/include/termios.h
linux-0.11/include/time.h
linux-0.11/include/unistd.h
linux-0.11/include/utime.h
linux-0.11/init/main.c
linux-0.11/kernel/blk_drv/blk.h
linux-0.11/kernel/blk_drv/floppy.c
linux-0.11/kernel/blk_drv/hd.c
linux-0.11/kernel/blk_drv/ll_rw_blk.c
linux-0.11/kernel/blk_drv/ramdisk.c
linux-0.11/kernel/chr_drv/console.c
linux-0.11/kernel/chr_drv/keyboard.S
linux-0.11/kernel/chr_drv/serial.c
linux-0.11/kernel/chr_drv/tty_io.c
linux-0.11/kernel/chr_drv/tty_ioctl.c
linux-0.11/kernel/exit.c
linux-0.11/kernel/fork.c
linux-0.11/kernel/math/math_emulate.c
linux-0.11/kernel/mktime.c
linux-0.11/kernel/panic.c
linux-0.11/kernel/printk.c
linux-0.11/kernel/sched.c
linux-0.11/kernel/signal.c
linux-0.11/kernel/sys.c
linux-0.11/kernel/traps.c
linux-0.11/kernel/vsprintf.c
linux-0.11/lib/_exit.c
linux-0.11/lib/close.c
linux-0.11/lib/ctype.c
linux-0.11/lib/dup.c
linux-0.11/lib/errno.c
linux-0.11/lib/execve.c
linux-0.11/lib/malloc.c
linux-0.11/lib/open.c
linux-0.11/lib/setsid.c
linux-0.11/lib/string.c
linux-0.11/lib/wait.c
linux-0.11/lib/write.c
linux-0.11/mm/memory.c
/usr/include/a.out.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/linux/fdreg.h
/usr/include/linux/fs.h
/usr/include/linux/hdreg.h
/usr/include/linux/kernel.h
/usr/include/linux/sched.h
/usr/include/linux/tty.h
/usr/include/signal.h
/usr/include/string.h
/usr/include/sys/stat.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/sys/wait.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/utime.h
/usr/include/bits/a.out.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/termios.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/linux/ioctl.h
/usr/include/linux/limits.h
/usr/include/linux/types.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/xlocale.h
/usr/include/asm/ioctl.h
/usr/include/asm/sigcontext.h
/usr/include/asm/types.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wordsize.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/posix_types.h
/usr/include/stdlib.h
/usr/include/sys/cdefs.h
/usr/include/alloca.h
/usr/include/asm-generic/ioctl.h
/usr/include/asm-generic/types.h
/usr/include/asm/errno.h
/usr/include/asm/posix_types.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/stddef.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
